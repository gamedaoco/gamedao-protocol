/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Control,
  ControlInterface,
} from "../../../../contracts/modules/Control/Control";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidRegistryAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleNotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRegistry",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ModuleDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ModuleEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "ModuleInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes8",
        name: "id",
        type: "bytes8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "OrganizationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes8",
        name: "id",
        type: "bytes8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldPrime",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newPrime",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "OrganizationPrimeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes8",
        name: "id",
        type: "bytes8",
      },
      {
        indexed: false,
        internalType: "enum IControl.OrgState",
        name: "oldState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IControl.OrgState",
        name: "newState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "OrganizationStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPERATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
    ],
    name: "canWithdrawStake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        internalType: "enum IControl.OrgType",
        name: "orgType",
        type: "uint8",
      },
      {
        internalType: "enum IControl.AccessModel",
        name: "accessModel",
        type: "uint8",
      },
      {
        internalType: "enum IControl.FeeModel",
        name: "feeModel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "memberLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "membershipFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gameStakeRequired",
        type: "uint256",
      },
    ],
    name: "createOrganization",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyUnpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllOrganizations",
    outputs: [
      {
        components: [
          {
            internalType: "bytes8",
            name: "id",
            type: "bytes8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "prime",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "enum IControl.OrgType",
            name: "orgType",
            type: "uint8",
          },
          {
            internalType: "enum IControl.AccessModel",
            name: "accessModel",
            type: "uint8",
          },
          {
            internalType: "enum IControl.FeeModel",
            name: "feeModel",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "memberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "memberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCampaigns",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalProposals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "membershipFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStakeRequired",
            type: "uint256",
          },
          {
            internalType: "enum IControl.OrgState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IControl.Organization[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "id",
        type: "bytes8",
      },
    ],
    name: "getOrganization",
    outputs: [
      {
        components: [
          {
            internalType: "bytes8",
            name: "id",
            type: "bytes8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "prime",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "enum IControl.OrgType",
            name: "orgType",
            type: "uint8",
          },
          {
            internalType: "enum IControl.AccessModel",
            name: "accessModel",
            type: "uint8",
          },
          {
            internalType: "enum IControl.FeeModel",
            name: "feeModel",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "memberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "memberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCampaigns",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalProposals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "membershipFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStakeRequired",
            type: "uint256",
          },
          {
            internalType: "enum IControl.OrgState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IControl.Organization",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrganizationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
    ],
    name: "getOrganizationStake",
    outputs: [
      {
        components: [
          {
            internalType: "bytes8",
            name: "organizationId",
            type: "bytes8",
          },
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockPeriod",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct IStaking.OrganizationStake",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IControl.OrgState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "getOrganizationsByState",
    outputs: [
      {
        components: [
          {
            internalType: "bytes8",
            name: "id",
            type: "bytes8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "prime",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "enum IControl.OrgType",
            name: "orgType",
            type: "uint8",
          },
          {
            internalType: "enum IControl.AccessModel",
            name: "accessModel",
            type: "uint8",
          },
          {
            internalType: "enum IControl.FeeModel",
            name: "feeModel",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "memberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "memberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCampaigns",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalProposals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "membershipFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStakeRequired",
            type: "uint256",
          },
          {
            internalType: "enum IControl.OrgState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IControl.Organization[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
    ],
    name: "isOrganizationActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "onModuleDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "onModuleEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
      {
        components: [
          {
            internalType: "bytes8",
            name: "id",
            type: "bytes8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "prime",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "enum IControl.OrgType",
            name: "orgType",
            type: "uint8",
          },
          {
            internalType: "enum IControl.AccessModel",
            name: "accessModel",
            type: "uint8",
          },
          {
            internalType: "enum IControl.FeeModel",
            name: "feeModel",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "memberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "memberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCampaigns",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalProposals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "membershipFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStakeRequired",
            type: "uint256",
          },
          {
            internalType: "enum IControl.OrgState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IControl.Organization",
        name: "org",
        type: "tuple",
      },
    ],
    name: "registerOrganization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContract",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
      {
        internalType: "uint256",
        name: "memberCount",
        type: "uint256",
      },
    ],
    name: "updateMemberCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
      {
        internalType: "address",
        name: "newPrime",
        type: "address",
      },
    ],
    name: "updateOrganizationPrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
      {
        internalType: "enum IControl.OrgState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "updateOrganizationState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000031576200001f62000018620000e5565b906200028a565b6040516132cd620006c582396132cd90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006e57604052565b62000036565b906200008b6200008360405190565b92836200004c565b565b6001600160a01b031690565b90565b6001600160a01b038116036200003157565b905051906200008b826200009c565b919060408382031262000031576200009990620000db8185620000ae565b93602001620000ae565b620001086200399280380380620000fc8162000074565b928339810190620000bd565b9091565b6001600160401b0381116200006e57602090601f01601f19160190565b906200013f62000139836200010c565b62000074565b918252565b62000150600562000129565b640312e302e360dc1b602082015290565b6200009962000144565b6200008d62000099620000999290565b62000099906200016b565b156200018e57565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642067616d6520746f6b656e20616464726573730000000000006044820152606490fd5b0390fd5b15620001df57565b60405162461bcd60e51b815280620001d3600482016020808252818101527f496e76616c6964207374616b696e6720636f6e74726163742061646472657373604082015260600190565b62000099906200008d906001600160a01b031682565b620000999062000229565b62000099906200023f565b906001600160a01b03905b9181191691161790565b906200027e6200009962000286926200024a565b825462000255565b9055565b6200008b91620002f6620002fc6200030493620002b0620002aa62000161565b6200030c565b620002f6620002e4620002c460006200017b565b6200008d6001600160a01b0382166001600160a01b038616141562000186565b6001600160a01b0386161415620001d7565b6200024a565b60086200026a565b60096200026a565b6200008b906200051b565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801562000350575b60208310146200034a57565b62000317565b91607f16916200033e565b9160001960089290920291821b911b62000260565b6200009962000099620000999290565b91906200039562000099620002869362000370565b9083546200035b565b6200008b9160009162000380565b818110620003b8575050565b80620003c860006001936200039e565b01620003ac565b9190601f8111620003df57505050565b620003f36200008b93600052602060002090565b906020601f84018190048301931062000417575b6020601f909101040190620003ac565b909150819062000407565b906200042c815190565b906001600160401b0382116200006e5762000454826200044d85546200032d565b85620003cf565b602090601f831160011462000493576200028692916000918362000487575b5050600019600883021c1916906002021790565b01519050388062000473565b601f19831691620004a985600052602060002090565b9260005b818110620004ea57509160029391856001969410620004d0575b50505002019055565b01516000196008601f8516021c19169055388080620004c7565b91936020600181928787015181550195019201620004ad565b906200008b9162000422565b62000099600062000370565b62000532906200052a620005a7565b600462000503565b6200008b620005406200050f565b6200054d33809262000616565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177562000616565b62000099600162000370565b906000199062000260565b906200059f62000099620002869262000370565b825462000580565b620005b1620005ec565b6200008b620005bf62000574565b60026200058b565b9060ff9062000260565b90620005e4620000996200028692151590565b8254620005c7565b6200008b60006001620005d1565b905b600052602052604060002090565b90620005fc906200024a565b906200062b620006278284620006a5565b1590565b62000634575050565b6200065a6001620006548360006200064d8782620005fa565b016200060a565b620005d1565b3390620006946200068d6200068d7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9590565b926200024a565b926200069f60405190565b600090a4565b6200009991620006bd916200064d60009182620005fa565b5460ff169056fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461028d578063086ed93814610288578063248a9ca3146102835780632902460d1461027e5780632f2ff15d1461027957806336568abe14610274578063392e53cd1461026f5780633f4ba83a1461026a578063426d86951461026557806344018cf0146102605780634a4e3bd51461025b57806351858e271461025657806354fd4d50146102515780635734e5e31461024c5780635bb47808146102475780635c975abb1461024257806375b238fc1461023d5780637b103999146102385780638456cb5914610233578063919f550f1461022e57806391d1485414610229578063a1308f27146101de578063a217fddf14610224578063aa7318aa1461021f578063b24125501461021a578063b4ae840f14610215578063b81fa5a414610210578063bb7835d61461020b578063c3dfdae614610206578063c45a015514610201578063c4d66de8146101fc578063cdb12a80146101f7578063d0a1aec4146101f2578063d547741f146101ed578063e1ce028a146101e8578063ebf8a3e6146101e3578063ed2f21f5146101de578063ee99205c146101d9578063f5b541a6146101d45763fb24973c036102a557610f64565b610f2b565b610f10565b6108f6565b610eec565b610ed3565b610e97565b610e57565b610da1565b610aea565b610acf565b610a9c565b610a17565b6109dc565b6109c1565b6109ac565b610969565b61094e565b6108da565b6108b3565b61082a565b6107f4565b6107bb565b6107a0565b610788565b610758565b610731565b610708565b6106f0565b6106d5565b6106ae565b610527565b61050c565b6104f3565b6104da565b6104a2565b61041a565b6103de565b6102d4565b6001600160e01b031981165b036102a557565b600080fd5b905035906102b782610292565b565b906020828203126102a5576102cd916102aa565b90565b9052565b346102a5576103016102ef6102ea3660046102b9565b610f9d565b60405191829182901515815260200190565b0390f35b60009103126102a557565b60005b8381106103235750506000910152565b8181015183820152602001610313565b61035461035d60209361036793610348815190565b80835293849260200190565b95869101610310565b601f01601f191690565b0190565b6001600160a01b031690565b634e487b7160e01b600052602160045260246000fd5b6004111561039757565b610377565b906102b78261038d565b6102cd9061039c565b6102d0906103a6565b6003111561039757565b906102b7826103b8565b6102cd906103c2565b6102d0906103cc565b346102a5576103ee366004610305565b6131d0565b8061029e565b905035906102b7826103f3565b906020828203126102a5576102cd916103f9565b346102a557610301610435610430366004610406565b611036565b6040515b9182918290815260200190565b6001600160c01b0319811661029e565b905035906102b782610446565b6001600160a01b03811661029e565b905035906102b782610463565b91906040838203126102a5576102cd906104998185610456565b93602001610472565b346102a5576104bb6104b536600461047f565b9061273f565b604051005b91906040838203126102a5576102cd9061049981856103f9565b346102a5576104bb6104ed3660046104c0565b90611075565b346102a5576104bb6105063660046104c0565b9061123e565b346102a55761051c366004610305565b6103016102ef6119cd565b346102a557610537366004610305565b6104bb611a56565b906020828203126102a5576102cd91610456565b80516001600160c01b0319168252906102cd9061022080610599610587610240850160208801518682036020880152610333565b60408701518582036040870152610333565b6060808701516001600160a01b031690850152946080818101516001600160a01b03169085015260a0818101516001600160a01b0316908501526105e560c082015160c08601906103af565b6105f760e082015160e08601906103d5565b61060b6101008201516101008601906103d5565b61061c610120820151610120860152565b61062d610140820151610140860152565b61063e610160820151610160860152565b61064f610180820151610180860152565b6106606101a08201516101a0860152565b6106716101c08201516101c0860152565b6106856101e08201516101e08601906103af565b610696610200820151610200860152565b0151910152565b60208082526102cd92910190610553565b346102a5576103016106c96106c436600461053f565b6131a3565b6040519182918261069d565b346102a5576103016102ef6106eb36600461053f565b612ef3565b346102a557610700366004610305565b6104bb611aa8565b346102a557610718366004610305565b6104bb611a7f565b60208082526102cd92910190610333565b346102a557610741366004610305565b61030161074c61171e565b60405191829182610720565b346102a557610768366004610305565b61030161043560075490565b906020828203126102a5576102cd91610472565b346102a5576104bb61079b366004610774565b611cdd565b346102a5576107b0366004610305565b6103016102ef61135d565b346102a5576107cb366004610305565b6103017fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610435565b346102a557610804366004610305565b61030161080f6119d7565b6040515b918291826001600160a01b03909116815260200190565b346102a55761083a366004610305565b6104bb611a19565b80516001600160c01b03191682526020808201516001600160a01b0316908301526102b7919060a090819061087c60408201516040860152565b61088b60608201516060860152565b61089a60808201516080860152565b01511515910152565b60c0810192916102b79190610842565b346102a5576103016108ce6108c936600461053f565b612e1c565b604051918291826108a3565b346102a5576103016102ef6108f03660046104c0565b90611006565b346102a557610906366004610305565b6103017fbdded29a54e6a5d6169bedea55373b06f57e35d7b0f67ac187565b435e2cc943610435565b6102cd6102cd6102cd9290565b6102cd600061092f565b6102cd61093c565b346102a55761095e366004610305565b610301610435610946565b346102a557610979366004610305565b6104bb6119c5565b600411156102a557565b905035906102b782610981565b906020828203126102a5576102cd9161098b565b346102a5576109bc366004610998565b613215565b346102a5576103016102ef6109d736600461053f565b61325a565b346102a5576104bb6109ef36600461053f565b612cae565b91906040838203126102a5576102cd90610a0e8185610456565b9360200161098b565b346102a5576104bb610a2a3660046109f4565b9061261c565b6102cd916008021c6001600160a01b031690565b906102cd9154610a30565b6102cd60006008610a44565b61036b6102cd6102cd926001600160a01b031690565b6102cd90610a5b565b6102cd90610a71565b6102d090610a7a565b6020810192916102b79190610a83565b346102a557610aac366004610305565b610301610ab7610a4f565b60405191829182610a8c565b6102cd6000600a610a44565b346102a557610adf366004610305565b610301610ab7610ac3565b346102a5576104bb610afd366004610774565b6117b1565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610b3a57604052565b610b02565b906102b7610b4c60405190565b9283610b18565b67ffffffffffffffff8111610b3a57602090601f01601f19160190565b90826000939282370152565b90929192610b91610b8c82610b53565b610b3f565b938185526020850190828401116102a5576102b792610b70565b9080601f830112156102a5578160206102cd93359101610b7c565b600311156102a557565b905035906102b782610bc6565b919091610240818403126102a557610bf6610240610b3f565b926000610c038284610456565b90850152602082013567ffffffffffffffff81116102a55781610c27918401610bab565b602085015260408201359067ffffffffffffffff82116102a557610c5081610d65938501610bab565b60408601526060610c6382828601610472565b908601526080610c7582828601610472565b9086015260a0610c8782828601610472565b9086015260c0610c998282860161098b565b9086015260e0610cab82828601610bd0565b90860152610100610cbe82828601610bd0565b90860152610120610cd1828286016103f9565b90860152610140610ce4828286016103f9565b90860152610160610cf7828286016103f9565b90860152610180610d0a828286016103f9565b908601526101a0610d1d828286016103f9565b908601526101c0610d30828286016103f9565b908601526101e0610d438282860161098b565b90860152610200610d56828286016103f9565b908601526102208093016103f9565b90830152565b9190916040818403126102a557610d828382610456565b92602082013567ffffffffffffffff81116102a5576102cd9201610bdd565b346102a5576104bb610db4366004610d6b565b906122bb565b9190610100838203126102a557823567ffffffffffffffff81116102a55781610de4918501610bab565b92602081013567ffffffffffffffff81116102a55782610e05918301610bab565b92610e13836040840161098b565b92610e218160608501610bd0565b92610e2f8260808301610bd0565b926102cd610e408460a085016103f9565b93610e4e8160c086016103f9565b9360e0016103f9565b346102a557610301610e7c610e6d366004610dba565b969590959491949392936123cd565b604051918291826001600160c01b0319909116815260200190565b346102a5576104bb610eaa3660046104c0565b906111c2565b91906040838203126102a5576102cd90610eca8185610456565b936020016103f9565b346102a5576104bb610ee6366004610eb0565b90612788565b346102a557610efc366004610305565b6104bb611963565b6102cd60006009610a44565b346102a557610f20366004610305565b610301610ab7610f04565b346102a557610f3b366004610305565b6103017f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929610435565b346102a557610f74366004610305565b6103017ff83fbdecd7018694593b521db8f6c864cd19f8450388b844650c68334dac9ab5610435565b637965db0b60e01b6001600160e01b0319821614908115610fbc575090565b6102cd91506001600160e01b0319166301ffc9a760e01b1490565b905b600052602052604060002090565b90610fd990610a7a565b6102cd905b60ff1690565b6102cd9054610ff1565b6102cd916110209161101a60009182610fd7565b01610fe7565b610ffc565b6102cd9081565b6102cd9054611025565b600161104f6102cd92611047600090565b506000610fd7565b0161102c565b906102b79161106b61106682611036565b61107f565b906102b79161128e565b906102b791611055565b6102b790339061111b565b6102cd9061092f565b6103676110ab926020926110a5815190565b94859290565b93849101610310565b6110f26102cd93926110ec6110ec937f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260170190565b90611093565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000815260110190565b9061112d6111298284611006565b1590565b611135575050565b6111a3916102cd61115161114b61118b946115f5565b9261108a565b6111666020916111608361092f565b90611495565b9261117f61117360405190565b948593840192836110b4565b90810382520382610b18565b60405162461bcd60e51b815291829160048301610720565b0390fd5b906102b7916111b861106682611036565b906102b791611306565b906102b7916111a7565b156111d357565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608490fd5b6102b7919061125f61124f3361036b565b6001600160a01b038416146111cc565b611306565b9060ff905b9181191691161790565b906112836102cd61128a92151590565b8254611264565b9055565b9061129c6111298284611006565b6112a4575050565b6112be60016112b983600061101a8782610fd7565b611273565b33906112f46112ee6112ee7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9590565b92610a7a565b926112fe60405190565b80805b0390a4565b906113118183611006565b611319575050565b61132d60006112b9838261101a8782610fd7565b33906112f46112ee6112ee7ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9590565b6102cd6001610ffc565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561139057565b611367565b9190820180921161139057565b906113af610b8c83610b53565b918252565b369037565b906102b76113cf6113c9846113a2565b93610b53565b601f1901602084016113b4565b634e487b7160e01b600052603260045260246000fd5b906113fb825190565b811015611409570160200190565b6113dc565b8015611390576000190190565b610ff66102cd6102cd9290565b6102cd9061144061143c6102cd9460ff1690565b9190565b901c90565b1561144c57565b60405162461bcd60e51b8152806111a3600482016020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b91906002926114c66114c16114b2846114ad8861092f565b61137d565b6114bb8761092f565b90611395565b6113b9565b9160009060306114de6114d88461092f565b866113f2565b5361151661150d600f60fb1b926114ad6001998a95871a6115076115018861092f565b8b6113f2565b5361092f565b6114bb8361092f565b905b61153a575b506102cd9394509061153461143c6102cd9361092f565b14611445565b916115448661092f565b8311156115bf577f3031323334353637383961626364656600000000000000000000000000000000611576600f61092f565b82169060108210156114095787926115966115b3926115b9941a60f81b90565b851a6115a287896113f2565b536115ad600461141b565b90611428565b9361140e565b90611518565b9161151d565b6102cd6102cd6102cd926001600160a01b031690565b6102cd601461141b565b6102cd6102cd6102cd9260ff1690565b61161261160d6102cd92611607606090565b50610a71565b6115c5565b61116061161d6115db565b6115e5565b1490565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801561165c575b602083101461165757565b611626565b91607f169161164c565b805460009392916116836116798361163c565b8085529360200190565b91600181169081156116d5575060011461169c57505050565b6116af9192939450600052602060002090565b916000925b8184106116c15750500190565b8054848401526020909301926001016116b4565b92949550505060ff1916825215156020020190565b906102cd91611666565b906102b761170e9261170560405190565b938480926116ea565b0383610b18565b6102cd906116f4565b6102cd6004611715565b6102cd9060a01c610ff6565b6102cd9054611728565b61036b6102cd6102cd9290565b6102cd9061173e565b906001600160a01b0390611269565b906117736102cd61128a92610a7a565b8254611754565b9074ff00000000000000000000000000000000000000009060a01b611269565b906117aa6102cd61128a92151590565b825461177a565b6117bb6003611734565b61189c576117cc61036b600061174b565b6001600160a01b0382161461188a576117ee6117e782610a7a565b6003611763565b6117fa6001600361179a565b611824817fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561128e565b61184e817f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92961128e565b6118787f27b541a16df0902e262f34789782092ab25125513b8ed73608e802951771b92891610a7a565b9061188260405190565b80805b0390a2565b604051637bfd2e8360e01b8152600490fd5b604051637396742f60e11b8152600490fd5b6102cd9061036b565b6102cd90546118ae565b336118e76118da61036b6118d560036118b7565b610a7a565b916001600160a01b031690565b036118f4576102b7611906565b6040516310f5403960e31b8152600490fd5b6119136111296003611734565b61191f576102b7611931565b604051633165f6e960e21b8152600490fd5b7fa866f3901ec84758a10f30e8953c3818eef73da93dfa46cb6aa5b726fb65813f61195b60405190565b80805b0390a1565b6102b76118c1565b3361197f6118da61036b6118d560036118b7565b036118f4576102b76119946111296003611734565b61191f576102b77f6dff2fe8fbb5b23bf0583bf5b2157ff62ca7e27f2fb4f404914cd0c205ced5cc61195b60405190565b6102b761196b565b6102cd6003611734565b6102cd6118d560036118b7565b611a0d7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561107f565b6102b75b6102b7611acc565b6102b76119e4565b611a4a7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561107f565b6102b75b6102b7611b9c565b6102b7611a21565b33611a726118da61036b6118d560036118b7565b036118f4576102b7611a11565b6102b7611a5e565b33611a9b6118da61036b6118d560036118b7565b036118f4576102b7611a4e565b6102b7611a87565b611abd6111296003611734565b61191f576102b76102b7611b19565b6102b7611ab0565b611adc611b6d565b6102b7611aea600180611273565b3361195e7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161081360405190565b6102b7611ad4565b15611b2857565b60405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606490fd5b6102b7611b7b61112961135d565b611b21565b611b8d6111296003611734565b61191f576102b76102b7611bea565b6102b7611b80565b611bac611c3e565b6102b7611bbb60006001611273565b3361195e7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9161081360405190565b6102b7611ba4565b15611bf957565b60405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606490fd5b6102b7611c4961135d565b611bf2565b6102b790611c5d61106661093c565b611cae565b15611c6957565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420666163746f727920616464726573730000000000000000006044820152606490fd5b611cd66102b7916118d5611cc561036b600061174b565b6001600160a01b0383161415611c62565b600a611763565b6102b790611c4e565b15611ced57565b60405162461bcd60e51b815260206004820152601560248201527f4f6e6c7920666163746f72792063616e2063616c6c00000000000000000000006044820152606490fd5b906102b791611d5433611d4e6118da61036b6118d5600a6118b7565b14611ce6565b612273565b906001600160c01b031916610fd9565b15611d7057565b60405162461bcd60e51b815260206004820152601b60248201527f4f7267616e697a6174696f6e20616c72656164792065786973747300000000006044820152606490fd5b9067ffffffffffffffff90611269565b90611de3611ddd61128a926001600160c01b03191690565b60c01c90565b8254611db5565b9160001960089290920291821b911b611269565b921b90565b9190611e146102cd61128a9361092f565b908354611dea565b6102b791600091611e03565b818110611e33575050565b80611e416000600193611e1c565b01611e28565b9190601f8111611e5657505050565b611e686102b793600052602060002090565b906020601f840181900483019310611e8a575b6020601f909101040190611e28565b9091508190611e7b565b90611e9d815190565b9067ffffffffffffffff8211610b3a57611ec182611ebb855461163c565b85611e47565b602090601f8311600114611efc5761128a929160009183611ef1575b5050600019600883021c1916906002021790565b015190503880611edd565b601f19831691611f1185600052602060002090565b9260005b818110611f4f57509160029391856001969410611f36575b50505002019055565b01516000196008601f8516021c19169055388080611f2d565b91936020600181928787015181550195019201611f15565b906102b791611e94565b6102cd905161039c565b906117aa6102cd61128a926103a6565b6102cd90516103c2565b9075ff0000000000000000000000000000000000000000009060a81b611269565b90611fc66102cd61128a926103cc565b8254611f95565b9076ff000000000000000000000000000000000000000000009060b01b611269565b90611fff6102cd61128a926103cc565b8254611fcd565b9060001990611269565b906120206102cd61128a9261092f565b8254612006565b906112836102cd61128a926103a6565b6102b7919061213d9061022090600e906120638161205d87516001600160c01b03191690565b90611dc5565b61207b60018201612075602088015190565b90611f67565b61208d60028201612075604088015190565b6120ae600382016120a860608801516001600160a01b031690565b90611763565b6120c9600482016120a860808801516001600160a01b031690565b61212a600582016120ed6120e760a08901516001600160a01b031690565b82611763565b6121026120fc60c08901611f71565b82611f7b565b61211761211160e08901611f8b565b82611fb6565b6121246101008801611f8b565b90611fef565b6121436006820161213d61012088015190565b90612010565b6121566007820161213d61014088015190565b6121696008820161213d61016088015190565b61217c6009820161213d61018088015190565b61218f600a820161213d6101a088015190565b6121a2600b820161213d6101c088015190565b6121bc600c82016121b66101e08801611f71565b90612027565b6121cf600d820161213d61020088015190565b0192015190565b906102b791612037565b80549192918310156114095760046121ff600892600052602060002090565b8185040193060290565b91906008611269910291611dfe67ffffffffffffffff841b90565b919061223d611ddd61128a936001600160c01b03191690565b908354612209565b9081549168010000000000000000831015610b3a578261226d9160016102b7950181556121e0565b90612224565b6122b46102b7926122a86006916122986122936111296110208887611d59565b611d69565b6122a3856005611d59565b6121d6565b6112b983600192611d59565b6007612245565b906102b791611d32565b156122cc57565b60405162461bcd60e51b815260206004820152600f60248201527f466163746f7279206e6f742073657400000000000000000000000000000000006044820152606490fd5b905051906102b782610446565b906020828203126102a5576102cd91612311565b94610100966123a56123af9261239b6123906123bd999f9e9c96986123826102b79f9a6123b69a8e61237561012082019360008301906001600160a01b03169052565b6020818403910152610333565b8c810360408e015290610333565b9e60608b01906103af565b60808901906103d5565b60a08701906103d5565b60c0850152565b60e0830152565b0152565b6040513d6000823e3d90fd5b966124479060209761243c95969493976123e5600090565b506123f36118d5600a6118b7565b956124106000976124096118da61036b8b61174b565b14156122c5565b61241d6118d5600a6118b7565b9863dc82e05496339b61242f60405190565b9e8f9d8e9c8d9b60e01b90565b8b5260048b01612332565b03925af19081156124855760009161245d575090565b6102cd915060203d811161247e575b6124768183610b18565b81019061231e565b503d61246c565b6123c1565b1561249157565b60405162461bcd60e51b815260206004820152601b60248201527f4f7267616e697a6174696f6e20646f6573206e6f7420657869737400000000006044820152606490fd5b906102b7916124f16124ec611020836006611d59565b61248a565b612542565b156124fd57565b60405162461bcd60e51b815260206004820152601860248201527f4e6f74206f7267616e697a6174696f6e2063726561746f7200000000000000006044820152606490fd5b906102b79161256f612560600361255a846005611d59565b016118b7565b612569336118da565b146124f6565b61259e565b6040906123bd6102b79496959396612594606084019860008501906103af565b60208301906103af565b600e916125af6102cd836005611d59565b6125d4600c8201916125ca846125c485610ffc565b94612027565b4295869101612010565b6118856126097f8b2f7f5316f93cf61dd91009d1753fa8655fdf96e3ed21b5acede8544f336035946001600160c01b03191690565b9461261360405190565b93849384612574565b906102b7916124d6565b906102b79161263c6124ec611020836006611d59565b906102b791612654612560600361255a846005611d59565b6126a5565b1561266057565b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964207072696d65206164647265737300000000000000000000006044820152606490fd5b90600e916126ca6126b961036b600061174b565b6001600160a01b0384161415612659565b6126d86102cd826005611d59565b906126f460048301926125ca856126ee866118b7565b95611763565b61130161273561272f61272f7f0a36c906db740a04bdb26025ec31f2c55ff425dd02bdb71b8c6ae51f30d72bc7946001600160c01b03191690565b94610a7a565b9461043960405190565b906102b791612626565b906102b79161275f6124ec611020836006611d59565b9061277e6127746102cd6102b7946005611d59565b9160078301612010565b600e429101612010565b906102b791612749565b6102b7906127a76124ec611020836006611d59565b6102b7906127be612560600361255a846005611d59565b6127cf906127ca612d0d565b612a18565b6102b7612d3f565b156127de57565b60405162461bcd60e51b815260206004820152602a60248201527f4f7267616e697a6174696f6e206d75737420626520696e616374697665206f7260448201527f20646973736f6c766564000000000000000000000000000000000000000000006064820152608490fd5b80151561029e565b905051906102b782612849565b906020828203126102a5576102cd91612851565b1561287957565b60405162461bcd60e51b815260206004820152601d60248201527f5374616b652063616e6e6f742062652077697468647261776e207965740000006044820152606490fd5b905051906102b782610463565b905051906102b7826103f3565b91909160c0818403126102a557610d656128f260c0610b3f565b9360006128ff8285612311565b908601526020612911828286016128be565b908601526040612923828286016128cb565b908601526060612935828286016128cb565b908601526080612947828286016128cb565b9086015260a0809301612851565b9060c0828203126102a5576102cd916128d8565b1561297057565b60405162461bcd60e51b8152806111a3600482016020808252818101527f4e6f20616374697665207374616b6520666f72206f7267616e697a6174696f6e604082015260600190565b156129c057565b60405162461bcd60e51b815260206004820152600e60248201527f4e6f7420746865207374616b65720000000000000000000000000000000000006044820152606490fd5b9081526040810192916102b79160200152565b600c612a286102cd836005611d59565b01612a5a612a3582610ffc565b91600092612a4b612a458561039c565b9161039c565b14908115612c90575b506127d7565b612a846020612a6c6118d560096118b7565b632280efd690612a7b60405190565b93849260e01b90565b82526001600160c01b03198616600483015260249082905afa801561248557612ab591600091612c62575b50612872565b612ad660c0612ac76118d560096118b7565b63919f550f90612a7b60405190565b82526001600160c01b03198616600483015260249082905afa90811561248557600091612c34575b50612b14612b0f60a0830151151590565b612969565b60208101516001600160a01b0316339290612b3890612b32856118da565b146129b9565b612b456118d560096118b7565b91635cc65b1092803b156102a557612b6b938391612b6260405190565b95869260e01b90565b82526001600160c01b0319881660048301526001600160a01b0387166024830152604490829084905af191821561248557612baf93604093612c07575b5050015190565b9142612bec612be67fe2cc687e70745c9cdfaaf5120ae9faa0e449faded2d4cfd514a898353558ead4936001600160c01b03191690565b93610a7a565b93612c02612bf960405190565b92839283612a05565b0390a3565b81612c2692903d10612c2d575b612c1e8183610b18565b810190610305565b3880612ba8565b503d612c14565b612c55915060c03d8111612c5b575b612c4d8183610b18565b810190612955565b38612afe565b503d612c43565b612c83915060203d8111612c89575b612c7b8183610b18565b81019061285e565b38612aaf565b503d612c71565b612c9a9150610ffc565b612ca7612a45600361039c565b1438612a54565b6102b790612792565b6102cd600261092f565b15612cc857565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6102b7612d1a600261102c565b612d2e612d25612cb7565b91821415612cc1565b6002612010565b6102cd600161092f565b6102b7612d2e612d35565b6102cd60c0610b3f565b612d5c612d4a565b906000825260208080808080870160008152016000815201600081520160008152016000905250565b6102cd612d54565b906102cd91612da36124ec611020846006611d59565b612dee9160c09150612db86118d560096118b7565b612dd663919f550f612dc960405190565b9586948593849360e01b90565b83526001600160c01b03191660048301526024820190565b03915afa90811561248557600091612e04575090565b6102cd915060c03d8111612c5b57612c4d8183610b18565b6102cd90612e28612d85565b612d8d565b906102cd91612e436124ec611020846006611d59565b50600c612e546102cd836005611d59565b0190612e5f82610ffc565b612e6c612a45600061039c565b14918215612ed3575b5081612e7f575090565b612ea59150602090612e946118d560096118b7565b612dd6632280efd6612dc960405190565b03915afa90811561248557600091612ebb575090565b6102cd915060203d8111612c8957612c7b8183610b18565b612ede919250610ffc565b612eeb612a45600361039c565b149038612e75565b6102cd906000612e2d565b6102cd610240610b3f565b612f11612efe565b9060008252602082016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160009052565b6102cd612f09565b906102d09061039c565b6102cd9060a81c610ff6565b6102cd9054612fa2565b906102d0906103c2565b6102cd9060b01c610ff6565b6102cd9054612fc2565b906102b7613192600e612fe9612efe565b94613006612ff8825460c01b90565b6001600160c01b0319168752565b61301c613015600183016116f4565b6020880152565b61303261302b600283016116f4565b6040880152565b613051613041600383016118b7565b6001600160a01b03166060880152565b613070613060600483016118b7565b6001600160a01b03166080880152565b61308f61307f600583016118b7565b6001600160a01b031660a0880152565b6130a761309e60058301611734565b60c08801612f98565b6130bf6130b660058301612fae565b60e08801612fb8565b6130d86130ce60058301612fce565b6101008801612fb8565b6130ef6130e76006830161102c565b610120880152565b6131066130fe6007830161102c565b610140880152565b61311d6131156008830161102c565b610160880152565b61313461312c6009830161102c565b610180880152565b61314b613143600a830161102c565b6101a0880152565b61316261315a600b830161102c565b6101c0880152565b61317b613171600c8301610ffc565b6101e08801612f98565b61104f61318a600d830161102c565b610200880152565b610220840152565b6102cd90612fd8565b6131cb6102cd916131b2612f90565b506131c46124ec611020836006611d59565b6005611d59565b61319a565b60405162461bcd60e51b815260206004820152601d60248201527f55736520737562677261706820666f722062756c6b20717565726965730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f55736520737562677261706820666f72207374617465207175657269657300006044820152606490fd5b613268611020826006611d59565b9081613272575090565b61328a9150613284600c916005611d59565b01610ffc565b611622612a45600161039c56fea2646970667358221220bdd716c8b0ad5d869209cafd1b1d4e767db5661a53547a5571d2caca7981b53f64736f6c63430008140033";

type ControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Control__factory extends ContractFactory {
  constructor(...args: ControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Control";
  }

  override getDeployTransaction(
    _gameToken: AddressLike,
    _stakingContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _gameToken,
      _stakingContract,
      overrides || {}
    );
  }
  override deploy(
    _gameToken: AddressLike,
    _stakingContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _gameToken,
      _stakingContract,
      overrides || {}
    ) as Promise<
      Control & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Control__factory {
    return super.connect(runner) as Control__factory;
  }
  static readonly contractName: "Control";

  public readonly contractName: "Control";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControlInterface {
    return new Interface(_abi) as ControlInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Control {
    return new Contract(address, _abi, runner) as unknown as Control;
  }
}
