/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Control,
  ControlInterface,
} from "../../../../contracts/modules/Control/Control";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidRegistryAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleNotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRegistry",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ModuleDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ModuleEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "ModuleInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes8",
        name: "id",
        type: "bytes8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "OrganizationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes8",
        name: "id",
        type: "bytes8",
      },
      {
        indexed: false,
        internalType: "enum IControl.OrgState",
        name: "oldState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IControl.OrgState",
        name: "newState",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "OrganizationStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPERATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
    ],
    name: "canWithdrawStake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        internalType: "enum IControl.OrgType",
        name: "orgType",
        type: "uint8",
      },
      {
        internalType: "enum IControl.AccessModel",
        name: "accessModel",
        type: "uint8",
      },
      {
        internalType: "enum IControl.FeeModel",
        name: "feeModel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "memberLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "membershipFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gameStakeRequired",
        type: "uint256",
      },
    ],
    name: "createOrganization",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyUnpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllOrganizations",
    outputs: [
      {
        components: [
          {
            internalType: "bytes8",
            name: "id",
            type: "bytes8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "enum IControl.OrgType",
            name: "orgType",
            type: "uint8",
          },
          {
            internalType: "enum IControl.AccessModel",
            name: "accessModel",
            type: "uint8",
          },
          {
            internalType: "enum IControl.FeeModel",
            name: "feeModel",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "memberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "memberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCampaigns",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalProposals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "membershipFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStakeRequired",
            type: "uint256",
          },
          {
            internalType: "enum IControl.OrgState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IControl.Organization[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "id",
        type: "bytes8",
      },
    ],
    name: "getOrganization",
    outputs: [
      {
        components: [
          {
            internalType: "bytes8",
            name: "id",
            type: "bytes8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "enum IControl.OrgType",
            name: "orgType",
            type: "uint8",
          },
          {
            internalType: "enum IControl.AccessModel",
            name: "accessModel",
            type: "uint8",
          },
          {
            internalType: "enum IControl.FeeModel",
            name: "feeModel",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "memberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "memberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCampaigns",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalProposals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "membershipFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStakeRequired",
            type: "uint256",
          },
          {
            internalType: "enum IControl.OrgState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IControl.Organization",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrganizationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
    ],
    name: "getOrganizationStake",
    outputs: [
      {
        components: [
          {
            internalType: "bytes8",
            name: "organizationId",
            type: "bytes8",
          },
          {
            internalType: "address",
            name: "staker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockPeriod",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct IStaking.OrganizationStake",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IControl.OrgState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "getOrganizationsByState",
    outputs: [
      {
        components: [
          {
            internalType: "bytes8",
            name: "id",
            type: "bytes8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "enum IControl.OrgType",
            name: "orgType",
            type: "uint8",
          },
          {
            internalType: "enum IControl.AccessModel",
            name: "accessModel",
            type: "uint8",
          },
          {
            internalType: "enum IControl.FeeModel",
            name: "feeModel",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "memberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "memberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCampaigns",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalProposals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "membershipFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStakeRequired",
            type: "uint256",
          },
          {
            internalType: "enum IControl.OrgState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IControl.Organization[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
    ],
    name: "isOrganizationActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "onModuleDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "onModuleEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
      {
        components: [
          {
            internalType: "bytes8",
            name: "id",
            type: "bytes8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "enum IControl.OrgType",
            name: "orgType",
            type: "uint8",
          },
          {
            internalType: "enum IControl.AccessModel",
            name: "accessModel",
            type: "uint8",
          },
          {
            internalType: "enum IControl.FeeModel",
            name: "feeModel",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "memberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "memberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCampaigns",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalProposals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "membershipFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStakeRequired",
            type: "uint256",
          },
          {
            internalType: "enum IControl.OrgState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IControl.Organization",
        name: "org",
        type: "tuple",
      },
    ],
    name: "registerOrganization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContract",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
      {
        internalType: "uint256",
        name: "memberCount",
        type: "uint256",
      },
    ],
    name: "updateMemberCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
      {
        internalType: "enum IControl.OrgState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "updateOrganizationState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8",
        name: "organizationId",
        type: "bytes8",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Control__factory extends ContractFactory {
  constructor(...args: ControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Control";
  }

  override getDeployTransaction(
    _gameToken: AddressLike,
    _stakingContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _gameToken,
      _stakingContract,
      overrides || {}
    );
  }
  override deploy(
    _gameToken: AddressLike,
    _stakingContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _gameToken,
      _stakingContract,
      overrides || {}
    ) as Promise<
      Control & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Control__factory {
    return super.connect(runner) as Control__factory;
  }
  static readonly contractName: "Control";

  public readonly contractName: "Control";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControlInterface {
    return new Interface(_abi) as ControlInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Control {
    return new Contract(address, _abi, runner) as unknown as Control;
  }
}
