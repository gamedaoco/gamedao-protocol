/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISense,
  ISenseInterface,
} from "../../../contracts/interfaces/ISense";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "achievementId",
        type: "bytes32",
      },
    ],
    name: "AchievementAlreadyGranted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "achievementId",
        type: "bytes32",
      },
    ],
    name: "AchievementNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "string",
        name: "action",
        type: "string",
      },
    ],
    name: "InsufficientPermissions",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
    ],
    name: "InvalidFeedbackRating",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "InvalidImportProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "delta",
        type: "int256",
      },
    ],
    name: "InvalidReputationDelta",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum ISense.VerificationLevel",
        name: "level",
        type: "uint8",
      },
    ],
    name: "InvalidVerificationLevel",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "organizationId",
        type: "bytes32",
      },
    ],
    name: "OrganizationNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "organizationId",
        type: "bytes32",
      },
    ],
    name: "ProfileAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "ProfileNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "ReputationExportFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "giver",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "targetProfileId",
        type: "bytes32",
      },
    ],
    name: "SelfFeedbackNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "UnauthorizedProfileAccess",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "achievementId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "grantedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AchievementGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "feedbackId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "targetProfileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "giver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ISense.FeedbackType",
        name: "feedbackType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "FeedbackSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "organizationId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProfileCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProfileUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum ISense.VerificationLevel",
        name: "level",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "verifier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProfileVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "targetOrganizationId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ReputationExported",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "sourceOrganizationId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "importedReputation",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ReputationImported",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "enum ISense.ReputationType",
        name: "repType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "delta",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "reason",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ReputationUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "calculateTrustScore",
    outputs: [
      {
        internalType: "uint256",
        name: "trustScore",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "baseWeight",
        type: "uint256",
      },
    ],
    name: "calculateVotingWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "organizationId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "createProfile",
    outputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "exportReputation",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "sourceProfileId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "sourceOrganizationId",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "experience",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "reputation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "trust",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positiveFeedbacks",
                type: "uint256",
              },
            ],
            internalType: "struct ISense.ReputationData",
            name: "reputation",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "achievementId",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "profileId",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "string",
                name: "category",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "earnedAt",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "grantedBy",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "points",
                type: "uint256",
              },
            ],
            internalType: "struct ISense.Achievement[]",
            name: "achievements",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positiveFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "negativeFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "neutralFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "averageRating",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "trustScore",
                type: "uint256",
              },
            ],
            internalType: "struct ISense.FeedbackSummary",
            name: "feedbackSummary",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "exportedAt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct ISense.ReputationExport",
        name: "exportData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "getAchievements",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "achievementId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "profileId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "earnedAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "grantedBy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "points",
            type: "uint256",
          },
        ],
        internalType: "struct ISense.Achievement[]",
        name: "achievements",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
    ],
    name: "getAchievementsByCategory",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "achievementId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "profileId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "earnedAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "grantedBy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "points",
            type: "uint256",
          },
        ],
        internalType: "struct ISense.Achievement[]",
        name: "achievements",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
    ],
    name: "getCategoryReputation",
    outputs: [
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "getFeedbackSummary",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFeedbacks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positiveFeedbacks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "negativeFeedbacks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "neutralFeedbacks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageRating",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "trustScore",
            type: "uint256",
          },
        ],
        internalType: "struct ISense.FeedbackSummary",
        name: "summary",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getFeedbacks",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "feedbackId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "targetProfileId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "giver",
            type: "address",
          },
          {
            internalType: "enum ISense.FeedbackType",
            name: "feedbackType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "rating",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "comment",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct ISense.Feedback[]",
        name: "feedbacks",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "getProfile",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "profileId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "organizationId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct ISense.Profile",
        name: "profile",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "organizationId",
        type: "bytes32",
      },
    ],
    name: "getProfileByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "profileId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "organizationId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "verified",
            type: "bool",
          },
        ],
        internalType: "struct ISense.Profile",
        name: "profile",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProfileCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "organizationId",
        type: "bytes32",
      },
    ],
    name: "getProfilesByOrganization",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "profileIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "getReputation",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "experience",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reputation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "trust",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFeedbacks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positiveFeedbacks",
            type: "uint256",
          },
        ],
        internalType: "struct ISense.ReputationData",
        name: "reputation",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "getReputationHistory",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "profileId",
            type: "bytes32",
          },
          {
            internalType: "enum ISense.ReputationType",
            name: "repType",
            type: "uint8",
          },
          {
            internalType: "int256",
            name: "delta",
            type: "int256",
          },
          {
            internalType: "bytes32",
            name: "reason",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "updatedBy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct ISense.ReputationEvent[]",
        name: "events",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "organizationId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getTopProfiles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "profileIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "achievementId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "grantAchievement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "achievementId",
        type: "bytes32",
      },
    ],
    name: "hasAchievement",
    outputs: [
      {
        internalType: "bool",
        name: "hasAchievement",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "sourceProfileId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "sourceOrganizationId",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "experience",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "reputation",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "trust",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdated",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positiveFeedbacks",
                type: "uint256",
              },
            ],
            internalType: "struct ISense.ReputationData",
            name: "reputation",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "achievementId",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "profileId",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "string",
                name: "category",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "earnedAt",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "grantedBy",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "points",
                type: "uint256",
              },
            ],
            internalType: "struct ISense.Achievement[]",
            name: "achievements",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positiveFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "negativeFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "neutralFeedbacks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "averageRating",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "trustScore",
                type: "uint256",
              },
            ],
            internalType: "struct ISense.FeedbackSummary",
            name: "feedbackSummary",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "exportedAt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct ISense.ReputationExport",
        name: "exportData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "importReputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
    ],
    name: "profileExists",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "targetProfileId",
        type: "bytes32",
      },
      {
        internalType: "enum ISense.FeedbackType",
        name: "feedbackType",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    name: "submitFeedback",
    outputs: [
      {
        internalType: "bytes32",
        name: "feedbackId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        internalType: "int256",
        name: "delta",
        type: "int256",
      },
      {
        internalType: "bytes32",
        name: "reason",
        type: "bytes32",
      },
    ],
    name: "updateCategoryReputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "updateProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "enum ISense.ReputationType",
        name: "repType",
        type: "uint8",
      },
      {
        internalType: "int256",
        name: "delta",
        type: "int256",
      },
      {
        internalType: "bytes32",
        name: "reason",
        type: "bytes32",
      },
    ],
    name: "updateReputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "profileId",
        type: "bytes32",
      },
      {
        internalType: "enum ISense.VerificationLevel",
        name: "level",
        type: "uint8",
      },
    ],
    name: "verifyProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISense__factory {
  static readonly abi = _abi;
  static createInterface(): ISenseInterface {
    return new Interface(_abi) as ISenseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ISense {
    return new Contract(address, _abi, runner) as unknown as ISense;
  }
}
