#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// Path to contract artifacts
const artifactsPath = path.join(__dirname, '../../contracts-solidity/artifacts/contracts');
const outputPath = path.join(__dirname, '../src/abis.ts');

// Contract mapping - maps contract paths to their export names
const contractMapping = {
  // Core contracts
  'core/Registry.sol/Registry.json': 'REGISTRY_ABI',
  'modules/Control/Control.sol/Control.json': 'CONTROL_ABI',
  'modules/Membership/Membership.sol/Membership.json': 'MEMBERSHIP_ABI',
  'modules/Flow/Flow.sol/Flow.json': 'FLOW_ABI',
  'modules/Signal/Signal.sol/Signal.json': 'SIGNAL_ABI',
  'modules/Sense/Sense.sol/Sense.json': 'SENSE_ABI',
  'modules/Identity/Identity.sol/Identity.json': 'IDENTITY_ABI',
  'modules/Staking/Staking.sol/Staking.json': 'STAKING_ABI',
  'core/Treasury.sol/Treasury.json': 'TREASURY_ABI',

  // Token contracts
  'tokens/GameToken.sol/GameToken.json': 'GAME_TOKEN_ABI',
  'mocks/MockGameToken.sol/MockGameToken.json': 'MOCK_GAME_TOKEN_ABI',
  'mocks/MockUSDC.sol/MockUSDC.json': 'MOCK_USDC_ABI'
};

function generateAbis() {
  console.log('üîç Generating ABIs from contract artifacts...');

  let content = `import { Abi } from 'viem';

// Auto-generated ABIs from contract compilation
// Do not edit this file manually

`;

  const exportedAbis = [];

  // Generate ABIs for each contract
  for (const [contractPath, exportName] of Object.entries(contractMapping)) {
    const fullPath = path.join(artifactsPath, contractPath);

    if (!fs.existsSync(fullPath)) {
      console.log(`‚ö†Ô∏è  Contract artifact not found: ${contractPath}`);
      continue;
    }

    try {
      const artifact = JSON.parse(fs.readFileSync(fullPath, 'utf8'));

      if (!artifact.abi) {
        console.log(`‚ö†Ô∏è  No ABI found in ${contractPath}`);
        continue;
      }

      const abiString = JSON.stringify(artifact.abi, null, 2);

      content += `export const ${exportName} = ${abiString} as const satisfies Abi;\n\n`;
      exportedAbis.push(exportName);

      console.log(`‚úÖ Generated ABI for ${exportName}`);
    } catch (error) {
      console.error(`‚ùå Error processing ${contractPath}:`, error.message);
    }
  }

  // Add contract names export
  content += `// Export contract names for convenience
export const CONTRACT_NAMES = {
  REGISTRY: 'Registry',
  CONTROL: 'Control',
  MEMBERSHIP: 'Membership',
  FLOW: 'Flow',
  SIGNAL: 'Signal',
  SENSE: 'Sense',
  IDENTITY: 'Identity',
  STAKING: 'Staking',
  TREASURY: 'Treasury',
  GAME_TOKEN: 'GameToken',
  MOCK_GAME_TOKEN: 'MockGameToken',
  MOCK_USDC: 'MockUSDC'
} as const;

// Export all ABIs as a single object for convenience
export const ABIS = {
  REGISTRY: REGISTRY_ABI,
  CONTROL: CONTROL_ABI,
  MEMBERSHIP: MEMBERSHIP_ABI,
  FLOW: FLOW_ABI,
  SIGNAL: SIGNAL_ABI,
  SENSE: SENSE_ABI,
  IDENTITY: IDENTITY_ABI,
  STAKING: STAKING_ABI,
  TREASURY: TREASURY_ABI,
  GAME_TOKEN: GAME_TOKEN_ABI,
  MOCK_GAME_TOKEN: MOCK_GAME_TOKEN_ABI,
  MOCK_USDC: MOCK_USDC_ABI,
} as const;
`;

  // Write the file
  fs.writeFileSync(outputPath, content);

  console.log(`‚úÖ Generated ${exportedAbis.length} ABIs in ${outputPath}`);
  console.log(`üéâ ABI generation complete!`);
}

// Run the generation
if (require.main === module) {
  generateAbis();
}

module.exports = { generateAbis };
