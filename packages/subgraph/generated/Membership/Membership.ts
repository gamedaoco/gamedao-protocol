// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MemberAdded extends ethereum.Event {
  get params(): MemberAdded__Params {
    return new MemberAdded__Params(this);
  }
}

export class MemberAdded__Params {
  _event: MemberAdded;

  constructor(event: MemberAdded) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tier(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class MemberRemoved extends ethereum.Event {
  get params(): MemberRemoved__Params {
    return new MemberRemoved__Params(this);
  }
}

export class MemberRemoved__Params {
  _event: MemberRemoved;

  constructor(event: MemberRemoved) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MemberStateUpdated extends ethereum.Event {
  get params(): MemberStateUpdated__Params {
    return new MemberStateUpdated__Params(this);
  }
}

export class MemberStateUpdated__Params {
  _event: MemberStateUpdated;

  constructor(event: MemberStateUpdated) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get oldState(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get newState(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class MemberTierUpdated extends ethereum.Event {
  get params(): MemberTierUpdated__Params {
    return new MemberTierUpdated__Params(this);
  }
}

export class MemberTierUpdated__Params {
  _event: MemberTierUpdated;

  constructor(event: MemberTierUpdated) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get oldTier(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get newTier(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ModuleDisabled extends ethereum.Event {
  get params(): ModuleDisabled__Params {
    return new ModuleDisabled__Params(this);
  }
}

export class ModuleDisabled__Params {
  _event: ModuleDisabled;

  constructor(event: ModuleDisabled) {
    this._event = event;
  }
}

export class ModuleEnabled extends ethereum.Event {
  get params(): ModuleEnabled__Params {
    return new ModuleEnabled__Params(this);
  }
}

export class ModuleEnabled__Params {
  _event: ModuleEnabled;

  constructor(event: ModuleEnabled) {
    this._event = event;
  }
}

export class ModuleInitialized extends ethereum.Event {
  get params(): ModuleInitialized__Params {
    return new ModuleInitialized__Params(this);
  }
}

export class ModuleInitialized__Params {
  _event: ModuleInitialized;

  constructor(event: ModuleInitialized) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VotingDelegated extends ethereum.Event {
  get params(): VotingDelegated__Params {
    return new VotingDelegated__Params(this);
  }
}

export class VotingDelegated__Params {
  _event: VotingDelegated;

  constructor(event: VotingDelegated) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get delegator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get delegatee(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class VotingPowerUpdated extends ethereum.Event {
  get params(): VotingPowerUpdated__Params {
    return new VotingPowerUpdated__Params(this);
  }
}

export class VotingPowerUpdated__Params {
  _event: VotingPowerUpdated;

  constructor(event: VotingPowerUpdated) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get oldPower(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newPower(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class VotingUndelegated extends ethereum.Event {
  get params(): VotingUndelegated__Params {
    return new VotingUndelegated__Params(this);
  }
}

export class VotingUndelegated__Params {
  _event: VotingUndelegated;

  constructor(event: VotingUndelegated) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get delegator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get delegatee(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Membership__getDelegationsResultValue0Struct extends ethereum.Tuple {
  get delegator(): Address {
    return this[0].toAddress();
  }

  get delegatee(): Address {
    return this[1].toAddress();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get timestamp(): BigInt {
    return this[3].toBigInt();
  }

  get active(): boolean {
    return this[4].toBoolean();
  }
}

export class Membership__getMemberResultValue0Struct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get tier(): i32 {
    return this[1].toI32();
  }

  get state(): i32 {
    return this[2].toI32();
  }

  get joinedAt(): BigInt {
    return this[3].toBigInt();
  }

  get votingPower(): BigInt {
    return this[4].toBigInt();
  }

  get delegatedPower(): BigInt {
    return this[5].toBigInt();
  }

  get canVote(): boolean {
    return this[6].toBoolean();
  }

  get canPropose(): boolean {
    return this[7].toBoolean();
  }

  get canDelegate(): boolean {
    return this[8].toBoolean();
  }
}

export class Membership__getMembershipStatsResultValue0Struct extends ethereum.Tuple {
  get totalMembers(): BigInt {
    return this[0].toBigInt();
  }

  get activeMembers(): BigInt {
    return this[1].toBigInt();
  }

  get totalVotingPower(): BigInt {
    return this[2].toBigInt();
  }
}

export class Membership extends ethereum.SmartContract {
  static bind(address: Address): Membership {
    return new Membership("Membership", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MEMBERSHIP_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "MEMBERSHIP_ADMIN_ROLE",
      "MEMBERSHIP_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MEMBERSHIP_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MEMBERSHIP_ADMIN_ROLE",
      "MEMBERSHIP_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MODULE_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "MODULE_ADMIN_ROLE",
      "MODULE_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MODULE_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MODULE_ADMIN_ROLE",
      "MODULE_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MODULE_ID(): Bytes {
    let result = super.call("MODULE_ID", "MODULE_ID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MODULE_ID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MODULE_ID", "MODULE_ID():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OPERATOR_ROLE(): Bytes {
    let result = super.call("OPERATOR_ROLE", "OPERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OPERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "OPERATOR_ROLE",
      "OPERATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ORGANIZATION_MANAGER_ROLE(): Bytes {
    let result = super.call(
      "ORGANIZATION_MANAGER_ROLE",
      "ORGANIZATION_MANAGER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_ORGANIZATION_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ORGANIZATION_MANAGER_ROLE",
      "ORGANIZATION_MANAGER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  activateOrganization(organizationId: Bytes): boolean {
    let result = super.call(
      "activateOrganization",
      "activateOrganization(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBoolean();
  }

  try_activateOrganization(
    organizationId: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "activateOrganization",
      "activateOrganization(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  addMember(organizationId: Bytes, member: Address, tier: i32): boolean {
    let result = super.call(
      "addMember",
      "addMember(bytes8,address,uint8):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tier))
      ]
    );

    return result[0].toBoolean();
  }

  try_addMember(
    organizationId: Bytes,
    member: Address,
    tier: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "addMember",
      "addMember(bytes8,address,uint8):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tier))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  controlContract(): Address {
    let result = super.call(
      "controlContract",
      "controlContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_controlContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "controlContract",
      "controlContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deactivateOrganization(organizationId: Bytes): boolean {
    let result = super.call(
      "deactivateOrganization",
      "deactivateOrganization(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBoolean();
  }

  try_deactivateOrganization(
    organizationId: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "deactivateOrganization",
      "deactivateOrganization(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  delegateVotingPower(
    organizationId: Bytes,
    delegatee: Address,
    amount: BigInt
  ): boolean {
    let result = super.call(
      "delegateVotingPower",
      "delegateVotingPower(bytes8,address,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(delegatee),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_delegateVotingPower(
    organizationId: Bytes,
    delegatee: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "delegateVotingPower",
      "delegateVotingPower(bytes8,address,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(delegatee),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  gameToken(): Address {
    let result = super.call("gameToken", "gameToken():(address)", []);

    return result[0].toAddress();
  }

  try_gameToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("gameToken", "gameToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDelegations(
    organizationId: Bytes,
    member: Address
  ): Array<Membership__getDelegationsResultValue0Struct> {
    let result = super.call(
      "getDelegations",
      "getDelegations(bytes8,address):((address,address,uint256,uint256,bool)[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );

    return result[0].toTupleArray<
      Membership__getDelegationsResultValue0Struct
    >();
  }

  try_getDelegations(
    organizationId: Bytes,
    member: Address
  ): ethereum.CallResult<Array<Membership__getDelegationsResultValue0Struct>> {
    let result = super.tryCall(
      "getDelegations",
      "getDelegations(bytes8,address):((address,address,uint256,uint256,bool)[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Membership__getDelegationsResultValue0Struct>()
    );
  }

  getEffectiveVotingPower(organizationId: Bytes, member: Address): BigInt {
    let result = super.call(
      "getEffectiveVotingPower",
      "getEffectiveVotingPower(bytes8,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );

    return result[0].toBigInt();
  }

  try_getEffectiveVotingPower(
    organizationId: Bytes,
    member: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEffectiveVotingPower",
      "getEffectiveVotingPower(bytes8,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMember(
    organizationId: Bytes,
    account: Address
  ): Membership__getMemberResultValue0Struct {
    let result = super.call(
      "getMember",
      "getMember(bytes8,address):((address,uint8,uint8,uint256,uint256,uint256,bool,bool,bool))",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(account)
      ]
    );

    return changetype<Membership__getMemberResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getMember(
    organizationId: Bytes,
    account: Address
  ): ethereum.CallResult<Membership__getMemberResultValue0Struct> {
    let result = super.tryCall(
      "getMember",
      "getMember(bytes8,address):((address,uint8,uint8,uint256,uint256,uint256,bool,bool,bool))",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(account)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Membership__getMemberResultValue0Struct>(value[0].toTuple())
    );
  }

  getMemberCount(organizationId: Bytes): BigInt {
    let result = super.call(
      "getMemberCount",
      "getMemberCount(bytes8):(uint256)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBigInt();
  }

  try_getMemberCount(organizationId: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMemberCount",
      "getMemberCount(bytes8):(uint256)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMembers(organizationId: Bytes): Array<Address> {
    let result = super.call("getMembers", "getMembers(bytes8):(address[])", [
      ethereum.Value.fromFixedBytes(organizationId)
    ]);

    return result[0].toAddressArray();
  }

  try_getMembers(organizationId: Bytes): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getMembers", "getMembers(bytes8):(address[])", [
      ethereum.Value.fromFixedBytes(organizationId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getMembersByState(organizationId: Bytes, state: i32): Array<Address> {
    let result = super.call(
      "getMembersByState",
      "getMembersByState(bytes8,uint8):(address[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(state))
      ]
    );

    return result[0].toAddressArray();
  }

  try_getMembersByState(
    organizationId: Bytes,
    state: i32
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getMembersByState",
      "getMembersByState(bytes8,uint8):(address[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(state))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getMembersByTier(organizationId: Bytes, tier: i32): Array<Address> {
    let result = super.call(
      "getMembersByTier",
      "getMembersByTier(bytes8,uint8):(address[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tier))
      ]
    );

    return result[0].toAddressArray();
  }

  try_getMembersByTier(
    organizationId: Bytes,
    tier: i32
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getMembersByTier",
      "getMembersByTier(bytes8,uint8):(address[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tier))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getMembershipStats(
    organizationId: Bytes
  ): Membership__getMembershipStatsResultValue0Struct {
    let result = super.call(
      "getMembershipStats",
      "getMembershipStats(bytes8):((uint256,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return changetype<Membership__getMembershipStatsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getMembershipStats(
    organizationId: Bytes
  ): ethereum.CallResult<Membership__getMembershipStatsResultValue0Struct> {
    let result = super.tryCall(
      "getMembershipStats",
      "getMembershipStats(bytes8):((uint256,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Membership__getMembershipStatsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTotalDelegatedIn(organizationId: Bytes, member: Address): BigInt {
    let result = super.call(
      "getTotalDelegatedIn",
      "getTotalDelegatedIn(bytes8,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );

    return result[0].toBigInt();
  }

  try_getTotalDelegatedIn(
    organizationId: Bytes,
    member: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalDelegatedIn",
      "getTotalDelegatedIn(bytes8,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTotalDelegatedOut(organizationId: Bytes, member: Address): BigInt {
    let result = super.call(
      "getTotalDelegatedOut",
      "getTotalDelegatedOut(bytes8,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );

    return result[0].toBigInt();
  }

  try_getTotalDelegatedOut(
    organizationId: Bytes,
    member: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalDelegatedOut",
      "getTotalDelegatedOut(bytes8,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMember(organizationId: Bytes, account: Address): boolean {
    let result = super.call("isMember", "isMember(bytes8,address):(bool)", [
      ethereum.Value.fromFixedBytes(organizationId),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isMember(
    organizationId: Bytes,
    account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMember", "isMember(bytes8,address):(bool)", [
      ethereum.Value.fromFixedBytes(organizationId),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOrganizationActive(organizationId: Bytes): boolean {
    let result = super.call(
      "isOrganizationActive",
      "isOrganizationActive(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBoolean();
  }

  try_isOrganizationActive(
    organizationId: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOrganizationActive",
      "isOrganizationActive(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  moduleId(): Bytes {
    let result = super.call("moduleId", "moduleId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_moduleId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("moduleId", "moduleId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  removeMember(organizationId: Bytes, member: Address): boolean {
    let result = super.call(
      "removeMember",
      "removeMember(bytes8,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );

    return result[0].toBoolean();
  }

  try_removeMember(
    organizationId: Bytes,
    member: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "removeMember",
      "removeMember(bytes8,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  undelegateVotingPower(
    organizationId: Bytes,
    delegatee: Address,
    amount: BigInt
  ): boolean {
    let result = super.call(
      "undelegateVotingPower",
      "undelegateVotingPower(bytes8,address,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(delegatee),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_undelegateVotingPower(
    organizationId: Bytes,
    delegatee: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "undelegateVotingPower",
      "undelegateVotingPower(bytes8,address,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(delegatee),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  updateMemberState(
    organizationId: Bytes,
    member: Address,
    newState: i32
  ): boolean {
    let result = super.call(
      "updateMemberState",
      "updateMemberState(bytes8,address,uint8):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(newState))
      ]
    );

    return result[0].toBoolean();
  }

  try_updateMemberState(
    organizationId: Bytes,
    member: Address,
    newState: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "updateMemberState",
      "updateMemberState(bytes8,address,uint8):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(newState))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  updateMemberTier(
    organizationId: Bytes,
    member: Address,
    newTier: i32
  ): boolean {
    let result = super.call(
      "updateMemberTier",
      "updateMemberTier(bytes8,address,uint8):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(newTier))
      ]
    );

    return result[0].toBoolean();
  }

  try_updateMemberTier(
    organizationId: Bytes,
    member: Address,
    newTier: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "updateMemberTier",
      "updateMemberTier(bytes8,address,uint8):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(newTier))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  updateVotingPower(
    organizationId: Bytes,
    member: Address,
    newVotingPower: BigInt
  ): boolean {
    let result = super.call(
      "updateVotingPower",
      "updateVotingPower(bytes8,address,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member),
        ethereum.Value.fromUnsignedBigInt(newVotingPower)
      ]
    );

    return result[0].toBoolean();
  }

  try_updateVotingPower(
    organizationId: Bytes,
    member: Address,
    newVotingPower: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "updateVotingPower",
      "updateVotingPower(bytes8,address,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member),
        ethereum.Value.fromUnsignedBigInt(newVotingPower)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivateOrganizationCall extends ethereum.Call {
  get inputs(): ActivateOrganizationCall__Inputs {
    return new ActivateOrganizationCall__Inputs(this);
  }

  get outputs(): ActivateOrganizationCall__Outputs {
    return new ActivateOrganizationCall__Outputs(this);
  }
}

export class ActivateOrganizationCall__Inputs {
  _call: ActivateOrganizationCall;

  constructor(call: ActivateOrganizationCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ActivateOrganizationCall__Outputs {
  _call: ActivateOrganizationCall;

  constructor(call: ActivateOrganizationCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class AddMemberCall extends ethereum.Call {
  get inputs(): AddMemberCall__Inputs {
    return new AddMemberCall__Inputs(this);
  }

  get outputs(): AddMemberCall__Outputs {
    return new AddMemberCall__Outputs(this);
  }
}

export class AddMemberCall__Inputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get member(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tier(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class AddMemberCall__Outputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DeactivateOrganizationCall extends ethereum.Call {
  get inputs(): DeactivateOrganizationCall__Inputs {
    return new DeactivateOrganizationCall__Inputs(this);
  }

  get outputs(): DeactivateOrganizationCall__Outputs {
    return new DeactivateOrganizationCall__Outputs(this);
  }
}

export class DeactivateOrganizationCall__Inputs {
  _call: DeactivateOrganizationCall;

  constructor(call: DeactivateOrganizationCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DeactivateOrganizationCall__Outputs {
  _call: DeactivateOrganizationCall;

  constructor(call: DeactivateOrganizationCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DelegateVotingPowerCall extends ethereum.Call {
  get inputs(): DelegateVotingPowerCall__Inputs {
    return new DelegateVotingPowerCall__Inputs(this);
  }

  get outputs(): DelegateVotingPowerCall__Outputs {
    return new DelegateVotingPowerCall__Outputs(this);
  }
}

export class DelegateVotingPowerCall__Inputs {
  _call: DelegateVotingPowerCall;

  constructor(call: DelegateVotingPowerCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get delegatee(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DelegateVotingPowerCall__Outputs {
  _call: DelegateVotingPowerCall;

  constructor(call: DelegateVotingPowerCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class EmergencyPauseCall extends ethereum.Call {
  get inputs(): EmergencyPauseCall__Inputs {
    return new EmergencyPauseCall__Inputs(this);
  }

  get outputs(): EmergencyPauseCall__Outputs {
    return new EmergencyPauseCall__Outputs(this);
  }
}

export class EmergencyPauseCall__Inputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall__Outputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall extends ethereum.Call {
  get inputs(): EmergencyUnpauseCall__Inputs {
    return new EmergencyUnpauseCall__Inputs(this);
  }

  get outputs(): EmergencyUnpauseCall__Outputs {
    return new EmergencyUnpauseCall__Outputs(this);
  }
}

export class EmergencyUnpauseCall__Inputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall__Outputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get registryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall extends ethereum.Call {
  get inputs(): OnModuleDisabledCall__Inputs {
    return new OnModuleDisabledCall__Inputs(this);
  }

  get outputs(): OnModuleDisabledCall__Outputs {
    return new OnModuleDisabledCall__Outputs(this);
  }
}

export class OnModuleDisabledCall__Inputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall__Outputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall extends ethereum.Call {
  get inputs(): OnModuleEnabledCall__Inputs {
    return new OnModuleEnabledCall__Inputs(this);
  }

  get outputs(): OnModuleEnabledCall__Outputs {
    return new OnModuleEnabledCall__Outputs(this);
  }
}

export class OnModuleEnabledCall__Inputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall__Outputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveMemberCall extends ethereum.Call {
  get inputs(): RemoveMemberCall__Inputs {
    return new RemoveMemberCall__Inputs(this);
  }

  get outputs(): RemoveMemberCall__Outputs {
    return new RemoveMemberCall__Outputs(this);
  }
}

export class RemoveMemberCall__Inputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get member(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveMemberCall__Outputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetControlContractCall extends ethereum.Call {
  get inputs(): SetControlContractCall__Inputs {
    return new SetControlContractCall__Inputs(this);
  }

  get outputs(): SetControlContractCall__Outputs {
    return new SetControlContractCall__Outputs(this);
  }
}

export class SetControlContractCall__Inputs {
  _call: SetControlContractCall;

  constructor(call: SetControlContractCall) {
    this._call = call;
  }

  get _controlContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetControlContractCall__Outputs {
  _call: SetControlContractCall;

  constructor(call: SetControlContractCall) {
    this._call = call;
  }
}

export class SetGameTokenCall extends ethereum.Call {
  get inputs(): SetGameTokenCall__Inputs {
    return new SetGameTokenCall__Inputs(this);
  }

  get outputs(): SetGameTokenCall__Outputs {
    return new SetGameTokenCall__Outputs(this);
  }
}

export class SetGameTokenCall__Inputs {
  _call: SetGameTokenCall;

  constructor(call: SetGameTokenCall) {
    this._call = call;
  }

  get _gameToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGameTokenCall__Outputs {
  _call: SetGameTokenCall;

  constructor(call: SetGameTokenCall) {
    this._call = call;
  }
}

export class UndelegateVotingPowerCall extends ethereum.Call {
  get inputs(): UndelegateVotingPowerCall__Inputs {
    return new UndelegateVotingPowerCall__Inputs(this);
  }

  get outputs(): UndelegateVotingPowerCall__Outputs {
    return new UndelegateVotingPowerCall__Outputs(this);
  }
}

export class UndelegateVotingPowerCall__Inputs {
  _call: UndelegateVotingPowerCall;

  constructor(call: UndelegateVotingPowerCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get delegatee(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UndelegateVotingPowerCall__Outputs {
  _call: UndelegateVotingPowerCall;

  constructor(call: UndelegateVotingPowerCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateMemberStateCall extends ethereum.Call {
  get inputs(): UpdateMemberStateCall__Inputs {
    return new UpdateMemberStateCall__Inputs(this);
  }

  get outputs(): UpdateMemberStateCall__Outputs {
    return new UpdateMemberStateCall__Outputs(this);
  }
}

export class UpdateMemberStateCall__Inputs {
  _call: UpdateMemberStateCall;

  constructor(call: UpdateMemberStateCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get member(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newState(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class UpdateMemberStateCall__Outputs {
  _call: UpdateMemberStateCall;

  constructor(call: UpdateMemberStateCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateMemberTierCall extends ethereum.Call {
  get inputs(): UpdateMemberTierCall__Inputs {
    return new UpdateMemberTierCall__Inputs(this);
  }

  get outputs(): UpdateMemberTierCall__Outputs {
    return new UpdateMemberTierCall__Outputs(this);
  }
}

export class UpdateMemberTierCall__Inputs {
  _call: UpdateMemberTierCall;

  constructor(call: UpdateMemberTierCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get member(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newTier(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class UpdateMemberTierCall__Outputs {
  _call: UpdateMemberTierCall;

  constructor(call: UpdateMemberTierCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateVotingPowerCall extends ethereum.Call {
  get inputs(): UpdateVotingPowerCall__Inputs {
    return new UpdateVotingPowerCall__Inputs(this);
  }

  get outputs(): UpdateVotingPowerCall__Outputs {
    return new UpdateVotingPowerCall__Outputs(this);
  }
}

export class UpdateVotingPowerCall__Inputs {
  _call: UpdateVotingPowerCall;

  constructor(call: UpdateVotingPowerCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get member(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newVotingPower(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateVotingPowerCall__Outputs {
  _call: UpdateVotingPowerCall;

  constructor(call: UpdateVotingPowerCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
