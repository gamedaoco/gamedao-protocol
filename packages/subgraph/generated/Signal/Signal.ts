// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ConvictionDecayApplied extends ethereum.Event {
  get params(): ConvictionDecayApplied__Params {
    return new ConvictionDecayApplied__Params(this);
  }
}

export class ConvictionDecayApplied__Params {
  _event: ConvictionDecayApplied;

  constructor(event: ConvictionDecayApplied) {
    this._event = event;
  }

  get hierarchicalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get oldPower(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newPower(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ConvictionVoteCast extends ethereum.Event {
  get params(): ConvictionVoteCast__Params {
    return new ConvictionVoteCast__Params(this);
  }
}

export class ConvictionVoteCast__Params {
  _event: ConvictionVoteCast;

  constructor(event: ConvictionVoteCast) {
    this._event = event;
  }

  get hierarchicalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get choice(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get votingPower(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get convictionMultiplier(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get convictionTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class ModuleDisabled extends ethereum.Event {
  get params(): ModuleDisabled__Params {
    return new ModuleDisabled__Params(this);
  }
}

export class ModuleDisabled__Params {
  _event: ModuleDisabled;

  constructor(event: ModuleDisabled) {
    this._event = event;
  }
}

export class ModuleEnabled extends ethereum.Event {
  get params(): ModuleEnabled__Params {
    return new ModuleEnabled__Params(this);
  }
}

export class ModuleEnabled__Params {
  _event: ModuleEnabled;

  constructor(event: ModuleEnabled) {
    this._event = event;
  }
}

export class ModuleInitialized extends ethereum.Event {
  get params(): ModuleInitialized__Params {
    return new ModuleInitialized__Params(this);
  }
}

export class ModuleInitialized__Params {
  _event: ModuleInitialized;

  constructor(event: ModuleInitialized) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProposalCanceled extends ethereum.Event {
  get params(): ProposalCanceled__Params {
    return new ProposalCanceled__Params(this);
  }
}

export class ProposalCanceled__Params {
  _event: ProposalCanceled;

  constructor(event: ProposalCanceled) {
    this._event = event;
  }

  get hierarchicalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get canceler(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ProposalCanceledHierarchical extends ethereum.Event {
  get params(): ProposalCanceledHierarchical__Params {
    return new ProposalCanceledHierarchical__Params(this);
  }
}

export class ProposalCanceledHierarchical__Params {
  _event: ProposalCanceledHierarchical;

  constructor(event: ProposalCanceledHierarchical) {
    this._event = event;
  }

  get hierarchicalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get canceler(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ProposalCreated extends ethereum.Event {
  get params(): ProposalCreated__Params {
    return new ProposalCreated__Params(this);
  }
}

export class ProposalCreated__Params {
  _event: ProposalCreated;

  constructor(event: ProposalCreated) {
    this._event = event;
  }

  get hierarchicalId(): string {
    return this._event.parameters[0].value.toString();
  }

  get organizationId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[3].value.toString();
  }

  get proposalType(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get votingType(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get votingPeriod(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ProposalCreatedHierarchical extends ethereum.Event {
  get params(): ProposalCreatedHierarchical__Params {
    return new ProposalCreatedHierarchical__Params(this);
  }
}

export class ProposalCreatedHierarchical__Params {
  _event: ProposalCreatedHierarchical;

  constructor(event: ProposalCreatedHierarchical) {
    this._event = event;
  }

  get hierarchicalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get organizationId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[3].value.toString();
  }

  get proposalType(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get votingType(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get votingPeriod(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ProposalExecuted extends ethereum.Event {
  get params(): ProposalExecuted__Params {
    return new ProposalExecuted__Params(this);
  }
}

export class ProposalExecuted__Params {
  _event: ProposalExecuted;

  constructor(event: ProposalExecuted) {
    this._event = event;
  }

  get hierarchicalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get executor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get success(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get returnData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class ProposalExecutedHierarchical extends ethereum.Event {
  get params(): ProposalExecutedHierarchical__Params {
    return new ProposalExecutedHierarchical__Params(this);
  }
}

export class ProposalExecutedHierarchical__Params {
  _event: ProposalExecutedHierarchical;

  constructor(event: ProposalExecutedHierarchical) {
    this._event = event;
  }

  get hierarchicalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get executor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get success(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get returnData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VoteCast extends ethereum.Event {
  get params(): VoteCast__Params {
    return new VoteCast__Params(this);
  }
}

export class VoteCast__Params {
  _event: VoteCast;

  constructor(event: VoteCast) {
    this._event = event;
  }

  get hierarchicalId(): string {
    return this._event.parameters[0].value.toString();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get choice(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get votingPower(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class VoteCastHierarchical extends ethereum.Event {
  get params(): VoteCastHierarchical__Params {
    return new VoteCastHierarchical__Params(this);
  }
}

export class VoteCastHierarchical__Params {
  _event: VoteCastHierarchical;

  constructor(event: VoteCastHierarchical) {
    this._event = event;
  }

  get hierarchicalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get choice(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get votingPower(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class VotingParametersUpdated extends ethereum.Event {
  get params(): VotingParametersUpdated__Params {
    return new VotingParametersUpdated__Params(this);
  }
}

export class VotingParametersUpdated__Params {
  _event: VotingParametersUpdated;

  constructor(event: VotingParametersUpdated) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get parameters(): VotingParametersUpdatedParametersStruct {
    return changetype<VotingParametersUpdatedParametersStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class VotingParametersUpdatedParametersStruct extends ethereum.Tuple {
  get votingDelay(): BigInt {
    return this[0].toBigInt();
  }

  get votingPeriod(): BigInt {
    return this[1].toBigInt();
  }

  get executionDelay(): BigInt {
    return this[2].toBigInt();
  }

  get quorumThreshold(): BigInt {
    return this[3].toBigInt();
  }

  get proposalThreshold(): BigInt {
    return this[4].toBigInt();
  }

  get requireMembership(): boolean {
    return this[5].toBoolean();
  }
}

export class VotingPowerDelegated extends ethereum.Event {
  get params(): VotingPowerDelegated__Params {
    return new VotingPowerDelegated__Params(this);
  }
}

export class VotingPowerDelegated__Params {
  _event: VotingPowerDelegated;

  constructor(event: VotingPowerDelegated) {
    this._event = event;
  }

  get delegator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get delegatee(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VotingPowerUndelegated extends ethereum.Event {
  get params(): VotingPowerUndelegated__Params {
    return new VotingPowerUndelegated__Params(this);
  }
}

export class VotingPowerUndelegated__Params {
  _event: VotingPowerUndelegated;

  constructor(event: VotingPowerUndelegated) {
    this._event = event;
  }

  get delegator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get delegatee(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Signal__executeProposalResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getSuccess(): boolean {
    return this.value0;
  }

  getReturnData(): Bytes {
    return this.value1;
  }
}

export class Signal__getDelegationsResultValue0Struct extends ethereum.Tuple {
  get delegatee(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }

  get active(): boolean {
    return this[3].toBoolean();
  }
}

export class Signal__getProposalResultValue0Struct extends ethereum.Tuple {
  get hierarchicalId(): string {
    return this[0].toString();
  }

  get organizationId(): Bytes {
    return this[1].toBytes();
  }

  get creator(): Address {
    return this[2].toAddress();
  }

  get title(): string {
    return this[3].toString();
  }

  get description(): string {
    return this[4].toString();
  }

  get metadataURI(): string {
    return this[5].toString();
  }

  get proposalType(): i32 {
    return this[6].toI32();
  }

  get votingType(): i32 {
    return this[7].toI32();
  }

  get votingPower(): i32 {
    return this[8].toI32();
  }

  get state(): i32 {
    return this[9].toI32();
  }

  get startTime(): BigInt {
    return this[10].toBigInt();
  }

  get endTime(): BigInt {
    return this[11].toBigInt();
  }

  get executionTime(): BigInt {
    return this[12].toBigInt();
  }

  get forVotes(): BigInt {
    return this[13].toBigInt();
  }

  get againstVotes(): BigInt {
    return this[14].toBigInt();
  }

  get abstainVotes(): BigInt {
    return this[15].toBigInt();
  }

  get executionData(): Bytes {
    return this[16].toBytes();
  }

  get targetContract(): Address {
    return this[17].toAddress();
  }

  get executor(): Address {
    return this[18].toAddress();
  }

  get createdAt(): BigInt {
    return this[19].toBigInt();
  }

  get executedAt(): BigInt {
    return this[20].toBigInt();
  }
}

export class Signal__getVoteResultValue0Struct extends ethereum.Tuple {
  get voter(): Address {
    return this[0].toAddress();
  }

  get choice(): i32 {
    return this[1].toI32();
  }

  get votingPower(): BigInt {
    return this[2].toBigInt();
  }

  get timestamp(): BigInt {
    return this[3].toBigInt();
  }

  get reason(): string {
    return this[4].toString();
  }

  get hasVoted(): boolean {
    return this[5].toBoolean();
  }

  get convictionTime(): BigInt {
    return this[6].toBigInt();
  }

  get convictionMultiplier(): BigInt {
    return this[7].toBigInt();
  }
}

export class Signal__getVotingParametersResultValue0Struct extends ethereum.Tuple {
  get votingDelay(): BigInt {
    return this[0].toBigInt();
  }

  get votingPeriod(): BigInt {
    return this[1].toBigInt();
  }

  get executionDelay(): BigInt {
    return this[2].toBigInt();
  }

  get quorumThreshold(): BigInt {
    return this[3].toBigInt();
  }

  get proposalThreshold(): BigInt {
    return this[4].toBigInt();
  }

  get requireMembership(): boolean {
    return this[5].toBoolean();
  }
}

export class Signal extends ethereum.SmartContract {
  static bind(address: Address): Signal {
    return new Signal("Signal", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  BASIS_POINTS(): BigInt {
    let result = super.call("BASIS_POINTS", "BASIS_POINTS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_BASIS_POINTS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("BASIS_POINTS", "BASIS_POINTS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  EXECUTOR_ROLE(): Bytes {
    let result = super.call("EXECUTOR_ROLE", "EXECUTOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_EXECUTOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "EXECUTOR_ROLE",
      "EXECUTOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_EXECUTION_DELAY(): BigInt {
    let result = super.call(
      "MAX_EXECUTION_DELAY",
      "MAX_EXECUTION_DELAY():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_EXECUTION_DELAY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_EXECUTION_DELAY",
      "MAX_EXECUTION_DELAY():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_QUORUM_THRESHOLD(): BigInt {
    let result = super.call(
      "MAX_QUORUM_THRESHOLD",
      "MAX_QUORUM_THRESHOLD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_QUORUM_THRESHOLD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_QUORUM_THRESHOLD",
      "MAX_QUORUM_THRESHOLD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_VOTING_PERIOD(): BigInt {
    let result = super.call(
      "MAX_VOTING_PERIOD",
      "MAX_VOTING_PERIOD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_VOTING_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_VOTING_PERIOD",
      "MAX_VOTING_PERIOD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_VOTING_PERIOD(): BigInt {
    let result = super.call(
      "MIN_VOTING_PERIOD",
      "MIN_VOTING_PERIOD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_VOTING_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_VOTING_PERIOD",
      "MIN_VOTING_PERIOD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  OPERATOR_ROLE(): Bytes {
    let result = super.call("OPERATOR_ROLE", "OPERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OPERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "OPERATOR_ROLE",
      "OPERATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PROPOSAL_CREATOR_ROLE(): Bytes {
    let result = super.call(
      "PROPOSAL_CREATOR_ROLE",
      "PROPOSAL_CREATOR_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_PROPOSAL_CREATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "PROPOSAL_CREATOR_ROLE",
      "PROPOSAL_CREATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SIGNAL_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "SIGNAL_ADMIN_ROLE",
      "SIGNAL_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_SIGNAL_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SIGNAL_ADMIN_ROLE",
      "SIGNAL_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  calculateConvictionMultiplier(convictionTime: BigInt): BigInt {
    let result = super.call(
      "calculateConvictionMultiplier",
      "calculateConvictionMultiplier(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(convictionTime)]
    );

    return result[0].toBigInt();
  }

  try_calculateConvictionMultiplier(
    convictionTime: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateConvictionMultiplier",
      "calculateConvictionMultiplier(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(convictionTime)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateVotingPower(
    hierarchicalId: string,
    voter: Address,
    powerType: i32
  ): BigInt {
    let result = super.call(
      "calculateVotingPower",
      "calculateVotingPower(string,address,uint8):(uint256)",
      [
        ethereum.Value.fromString(hierarchicalId),
        ethereum.Value.fromAddress(voter),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(powerType))
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateVotingPower(
    hierarchicalId: string,
    voter: Address,
    powerType: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateVotingPower",
      "calculateVotingPower(string,address,uint8):(uint256)",
      [
        ethereum.Value.fromString(hierarchicalId),
        ethereum.Value.fromAddress(voter),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(powerType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  canExecute(hierarchicalId: string): boolean {
    let result = super.call("canExecute", "canExecute(string):(bool)", [
      ethereum.Value.fromString(hierarchicalId)
    ]);

    return result[0].toBoolean();
  }

  try_canExecute(hierarchicalId: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("canExecute", "canExecute(string):(bool)", [
      ethereum.Value.fromString(hierarchicalId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  canVote(hierarchicalId: string, voter: Address): boolean {
    let result = super.call("canVote", "canVote(string,address):(bool)", [
      ethereum.Value.fromString(hierarchicalId),
      ethereum.Value.fromAddress(voter)
    ]);

    return result[0].toBoolean();
  }

  try_canVote(
    hierarchicalId: string,
    voter: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("canVote", "canVote(string,address):(bool)", [
      ethereum.Value.fromString(hierarchicalId),
      ethereum.Value.fromAddress(voter)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createProposal(
    organizationId: Bytes,
    title: string,
    description: string,
    metadataURI: string,
    proposalType: i32,
    votingType: i32,
    votingPower: i32,
    votingPeriod: BigInt,
    executionData: Bytes,
    targetContract: Address
  ): string {
    let result = super.call(
      "createProposal",
      "createProposal(bytes8,string,string,string,uint8,uint8,uint8,uint256,bytes,address):(string)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromString(title),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(metadataURI),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(proposalType)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(votingType)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(votingPower)),
        ethereum.Value.fromUnsignedBigInt(votingPeriod),
        ethereum.Value.fromBytes(executionData),
        ethereum.Value.fromAddress(targetContract)
      ]
    );

    return result[0].toString();
  }

  try_createProposal(
    organizationId: Bytes,
    title: string,
    description: string,
    metadataURI: string,
    proposalType: i32,
    votingType: i32,
    votingPower: i32,
    votingPeriod: BigInt,
    executionData: Bytes,
    targetContract: Address
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "createProposal",
      "createProposal(bytes8,string,string,string,uint8,uint8,uint8,uint256,bytes,address):(string)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromString(title),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(metadataURI),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(proposalType)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(votingType)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(votingPower)),
        ethereum.Value.fromUnsignedBigInt(votingPeriod),
        ethereum.Value.fromBytes(executionData),
        ethereum.Value.fromAddress(targetContract)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  executeProposal(hierarchicalId: string): Signal__executeProposalResult {
    let result = super.call(
      "executeProposal",
      "executeProposal(string):(bool,bytes)",
      [ethereum.Value.fromString(hierarchicalId)]
    );

    return new Signal__executeProposalResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_executeProposal(
    hierarchicalId: string
  ): ethereum.CallResult<Signal__executeProposalResult> {
    let result = super.tryCall(
      "executeProposal",
      "executeProposal(string):(bool,bytes)",
      [ethereum.Value.fromString(hierarchicalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Signal__executeProposalResult(
        value[0].toBoolean(),
        value[1].toBytes()
      )
    );
  }

  getDelegatedVotingPower(delegator: Address): BigInt {
    let result = super.call(
      "getDelegatedVotingPower",
      "getDelegatedVotingPower(address):(uint256)",
      [ethereum.Value.fromAddress(delegator)]
    );

    return result[0].toBigInt();
  }

  try_getDelegatedVotingPower(delegator: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDelegatedVotingPower",
      "getDelegatedVotingPower(address):(uint256)",
      [ethereum.Value.fromAddress(delegator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDelegations(
    delegator: Address
  ): Array<Signal__getDelegationsResultValue0Struct> {
    let result = super.call(
      "getDelegations",
      "getDelegations(address):((address,uint256,uint256,bool)[])",
      [ethereum.Value.fromAddress(delegator)]
    );

    return result[0].toTupleArray<Signal__getDelegationsResultValue0Struct>();
  }

  try_getDelegations(
    delegator: Address
  ): ethereum.CallResult<Array<Signal__getDelegationsResultValue0Struct>> {
    let result = super.tryCall(
      "getDelegations",
      "getDelegations(address):((address,uint256,uint256,bool)[])",
      [ethereum.Value.fromAddress(delegator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Signal__getDelegationsResultValue0Struct>()
    );
  }

  getOrganizationProposals(organizationId: Bytes): Array<Bytes> {
    let result = super.call(
      "getOrganizationProposals",
      "getOrganizationProposals(bytes8):(bytes32[])",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBytesArray();
  }

  try_getOrganizationProposals(
    organizationId: Bytes
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getOrganizationProposals",
      "getOrganizationProposals(bytes8):(bytes32[])",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getProposal(hierarchicalId: string): Signal__getProposalResultValue0Struct {
    let result = super.call(
      "getProposal",
      "getProposal(string):((string,bytes8,address,string,string,string,uint8,uint8,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,bytes,address,address,uint256,uint256))",
      [ethereum.Value.fromString(hierarchicalId)]
    );

    return changetype<Signal__getProposalResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getProposal(
    hierarchicalId: string
  ): ethereum.CallResult<Signal__getProposalResultValue0Struct> {
    let result = super.tryCall(
      "getProposal",
      "getProposal(string):((string,bytes8,address,string,string,string,uint8,uint8,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,bytes,address,address,uint256,uint256))",
      [ethereum.Value.fromString(hierarchicalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Signal__getProposalResultValue0Struct>(value[0].toTuple())
    );
  }

  getProposalsByState(state: i32): Array<Bytes> {
    let result = super.call(
      "getProposalsByState",
      "getProposalsByState(uint8):(bytes32[])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(state))]
    );

    return result[0].toBytesArray();
  }

  try_getProposalsByState(state: i32): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getProposalsByState",
      "getProposalsByState(uint8):(bytes32[])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(state))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getVote(
    hierarchicalId: string,
    voter: Address
  ): Signal__getVoteResultValue0Struct {
    let result = super.call(
      "getVote",
      "getVote(string,address):((address,uint8,uint256,uint256,string,bool,uint256,uint256))",
      [
        ethereum.Value.fromString(hierarchicalId),
        ethereum.Value.fromAddress(voter)
      ]
    );

    return changetype<Signal__getVoteResultValue0Struct>(result[0].toTuple());
  }

  try_getVote(
    hierarchicalId: string,
    voter: Address
  ): ethereum.CallResult<Signal__getVoteResultValue0Struct> {
    let result = super.tryCall(
      "getVote",
      "getVote(string,address):((address,uint8,uint256,uint256,string,bool,uint256,uint256))",
      [
        ethereum.Value.fromString(hierarchicalId),
        ethereum.Value.fromAddress(voter)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Signal__getVoteResultValue0Struct>(value[0].toTuple())
    );
  }

  getVotingParameters(
    organizationId: Bytes
  ): Signal__getVotingParametersResultValue0Struct {
    let result = super.call(
      "getVotingParameters",
      "getVotingParameters(bytes8):((uint256,uint256,uint256,uint256,uint256,bool))",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return changetype<Signal__getVotingParametersResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getVotingParameters(
    organizationId: Bytes
  ): ethereum.CallResult<Signal__getVotingParametersResultValue0Struct> {
    let result = super.tryCall(
      "getVotingParameters",
      "getVotingParameters(bytes8):((uint256,uint256,uint256,uint256,uint256,bool))",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Signal__getVotingParametersResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getVotingPowerWithDelegation(
    organizationId: Bytes,
    account: Address,
    votingPowerType: i32
  ): BigInt {
    let result = super.call(
      "getVotingPowerWithDelegation",
      "getVotingPowerWithDelegation(bytes8,address,uint8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(votingPowerType))
      ]
    );

    return result[0].toBigInt();
  }

  try_getVotingPowerWithDelegation(
    organizationId: Bytes,
    account: Address,
    votingPowerType: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getVotingPowerWithDelegation",
      "getVotingPowerWithDelegation(bytes8,address,uint8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(votingPowerType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  moduleId(): Bytes {
    let result = super.call("moduleId", "moduleId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_moduleId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("moduleId", "moduleId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApplyConvictionDecayCall extends ethereum.Call {
  get inputs(): ApplyConvictionDecayCall__Inputs {
    return new ApplyConvictionDecayCall__Inputs(this);
  }

  get outputs(): ApplyConvictionDecayCall__Outputs {
    return new ApplyConvictionDecayCall__Outputs(this);
  }
}

export class ApplyConvictionDecayCall__Inputs {
  _call: ApplyConvictionDecayCall;

  constructor(call: ApplyConvictionDecayCall) {
    this._call = call;
  }

  get hierarchicalId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get voter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ApplyConvictionDecayCall__Outputs {
  _call: ApplyConvictionDecayCall;

  constructor(call: ApplyConvictionDecayCall) {
    this._call = call;
  }
}

export class CancelProposalCall extends ethereum.Call {
  get inputs(): CancelProposalCall__Inputs {
    return new CancelProposalCall__Inputs(this);
  }

  get outputs(): CancelProposalCall__Outputs {
    return new CancelProposalCall__Outputs(this);
  }
}

export class CancelProposalCall__Inputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }

  get hierarchicalId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get reason(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CancelProposalCall__Outputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }
}

export class CastVoteCall extends ethereum.Call {
  get inputs(): CastVoteCall__Inputs {
    return new CastVoteCall__Inputs(this);
  }

  get outputs(): CastVoteCall__Outputs {
    return new CastVoteCall__Outputs(this);
  }
}

export class CastVoteCall__Inputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }

  get hierarchicalId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get choice(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CastVoteCall__Outputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }
}

export class CastVoteWithConvictionCall extends ethereum.Call {
  get inputs(): CastVoteWithConvictionCall__Inputs {
    return new CastVoteWithConvictionCall__Inputs(this);
  }

  get outputs(): CastVoteWithConvictionCall__Outputs {
    return new CastVoteWithConvictionCall__Outputs(this);
  }
}

export class CastVoteWithConvictionCall__Inputs {
  _call: CastVoteWithConvictionCall;

  constructor(call: CastVoteWithConvictionCall) {
    this._call = call;
  }

  get hierarchicalId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get choice(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get convictionTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get reason(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CastVoteWithConvictionCall__Outputs {
  _call: CastVoteWithConvictionCall;

  constructor(call: CastVoteWithConvictionCall) {
    this._call = call;
  }
}

export class CreateProposalCall extends ethereum.Call {
  get inputs(): CreateProposalCall__Inputs {
    return new CreateProposalCall__Inputs(this);
  }

  get outputs(): CreateProposalCall__Outputs {
    return new CreateProposalCall__Outputs(this);
  }
}

export class CreateProposalCall__Inputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get title(): string {
    return this._call.inputValues[1].value.toString();
  }

  get description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get proposalType(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get votingType(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get votingPower(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get votingPeriod(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get executionData(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }

  get targetContract(): Address {
    return this._call.inputValues[9].value.toAddress();
  }
}

export class CreateProposalCall__Outputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }

  get hierarchicalId(): string {
    return this._call.outputValues[0].value.toString();
  }
}

export class DelegateVotingPowerCall extends ethereum.Call {
  get inputs(): DelegateVotingPowerCall__Inputs {
    return new DelegateVotingPowerCall__Inputs(this);
  }

  get outputs(): DelegateVotingPowerCall__Outputs {
    return new DelegateVotingPowerCall__Outputs(this);
  }
}

export class DelegateVotingPowerCall__Inputs {
  _call: DelegateVotingPowerCall;

  constructor(call: DelegateVotingPowerCall) {
    this._call = call;
  }

  get delegatee(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DelegateVotingPowerCall__Outputs {
  _call: DelegateVotingPowerCall;

  constructor(call: DelegateVotingPowerCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall extends ethereum.Call {
  get inputs(): EmergencyPauseCall__Inputs {
    return new EmergencyPauseCall__Inputs(this);
  }

  get outputs(): EmergencyPauseCall__Outputs {
    return new EmergencyPauseCall__Outputs(this);
  }
}

export class EmergencyPauseCall__Inputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall__Outputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall extends ethereum.Call {
  get inputs(): EmergencyUnpauseCall__Inputs {
    return new EmergencyUnpauseCall__Inputs(this);
  }

  get outputs(): EmergencyUnpauseCall__Outputs {
    return new EmergencyUnpauseCall__Outputs(this);
  }
}

export class EmergencyUnpauseCall__Inputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall__Outputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class ExecuteProposalCall extends ethereum.Call {
  get inputs(): ExecuteProposalCall__Inputs {
    return new ExecuteProposalCall__Inputs(this);
  }

  get outputs(): ExecuteProposalCall__Outputs {
    return new ExecuteProposalCall__Outputs(this);
  }
}

export class ExecuteProposalCall__Inputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }

  get hierarchicalId(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ExecuteProposalCall__Outputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }

  get returnData(): Bytes {
    return this._call.outputValues[1].value.toBytes();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get registryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall extends ethereum.Call {
  get inputs(): OnModuleDisabledCall__Inputs {
    return new OnModuleDisabledCall__Inputs(this);
  }

  get outputs(): OnModuleDisabledCall__Outputs {
    return new OnModuleDisabledCall__Outputs(this);
  }
}

export class OnModuleDisabledCall__Inputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall__Outputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall extends ethereum.Call {
  get inputs(): OnModuleEnabledCall__Inputs {
    return new OnModuleEnabledCall__Inputs(this);
  }

  get outputs(): OnModuleEnabledCall__Outputs {
    return new OnModuleEnabledCall__Outputs(this);
  }
}

export class OnModuleEnabledCall__Inputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall__Outputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetVotingParametersCall extends ethereum.Call {
  get inputs(): SetVotingParametersCall__Inputs {
    return new SetVotingParametersCall__Inputs(this);
  }

  get outputs(): SetVotingParametersCall__Outputs {
    return new SetVotingParametersCall__Outputs(this);
  }
}

export class SetVotingParametersCall__Inputs {
  _call: SetVotingParametersCall;

  constructor(call: SetVotingParametersCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get params(): SetVotingParametersCallParamsStruct {
    return changetype<SetVotingParametersCallParamsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class SetVotingParametersCall__Outputs {
  _call: SetVotingParametersCall;

  constructor(call: SetVotingParametersCall) {
    this._call = call;
  }
}

export class SetVotingParametersCallParamsStruct extends ethereum.Tuple {
  get votingDelay(): BigInt {
    return this[0].toBigInt();
  }

  get votingPeriod(): BigInt {
    return this[1].toBigInt();
  }

  get executionDelay(): BigInt {
    return this[2].toBigInt();
  }

  get quorumThreshold(): BigInt {
    return this[3].toBigInt();
  }

  get proposalThreshold(): BigInt {
    return this[4].toBigInt();
  }

  get requireMembership(): boolean {
    return this[5].toBoolean();
  }
}

export class UndelegateVotingPowerCall extends ethereum.Call {
  get inputs(): UndelegateVotingPowerCall__Inputs {
    return new UndelegateVotingPowerCall__Inputs(this);
  }

  get outputs(): UndelegateVotingPowerCall__Outputs {
    return new UndelegateVotingPowerCall__Outputs(this);
  }
}

export class UndelegateVotingPowerCall__Inputs {
  _call: UndelegateVotingPowerCall;

  constructor(call: UndelegateVotingPowerCall) {
    this._call = call;
  }

  get delegatee(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UndelegateVotingPowerCall__Outputs {
  _call: UndelegateVotingPowerCall;

  constructor(call: UndelegateVotingPowerCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
