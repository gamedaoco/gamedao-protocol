// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CampaignCreated extends ethereum.Event {
  get params(): CampaignCreated__Params {
    return new CampaignCreated__Params(this);
  }
}

export class CampaignCreated__Params {
  _event: CampaignCreated;

  constructor(event: CampaignCreated) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get organizationId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[3].value.toString();
  }

  get flowType(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get target(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class CampaignFinalized extends ethereum.Event {
  get params(): CampaignFinalized__Params {
    return new CampaignFinalized__Params(this);
  }
}

export class CampaignFinalized__Params {
  _event: CampaignFinalized;

  constructor(event: CampaignFinalized) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get finalState(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get totalRaised(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get contributorCount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class CampaignStateChanged extends ethereum.Event {
  get params(): CampaignStateChanged__Params {
    return new CampaignStateChanged__Params(this);
  }
}

export class CampaignStateChanged__Params {
  _event: CampaignStateChanged;

  constructor(event: CampaignStateChanged) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldState(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get newState(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CampaignUpdated extends ethereum.Event {
  get params(): CampaignUpdated__Params {
    return new CampaignUpdated__Params(this);
  }
}

export class CampaignUpdated__Params {
  _event: CampaignUpdated;

  constructor(event: CampaignUpdated) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get title(): string {
    return this._event.parameters[1].value.toString();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get target(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get min(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get max(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class ContributionMade extends ethereum.Event {
  get params(): ContributionMade__Params {
    return new ContributionMade__Params(this);
  }
}

export class ContributionMade__Params {
  _event: ContributionMade;

  constructor(event: ContributionMade) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get contributor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalRaised(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ContributionRefunded extends ethereum.Event {
  get params(): ContributionRefunded__Params {
    return new ContributionRefunded__Params(this);
  }
}

export class ContributionRefunded__Params {
  _event: ContributionRefunded;

  constructor(event: ContributionRefunded) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get contributor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ModuleDisabled extends ethereum.Event {
  get params(): ModuleDisabled__Params {
    return new ModuleDisabled__Params(this);
  }
}

export class ModuleDisabled__Params {
  _event: ModuleDisabled;

  constructor(event: ModuleDisabled) {
    this._event = event;
  }
}

export class ModuleEnabled extends ethereum.Event {
  get params(): ModuleEnabled__Params {
    return new ModuleEnabled__Params(this);
  }
}

export class ModuleEnabled__Params {
  _event: ModuleEnabled;

  constructor(event: ModuleEnabled) {
    this._event = event;
  }
}

export class ModuleInitialized extends ethereum.Event {
  get params(): ModuleInitialized__Params {
    return new ModuleInitialized__Params(this);
  }
}

export class ModuleInitialized__Params {
  _event: ModuleInitialized;

  constructor(event: ModuleInitialized) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProtocolFeeCollected extends ethereum.Event {
  get params(): ProtocolFeeCollected__Params {
    return new ProtocolFeeCollected__Params(this);
  }
}

export class ProtocolFeeCollected__Params {
  _event: ProtocolFeeCollected;

  constructor(event: ProtocolFeeCollected) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RewardsDistributed extends ethereum.Event {
  get params(): RewardsDistributed__Params {
    return new RewardsDistributed__Params(this);
  }
}

export class RewardsDistributed__Params {
  _event: RewardsDistributed;

  constructor(event: RewardsDistributed) {
    this._event = event;
  }

  get campaignId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get totalAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get contributorCount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Flow__createCampaignWithParamsInputParamsStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get metadataURI(): string {
    return this[2].toString();
  }

  get flowType(): i32 {
    return this[3].toI32();
  }

  get paymentToken(): Address {
    return this[4].toAddress();
  }

  get target(): BigInt {
    return this[5].toBigInt();
  }

  get min(): BigInt {
    return this[6].toBigInt();
  }

  get max(): BigInt {
    return this[7].toBigInt();
  }

  get duration(): BigInt {
    return this[8].toBigInt();
  }

  get autoFinalize(): boolean {
    return this[9].toBoolean();
  }
}

export class Flow__getCampaignResultValue0Struct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get organizationId(): Bytes {
    return this[1].toBytes();
  }

  get creator(): Address {
    return this[2].toAddress();
  }

  get admin(): Address {
    return this[3].toAddress();
  }

  get title(): string {
    return this[4].toString();
  }

  get description(): string {
    return this[5].toString();
  }

  get metadataURI(): string {
    return this[6].toString();
  }

  get flowType(): i32 {
    return this[7].toI32();
  }

  get state(): i32 {
    return this[8].toI32();
  }

  get paymentToken(): Address {
    return this[9].toAddress();
  }

  get target(): BigInt {
    return this[10].toBigInt();
  }

  get min(): BigInt {
    return this[11].toBigInt();
  }

  get max(): BigInt {
    return this[12].toBigInt();
  }

  get raised(): BigInt {
    return this[13].toBigInt();
  }

  get contributorCount(): BigInt {
    return this[14].toBigInt();
  }

  get startTime(): BigInt {
    return this[15].toBigInt();
  }

  get endTime(): BigInt {
    return this[16].toBigInt();
  }

  get createdAt(): BigInt {
    return this[17].toBigInt();
  }

  get updatedAt(): BigInt {
    return this[18].toBigInt();
  }

  get autoFinalize(): boolean {
    return this[19].toBoolean();
  }

  get protocolFee(): BigInt {
    return this[20].toBigInt();
  }
}

export class Flow__getCampaignProgressResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getRaised(): BigInt {
    return this.value0;
  }

  getTarget(): BigInt {
    return this.value1;
  }

  getPercentage(): BigInt {
    return this.value2;
  }
}

export class Flow__getContributionResultValue0Struct extends ethereum.Tuple {
  get contributor(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }

  get state(): i32 {
    return this[3].toI32();
  }

  get metadata(): string {
    return this[4].toString();
  }
}

export class Flow__getRewardDistributionResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getTotalReward(): BigInt {
    return this.value0;
  }

  getClaimedAmount(): BigInt {
    return this.value1;
  }

  getClaimableAmount(): BigInt {
    return this.value2;
  }
}

export class Flow extends ethereum.SmartContract {
  static bind(address: Address): Flow {
    return new Flow("Flow", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  BASIS_POINTS(): BigInt {
    let result = super.call("BASIS_POINTS", "BASIS_POINTS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_BASIS_POINTS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("BASIS_POINTS", "BASIS_POINTS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  CAMPAIGN_CREATION_REPUTATION(): BigInt {
    let result = super.call(
      "CAMPAIGN_CREATION_REPUTATION",
      "CAMPAIGN_CREATION_REPUTATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_CAMPAIGN_CREATION_REPUTATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "CAMPAIGN_CREATION_REPUTATION",
      "CAMPAIGN_CREATION_REPUTATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  CAMPAIGN_CREATOR_ROLE(): Bytes {
    let result = super.call(
      "CAMPAIGN_CREATOR_ROLE",
      "CAMPAIGN_CREATOR_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CAMPAIGN_CREATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CAMPAIGN_CREATOR_ROLE",
      "CAMPAIGN_CREATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  CAMPAIGN_SUCCESS_REPUTATION(): BigInt {
    let result = super.call(
      "CAMPAIGN_SUCCESS_REPUTATION",
      "CAMPAIGN_SUCCESS_REPUTATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_CAMPAIGN_SUCCESS_REPUTATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "CAMPAIGN_SUCCESS_REPUTATION",
      "CAMPAIGN_SUCCESS_REPUTATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  CONTRIBUTION_REPUTATION(): BigInt {
    let result = super.call(
      "CONTRIBUTION_REPUTATION",
      "CONTRIBUTION_REPUTATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_CONTRIBUTION_REPUTATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "CONTRIBUTION_REPUTATION",
      "CONTRIBUTION_REPUTATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FLOW_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "FLOW_ADMIN_ROLE",
      "FLOW_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_FLOW_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "FLOW_ADMIN_ROLE",
      "FLOW_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  LARGE_CONTRIBUTION_BONUS(): BigInt {
    let result = super.call(
      "LARGE_CONTRIBUTION_BONUS",
      "LARGE_CONTRIBUTION_BONUS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_LARGE_CONTRIBUTION_BONUS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "LARGE_CONTRIBUTION_BONUS",
      "LARGE_CONTRIBUTION_BONUS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  LARGE_CONTRIBUTION_THRESHOLD(): BigInt {
    let result = super.call(
      "LARGE_CONTRIBUTION_THRESHOLD",
      "LARGE_CONTRIBUTION_THRESHOLD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_LARGE_CONTRIBUTION_THRESHOLD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "LARGE_CONTRIBUTION_THRESHOLD",
      "LARGE_CONTRIBUTION_THRESHOLD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_PROTOCOL_FEE(): BigInt {
    let result = super.call(
      "MAX_PROTOCOL_FEE",
      "MAX_PROTOCOL_FEE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_PROTOCOL_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_PROTOCOL_FEE",
      "MAX_PROTOCOL_FEE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MODULE_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "MODULE_ADMIN_ROLE",
      "MODULE_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MODULE_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MODULE_ADMIN_ROLE",
      "MODULE_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OPERATOR_ROLE(): Bytes {
    let result = super.call("OPERATOR_ROLE", "OPERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OPERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "OPERATOR_ROLE",
      "OPERATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  calculateProtocolFee(amount: BigInt): BigInt {
    let result = super.call(
      "calculateProtocolFee",
      "calculateProtocolFee(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(amount)]
    );

    return result[0].toBigInt();
  }

  try_calculateProtocolFee(amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateProtocolFee",
      "calculateProtocolFee(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  canContribute(campaignId: Bytes, param1: Address): boolean {
    let result = super.call(
      "canContribute",
      "canContribute(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(campaignId),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_canContribute(
    campaignId: Bytes,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canContribute",
      "canContribute(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(campaignId),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createCampaign(
    organizationId: Bytes,
    title: string,
    description: string,
    metadataURI: string,
    flowType: i32,
    paymentToken: Address,
    target: BigInt,
    min: BigInt,
    max: BigInt,
    duration: BigInt,
    autoFinalize: boolean
  ): Bytes {
    let result = super.call(
      "createCampaign",
      "createCampaign(bytes8,string,string,string,uint8,address,uint256,uint256,uint256,uint256,bool):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromString(title),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(metadataURI),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(flowType)),
        ethereum.Value.fromAddress(paymentToken),
        ethereum.Value.fromUnsignedBigInt(target),
        ethereum.Value.fromUnsignedBigInt(min),
        ethereum.Value.fromUnsignedBigInt(max),
        ethereum.Value.fromUnsignedBigInt(duration),
        ethereum.Value.fromBoolean(autoFinalize)
      ]
    );

    return result[0].toBytes();
  }

  try_createCampaign(
    organizationId: Bytes,
    title: string,
    description: string,
    metadataURI: string,
    flowType: i32,
    paymentToken: Address,
    target: BigInt,
    min: BigInt,
    max: BigInt,
    duration: BigInt,
    autoFinalize: boolean
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createCampaign",
      "createCampaign(bytes8,string,string,string,uint8,address,uint256,uint256,uint256,uint256,bool):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromString(title),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(metadataURI),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(flowType)),
        ethereum.Value.fromAddress(paymentToken),
        ethereum.Value.fromUnsignedBigInt(target),
        ethereum.Value.fromUnsignedBigInt(min),
        ethereum.Value.fromUnsignedBigInt(max),
        ethereum.Value.fromUnsignedBigInt(duration),
        ethereum.Value.fromBoolean(autoFinalize)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createCampaignWithParams(
    creator: Address,
    organizationId: Bytes,
    params: Flow__createCampaignWithParamsInputParamsStruct
  ): Bytes {
    let result = super.call(
      "createCampaignWithParams",
      "createCampaignWithParams(address,bytes8,(string,string,string,uint8,address,uint256,uint256,uint256,uint256,bool)):(bytes32)",
      [
        ethereum.Value.fromAddress(creator),
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromTuple(params)
      ]
    );

    return result[0].toBytes();
  }

  try_createCampaignWithParams(
    creator: Address,
    organizationId: Bytes,
    params: Flow__createCampaignWithParamsInputParamsStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createCampaignWithParams",
      "createCampaignWithParams(address,bytes8,(string,string,string,uint8,address,uint256,uint256,uint256,uint256,bool)):(bytes32)",
      [
        ethereum.Value.fromAddress(creator),
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromTuple(params)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getCampaign(campaignId: Bytes): Flow__getCampaignResultValue0Struct {
    let result = super.call(
      "getCampaign",
      "getCampaign(bytes32):((uint256,bytes8,address,address,string,string,string,uint8,uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256))",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );

    return changetype<Flow__getCampaignResultValue0Struct>(result[0].toTuple());
  }

  try_getCampaign(
    campaignId: Bytes
  ): ethereum.CallResult<Flow__getCampaignResultValue0Struct> {
    let result = super.tryCall(
      "getCampaign",
      "getCampaign(bytes32):((uint256,bytes8,address,address,string,string,string,uint8,uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256))",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Flow__getCampaignResultValue0Struct>(value[0].toTuple())
    );
  }

  getCampaignContributors(campaignId: Bytes): Array<Address> {
    let result = super.call(
      "getCampaignContributors",
      "getCampaignContributors(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );

    return result[0].toAddressArray();
  }

  try_getCampaignContributors(
    campaignId: Bytes
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getCampaignContributors",
      "getCampaignContributors(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getCampaignCount(): BigInt {
    let result = super.call(
      "getCampaignCount",
      "getCampaignCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCampaignCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCampaignCount",
      "getCampaignCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCampaignProgress(campaignId: Bytes): Flow__getCampaignProgressResult {
    let result = super.call(
      "getCampaignProgress",
      "getCampaignProgress(bytes32):(uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );

    return new Flow__getCampaignProgressResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getCampaignProgress(
    campaignId: Bytes
  ): ethereum.CallResult<Flow__getCampaignProgressResult> {
    let result = super.tryCall(
      "getCampaignProgress",
      "getCampaignProgress(bytes32):(uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Flow__getCampaignProgressResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getCampaignsByOrganization(organizationId: Bytes): Array<Bytes> {
    let result = super.call(
      "getCampaignsByOrganization",
      "getCampaignsByOrganization(bytes8):(bytes32[])",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBytesArray();
  }

  try_getCampaignsByOrganization(
    organizationId: Bytes
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getCampaignsByOrganization",
      "getCampaignsByOrganization(bytes8):(bytes32[])",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getCampaignsByState(state: i32): Array<Bytes> {
    let result = super.call(
      "getCampaignsByState",
      "getCampaignsByState(uint8):(bytes32[])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(state))]
    );

    return result[0].toBytesArray();
  }

  try_getCampaignsByState(state: i32): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getCampaignsByState",
      "getCampaignsByState(uint8):(bytes32[])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(state))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getContribution(
    campaignId: Bytes,
    contributor: Address
  ): Flow__getContributionResultValue0Struct {
    let result = super.call(
      "getContribution",
      "getContribution(bytes32,address):((address,uint256,uint256,uint8,string))",
      [
        ethereum.Value.fromFixedBytes(campaignId),
        ethereum.Value.fromAddress(contributor)
      ]
    );

    return changetype<Flow__getContributionResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getContribution(
    campaignId: Bytes,
    contributor: Address
  ): ethereum.CallResult<Flow__getContributionResultValue0Struct> {
    let result = super.tryCall(
      "getContribution",
      "getContribution(bytes32,address):((address,uint256,uint256,uint8,string))",
      [
        ethereum.Value.fromFixedBytes(campaignId),
        ethereum.Value.fromAddress(contributor)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Flow__getContributionResultValue0Struct>(value[0].toTuple())
    );
  }

  getProtocolFeeRate(): BigInt {
    let result = super.call(
      "getProtocolFeeRate",
      "getProtocolFeeRate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getProtocolFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProtocolFeeRate",
      "getProtocolFeeRate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRewardDistribution(
    campaignId: Bytes,
    rewardToken: Address,
    contributor: Address
  ): Flow__getRewardDistributionResult {
    let result = super.call(
      "getRewardDistribution",
      "getRewardDistribution(bytes32,address,address):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromFixedBytes(campaignId),
        ethereum.Value.fromAddress(rewardToken),
        ethereum.Value.fromAddress(contributor)
      ]
    );

    return new Flow__getRewardDistributionResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getRewardDistribution(
    campaignId: Bytes,
    rewardToken: Address,
    contributor: Address
  ): ethereum.CallResult<Flow__getRewardDistributionResult> {
    let result = super.tryCall(
      "getRewardDistribution",
      "getRewardDistribution(bytes32,address,address):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromFixedBytes(campaignId),
        ethereum.Value.fromAddress(rewardToken),
        ethereum.Value.fromAddress(contributor)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Flow__getRewardDistributionResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTimeRemaining(campaignId: Bytes): BigInt {
    let result = super.call(
      "getTimeRemaining",
      "getTimeRemaining(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );

    return result[0].toBigInt();
  }

  try_getTimeRemaining(campaignId: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTimeRemaining",
      "getTimeRemaining(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isCampaignActive(campaignId: Bytes): boolean {
    let result = super.call(
      "isCampaignActive",
      "isCampaignActive(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );

    return result[0].toBoolean();
  }

  try_isCampaignActive(campaignId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isCampaignActive",
      "isCampaignActive(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(campaignId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  moduleId(): Bytes {
    let result = super.call("moduleId", "moduleId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_moduleId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("moduleId", "moduleId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get rewardToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class ContributeCall extends ethereum.Call {
  get inputs(): ContributeCall__Inputs {
    return new ContributeCall__Inputs(this);
  }

  get outputs(): ContributeCall__Outputs {
    return new ContributeCall__Outputs(this);
  }
}

export class ContributeCall__Inputs {
  _call: ContributeCall;

  constructor(call: ContributeCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get metadata(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ContributeCall__Outputs {
  _call: ContributeCall;

  constructor(call: ContributeCall) {
    this._call = call;
  }
}

export class CreateCampaignCall extends ethereum.Call {
  get inputs(): CreateCampaignCall__Inputs {
    return new CreateCampaignCall__Inputs(this);
  }

  get outputs(): CreateCampaignCall__Outputs {
    return new CreateCampaignCall__Outputs(this);
  }
}

export class CreateCampaignCall__Inputs {
  _call: CreateCampaignCall;

  constructor(call: CreateCampaignCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get title(): string {
    return this._call.inputValues[1].value.toString();
  }

  get description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get flowType(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get paymentToken(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get target(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get min(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get max(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get autoFinalize(): boolean {
    return this._call.inputValues[10].value.toBoolean();
  }
}

export class CreateCampaignCall__Outputs {
  _call: CreateCampaignCall;

  constructor(call: CreateCampaignCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateCampaignWithParamsCall extends ethereum.Call {
  get inputs(): CreateCampaignWithParamsCall__Inputs {
    return new CreateCampaignWithParamsCall__Inputs(this);
  }

  get outputs(): CreateCampaignWithParamsCall__Outputs {
    return new CreateCampaignWithParamsCall__Outputs(this);
  }
}

export class CreateCampaignWithParamsCall__Inputs {
  _call: CreateCampaignWithParamsCall;

  constructor(call: CreateCampaignWithParamsCall) {
    this._call = call;
  }

  get creator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get organizationId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get params(): CreateCampaignWithParamsCallParamsStruct {
    return changetype<CreateCampaignWithParamsCallParamsStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class CreateCampaignWithParamsCall__Outputs {
  _call: CreateCampaignWithParamsCall;

  constructor(call: CreateCampaignWithParamsCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateCampaignWithParamsCallParamsStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get metadataURI(): string {
    return this[2].toString();
  }

  get flowType(): i32 {
    return this[3].toI32();
  }

  get paymentToken(): Address {
    return this[4].toAddress();
  }

  get target(): BigInt {
    return this[5].toBigInt();
  }

  get min(): BigInt {
    return this[6].toBigInt();
  }

  get max(): BigInt {
    return this[7].toBigInt();
  }

  get duration(): BigInt {
    return this[8].toBigInt();
  }

  get autoFinalize(): boolean {
    return this[9].toBoolean();
  }
}

export class DistributeRewardsCall extends ethereum.Call {
  get inputs(): DistributeRewardsCall__Inputs {
    return new DistributeRewardsCall__Inputs(this);
  }

  get outputs(): DistributeRewardsCall__Outputs {
    return new DistributeRewardsCall__Outputs(this);
  }
}

export class DistributeRewardsCall__Inputs {
  _call: DistributeRewardsCall;

  constructor(call: DistributeRewardsCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get rewardToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get totalRewardAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DistributeRewardsCall__Outputs {
  _call: DistributeRewardsCall;

  constructor(call: DistributeRewardsCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall extends ethereum.Call {
  get inputs(): EmergencyPauseCall__Inputs {
    return new EmergencyPauseCall__Inputs(this);
  }

  get outputs(): EmergencyPauseCall__Outputs {
    return new EmergencyPauseCall__Outputs(this);
  }
}

export class EmergencyPauseCall__Inputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall__Outputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall extends ethereum.Call {
  get inputs(): EmergencyUnpauseCall__Inputs {
    return new EmergencyUnpauseCall__Inputs(this);
  }

  get outputs(): EmergencyUnpauseCall__Outputs {
    return new EmergencyUnpauseCall__Outputs(this);
  }
}

export class EmergencyUnpauseCall__Inputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall__Outputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class FinalizeCampaignCall extends ethereum.Call {
  get inputs(): FinalizeCampaignCall__Inputs {
    return new FinalizeCampaignCall__Inputs(this);
  }

  get outputs(): FinalizeCampaignCall__Outputs {
    return new FinalizeCampaignCall__Outputs(this);
  }
}

export class FinalizeCampaignCall__Inputs {
  _call: FinalizeCampaignCall;

  constructor(call: FinalizeCampaignCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class FinalizeCampaignCall__Outputs {
  _call: FinalizeCampaignCall;

  constructor(call: FinalizeCampaignCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get registryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall extends ethereum.Call {
  get inputs(): OnModuleDisabledCall__Inputs {
    return new OnModuleDisabledCall__Inputs(this);
  }

  get outputs(): OnModuleDisabledCall__Outputs {
    return new OnModuleDisabledCall__Outputs(this);
  }
}

export class OnModuleDisabledCall__Inputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall__Outputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall extends ethereum.Call {
  get inputs(): OnModuleEnabledCall__Inputs {
    return new OnModuleEnabledCall__Inputs(this);
  }

  get outputs(): OnModuleEnabledCall__Outputs {
    return new OnModuleEnabledCall__Outputs(this);
  }
}

export class OnModuleEnabledCall__Inputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall__Outputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RefundContributionCall extends ethereum.Call {
  get inputs(): RefundContributionCall__Inputs {
    return new RefundContributionCall__Inputs(this);
  }

  get outputs(): RefundContributionCall__Outputs {
    return new RefundContributionCall__Outputs(this);
  }
}

export class RefundContributionCall__Inputs {
  _call: RefundContributionCall;

  constructor(call: RefundContributionCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get contributor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RefundContributionCall__Outputs {
  _call: RefundContributionCall;

  constructor(call: RefundContributionCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetCampaignStateCall extends ethereum.Call {
  get inputs(): SetCampaignStateCall__Inputs {
    return new SetCampaignStateCall__Inputs(this);
  }

  get outputs(): SetCampaignStateCall__Outputs {
    return new SetCampaignStateCall__Outputs(this);
  }
}

export class SetCampaignStateCall__Inputs {
  _call: SetCampaignStateCall;

  constructor(call: SetCampaignStateCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get newState(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetCampaignStateCall__Outputs {
  _call: SetCampaignStateCall;

  constructor(call: SetCampaignStateCall) {
    this._call = call;
  }
}

export class SetProtocolFeeRateCall extends ethereum.Call {
  get inputs(): SetProtocolFeeRateCall__Inputs {
    return new SetProtocolFeeRateCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeRateCall__Outputs {
    return new SetProtocolFeeRateCall__Outputs(this);
  }
}

export class SetProtocolFeeRateCall__Inputs {
  _call: SetProtocolFeeRateCall;

  constructor(call: SetProtocolFeeRateCall) {
    this._call = call;
  }

  get newRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProtocolFeeRateCall__Outputs {
  _call: SetProtocolFeeRateCall;

  constructor(call: SetProtocolFeeRateCall) {
    this._call = call;
  }
}

export class SetProtocolFeeRecipientCall extends ethereum.Call {
  get inputs(): SetProtocolFeeRecipientCall__Inputs {
    return new SetProtocolFeeRecipientCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeRecipientCall__Outputs {
    return new SetProtocolFeeRecipientCall__Outputs(this);
  }
}

export class SetProtocolFeeRecipientCall__Inputs {
  _call: SetProtocolFeeRecipientCall;

  constructor(call: SetProtocolFeeRecipientCall) {
    this._call = call;
  }

  get newRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetProtocolFeeRecipientCall__Outputs {
  _call: SetProtocolFeeRecipientCall;

  constructor(call: SetProtocolFeeRecipientCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateCampaignCall extends ethereum.Call {
  get inputs(): UpdateCampaignCall__Inputs {
    return new UpdateCampaignCall__Inputs(this);
  }

  get outputs(): UpdateCampaignCall__Outputs {
    return new UpdateCampaignCall__Outputs(this);
  }
}

export class UpdateCampaignCall__Inputs {
  _call: UpdateCampaignCall;

  constructor(call: UpdateCampaignCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get title(): string {
    return this._call.inputValues[1].value.toString();
  }

  get description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get target(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get min(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get max(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class UpdateCampaignCall__Outputs {
  _call: UpdateCampaignCall;

  constructor(call: UpdateCampaignCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get campaignId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}
