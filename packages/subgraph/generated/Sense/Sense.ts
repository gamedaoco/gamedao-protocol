// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ExperienceAwarded extends ethereum.Event {
  get params(): ExperienceAwarded__Params {
    return new ExperienceAwarded__Params(this);
  }
}

export class ExperienceAwarded__Params {
  _event: ExperienceAwarded;

  constructor(event: ExperienceAwarded) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get profileId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get reason(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get awardedBy(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class InteractionRecorded extends ethereum.Event {
  get params(): InteractionRecorded__Params {
    return new InteractionRecorded__Params(this);
  }
}

export class InteractionRecorded__Params {
  _event: InteractionRecorded;

  constructor(event: InteractionRecorded) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get profileId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get positive(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get reason(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get recordedBy(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ModuleDisabled extends ethereum.Event {
  get params(): ModuleDisabled__Params {
    return new ModuleDisabled__Params(this);
  }
}

export class ModuleDisabled__Params {
  _event: ModuleDisabled;

  constructor(event: ModuleDisabled) {
    this._event = event;
  }
}

export class ModuleEnabled extends ethereum.Event {
  get params(): ModuleEnabled__Params {
    return new ModuleEnabled__Params(this);
  }
}

export class ModuleEnabled__Params {
  _event: ModuleEnabled;

  constructor(event: ModuleEnabled) {
    this._event = event;
  }
}

export class ModuleInitialized extends ethereum.Event {
  get params(): ModuleInitialized__Params {
    return new ModuleInitialized__Params(this);
  }
}

export class ModuleInitialized__Params {
  _event: ModuleInitialized;

  constructor(event: ModuleInitialized) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ReputationUpdated extends ethereum.Event {
  get params(): ReputationUpdated__Params {
    return new ReputationUpdated__Params(this);
  }
}

export class ReputationUpdated__Params {
  _event: ReputationUpdated;

  constructor(event: ReputationUpdated) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get profileId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get repType(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get delta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get reason(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get updatedBy(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Sense__getOrganizationReputationStatsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getTotalMembers(): BigInt {
    return this.value0;
  }

  getAverageReputation(): BigInt {
    return this.value1;
  }

  getTotalExperience(): BigInt {
    return this.value2;
  }

  getAverageTrust(): BigInt {
    return this.value3;
  }
}

export class Sense__getReputationResultReputationStruct extends ethereum.Tuple {
  get experience(): BigInt {
    return this[0].toBigInt();
  }

  get reputation(): BigInt {
    return this[1].toBigInt();
  }

  get trust(): BigInt {
    return this[2].toBigInt();
  }

  get lastUpdated(): BigInt {
    return this[3].toBigInt();
  }

  get totalInteractions(): BigInt {
    return this[4].toBigInt();
  }

  get positiveInteractions(): BigInt {
    return this[5].toBigInt();
  }

  get organizationId(): Bytes {
    return this[6].toBytes();
  }
}

export class Sense__getReputationBatchResultReputationsStruct extends ethereum.Tuple {
  get experience(): BigInt {
    return this[0].toBigInt();
  }

  get reputation(): BigInt {
    return this[1].toBigInt();
  }

  get trust(): BigInt {
    return this[2].toBigInt();
  }

  get lastUpdated(): BigInt {
    return this[3].toBigInt();
  }

  get totalInteractions(): BigInt {
    return this[4].toBigInt();
  }

  get positiveInteractions(): BigInt {
    return this[5].toBigInt();
  }

  get organizationId(): Bytes {
    return this[6].toBytes();
  }
}

export class Sense__getReputationHistoryResultEventsStruct extends ethereum.Tuple {
  get organizationId(): Bytes {
    return this[0].toBytes();
  }

  get profileId(): Bytes {
    return this[1].toBytes();
  }

  get repType(): i32 {
    return this[2].toI32();
  }

  get delta(): BigInt {
    return this[3].toBigInt();
  }

  get reason(): Bytes {
    return this[4].toBytes();
  }

  get updatedBy(): Address {
    return this[5].toAddress();
  }

  get timestamp(): BigInt {
    return this[6].toBigInt();
  }
}

export class Sense extends ethereum.SmartContract {
  static bind(address: Address): Sense {
    return new Sense("Sense", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_REPUTATION_DELTA(): BigInt {
    let result = super.call(
      "MAX_REPUTATION_DELTA",
      "MAX_REPUTATION_DELTA():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_REPUTATION_DELTA(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_REPUTATION_DELTA",
      "MAX_REPUTATION_DELTA():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MODULE_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "MODULE_ADMIN_ROLE",
      "MODULE_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MODULE_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MODULE_ADMIN_ROLE",
      "MODULE_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OPERATOR_ROLE(): Bytes {
    let result = super.call("OPERATOR_ROLE", "OPERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OPERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "OPERATOR_ROLE",
      "OPERATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  REPUTATION_MANAGER_ROLE(): Bytes {
    let result = super.call(
      "REPUTATION_MANAGER_ROLE",
      "REPUTATION_MANAGER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_REPUTATION_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "REPUTATION_MANAGER_ROLE",
      "REPUTATION_MANAGER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  REPUTATION_SCALE(): BigInt {
    let result = super.call(
      "REPUTATION_SCALE",
      "REPUTATION_SCALE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_REPUTATION_SCALE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "REPUTATION_SCALE",
      "REPUTATION_SCALE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  SENSE_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "SENSE_ADMIN_ROLE",
      "SENSE_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_SENSE_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SENSE_ADMIN_ROLE",
      "SENSE_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  TRUST_SCORE_SCALE(): BigInt {
    let result = super.call(
      "TRUST_SCORE_SCALE",
      "TRUST_SCORE_SCALE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_TRUST_SCORE_SCALE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "TRUST_SCORE_SCALE",
      "TRUST_SCORE_SCALE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateTrustScore(organizationId: Bytes, profileId: Bytes): BigInt {
    let result = super.call(
      "calculateTrustScore",
      "calculateTrustScore(bytes8,bytes8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateTrustScore(
    organizationId: Bytes,
    profileId: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateTrustScore",
      "calculateTrustScore(bytes8,bytes8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateVotingWeight(
    organizationId: Bytes,
    profileId: Bytes,
    baseWeight: BigInt
  ): BigInt {
    let result = super.call(
      "calculateVotingWeight",
      "calculateVotingWeight(bytes8,bytes8,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromUnsignedBigInt(baseWeight)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateVotingWeight(
    organizationId: Bytes,
    profileId: Bytes,
    baseWeight: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateVotingWeight",
      "calculateVotingWeight(bytes8,bytes8,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromUnsignedBigInt(baseWeight)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getExperience(organizationId: Bytes, profileId: Bytes): BigInt {
    let result = super.call(
      "getExperience",
      "getExperience(bytes8,bytes8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getExperience(
    organizationId: Bytes,
    profileId: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getExperience",
      "getExperience(bytes8,bytes8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMemberVotingPower(
    organizationId: Bytes,
    memberAddress: Address,
    baseWeight: BigInt
  ): BigInt {
    let result = super.call(
      "getMemberVotingPower",
      "getMemberVotingPower(bytes8,address,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(memberAddress),
        ethereum.Value.fromUnsignedBigInt(baseWeight)
      ]
    );

    return result[0].toBigInt();
  }

  try_getMemberVotingPower(
    organizationId: Bytes,
    memberAddress: Address,
    baseWeight: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMemberVotingPower",
      "getMemberVotingPower(bytes8,address,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(memberAddress),
        ethereum.Value.fromUnsignedBigInt(baseWeight)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrganizationReputationStats(
    organizationId: Bytes
  ): Sense__getOrganizationReputationStatsResult {
    let result = super.call(
      "getOrganizationReputationStats",
      "getOrganizationReputationStats(bytes8):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return new Sense__getOrganizationReputationStatsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getOrganizationReputationStats(
    organizationId: Bytes
  ): ethereum.CallResult<Sense__getOrganizationReputationStatsResult> {
    let result = super.tryCall(
      "getOrganizationReputationStats",
      "getOrganizationReputationStats(bytes8):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Sense__getOrganizationReputationStatsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getReputation(
    organizationId: Bytes,
    profileId: Bytes
  ): Sense__getReputationResultReputationStruct {
    let result = super.call(
      "getReputation",
      "getReputation(bytes8,bytes8):((uint256,uint256,uint256,uint256,uint256,uint256,bytes8))",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );

    return changetype<Sense__getReputationResultReputationStruct>(
      result[0].toTuple()
    );
  }

  try_getReputation(
    organizationId: Bytes,
    profileId: Bytes
  ): ethereum.CallResult<Sense__getReputationResultReputationStruct> {
    let result = super.tryCall(
      "getReputation",
      "getReputation(bytes8,bytes8):((uint256,uint256,uint256,uint256,uint256,uint256,bytes8))",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Sense__getReputationResultReputationStruct>(value[0].toTuple())
    );
  }

  getReputationBatch(
    organizationId: Bytes,
    profileIds: Array<Bytes>
  ): Array<Sense__getReputationBatchResultReputationsStruct> {
    let result = super.call(
      "getReputationBatch",
      "getReputationBatch(bytes8,bytes8[]):((uint256,uint256,uint256,uint256,uint256,uint256,bytes8)[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytesArray(profileIds)
      ]
    );

    return result[0].toTupleArray<
      Sense__getReputationBatchResultReputationsStruct
    >();
  }

  try_getReputationBatch(
    organizationId: Bytes,
    profileIds: Array<Bytes>
  ): ethereum.CallResult<
    Array<Sense__getReputationBatchResultReputationsStruct>
  > {
    let result = super.tryCall(
      "getReputationBatch",
      "getReputationBatch(bytes8,bytes8[]):((uint256,uint256,uint256,uint256,uint256,uint256,bytes8)[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytesArray(profileIds)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Sense__getReputationBatchResultReputationsStruct>()
    );
  }

  getReputationHistory(
    organizationId: Bytes,
    profileId: Bytes
  ): Array<Sense__getReputationHistoryResultEventsStruct> {
    let result = super.call(
      "getReputationHistory",
      "getReputationHistory(bytes8,bytes8):((bytes8,bytes8,uint8,int256,bytes32,address,uint256)[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );

    return result[0].toTupleArray<
      Sense__getReputationHistoryResultEventsStruct
    >();
  }

  try_getReputationHistory(
    organizationId: Bytes,
    profileId: Bytes
  ): ethereum.CallResult<Array<Sense__getReputationHistoryResultEventsStruct>> {
    let result = super.tryCall(
      "getReputationHistory",
      "getReputationHistory(bytes8,bytes8):((bytes8,bytes8,uint8,int256,bytes32,address,uint256)[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Sense__getReputationHistoryResultEventsStruct>()
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTrustScore(organizationId: Bytes, profileId: Bytes): BigInt {
    let result = super.call(
      "getTrustScore",
      "getTrustScore(bytes8,bytes8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getTrustScore(
    organizationId: Bytes,
    profileId: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTrustScore",
      "getTrustScore(bytes8,bytes8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromFixedBytes(profileId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  moduleId(): Bytes {
    let result = super.call("moduleId", "moduleId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_moduleId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("moduleId", "moduleId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AwardExperienceCall extends ethereum.Call {
  get inputs(): AwardExperienceCall__Inputs {
    return new AwardExperienceCall__Inputs(this);
  }

  get outputs(): AwardExperienceCall__Outputs {
    return new AwardExperienceCall__Outputs(this);
  }
}

export class AwardExperienceCall__Inputs {
  _call: AwardExperienceCall;

  constructor(call: AwardExperienceCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get profileId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get reason(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AwardExperienceCall__Outputs {
  _call: AwardExperienceCall;

  constructor(call: AwardExperienceCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall extends ethereum.Call {
  get inputs(): EmergencyPauseCall__Inputs {
    return new EmergencyPauseCall__Inputs(this);
  }

  get outputs(): EmergencyPauseCall__Outputs {
    return new EmergencyPauseCall__Outputs(this);
  }
}

export class EmergencyPauseCall__Inputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall__Outputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall extends ethereum.Call {
  get inputs(): EmergencyUnpauseCall__Inputs {
    return new EmergencyUnpauseCall__Inputs(this);
  }

  get outputs(): EmergencyUnpauseCall__Outputs {
    return new EmergencyUnpauseCall__Outputs(this);
  }
}

export class EmergencyUnpauseCall__Inputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall__Outputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get registryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall extends ethereum.Call {
  get inputs(): OnModuleDisabledCall__Inputs {
    return new OnModuleDisabledCall__Inputs(this);
  }

  get outputs(): OnModuleDisabledCall__Outputs {
    return new OnModuleDisabledCall__Outputs(this);
  }
}

export class OnModuleDisabledCall__Inputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall__Outputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall extends ethereum.Call {
  get inputs(): OnModuleEnabledCall__Inputs {
    return new OnModuleEnabledCall__Inputs(this);
  }

  get outputs(): OnModuleEnabledCall__Outputs {
    return new OnModuleEnabledCall__Outputs(this);
  }
}

export class OnModuleEnabledCall__Inputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall__Outputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RecordInteractionCall extends ethereum.Call {
  get inputs(): RecordInteractionCall__Inputs {
    return new RecordInteractionCall__Inputs(this);
  }

  get outputs(): RecordInteractionCall__Outputs {
    return new RecordInteractionCall__Outputs(this);
  }
}

export class RecordInteractionCall__Inputs {
  _call: RecordInteractionCall;

  constructor(call: RecordInteractionCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get profileId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get positive(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get reason(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RecordInteractionCall__Outputs {
  _call: RecordInteractionCall;

  constructor(call: RecordInteractionCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateReputationCall extends ethereum.Call {
  get inputs(): UpdateReputationCall__Inputs {
    return new UpdateReputationCall__Inputs(this);
  }

  get outputs(): UpdateReputationCall__Outputs {
    return new UpdateReputationCall__Outputs(this);
  }
}

export class UpdateReputationCall__Inputs {
  _call: UpdateReputationCall;

  constructor(call: UpdateReputationCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get profileId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get repType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get delta(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get reason(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class UpdateReputationCall__Outputs {
  _call: UpdateReputationCall;

  constructor(call: UpdateReputationCall) {
    this._call = call;
  }
}
