// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AchievementGranted extends ethereum.Event {
  get params(): AchievementGranted__Params {
    return new AchievementGranted__Params(this);
  }
}

export class AchievementGranted__Params {
  _event: AchievementGranted;

  constructor(event: AchievementGranted) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get achievementId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get points(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get grantedBy(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class FeedbackSubmitted extends ethereum.Event {
  get params(): FeedbackSubmitted__Params {
    return new FeedbackSubmitted__Params(this);
  }
}

export class FeedbackSubmitted__Params {
  _event: FeedbackSubmitted;

  constructor(event: FeedbackSubmitted) {
    this._event = event;
  }

  get feedbackId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get targetProfileId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get giver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get feedbackType(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get rating(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ModuleDisabled extends ethereum.Event {
  get params(): ModuleDisabled__Params {
    return new ModuleDisabled__Params(this);
  }
}

export class ModuleDisabled__Params {
  _event: ModuleDisabled;

  constructor(event: ModuleDisabled) {
    this._event = event;
  }
}

export class ModuleEnabled extends ethereum.Event {
  get params(): ModuleEnabled__Params {
    return new ModuleEnabled__Params(this);
  }
}

export class ModuleEnabled__Params {
  _event: ModuleEnabled;

  constructor(event: ModuleEnabled) {
    this._event = event;
  }
}

export class ModuleInitialized extends ethereum.Event {
  get params(): ModuleInitialized__Params {
    return new ModuleInitialized__Params(this);
  }
}

export class ModuleInitialized__Params {
  _event: ModuleInitialized;

  constructor(event: ModuleInitialized) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProfileCreated extends ethereum.Event {
  get params(): ProfileCreated__Params {
    return new ProfileCreated__Params(this);
  }
}

export class ProfileCreated__Params {
  _event: ProfileCreated;

  constructor(event: ProfileCreated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get organizationId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get metadata(): string {
    return this._event.parameters[3].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ProfileUpdated extends ethereum.Event {
  get params(): ProfileUpdated__Params {
    return new ProfileUpdated__Params(this);
  }
}

export class ProfileUpdated__Params {
  _event: ProfileUpdated;

  constructor(event: ProfileUpdated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get metadata(): string {
    return this._event.parameters[1].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ProfileVerified extends ethereum.Event {
  get params(): ProfileVerified__Params {
    return new ProfileVerified__Params(this);
  }
}

export class ProfileVerified__Params {
  _event: ProfileVerified;

  constructor(event: ProfileVerified) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get level(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get verifier(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReputationExported extends ethereum.Event {
  get params(): ReputationExported__Params {
    return new ReputationExported__Params(this);
  }
}

export class ReputationExported__Params {
  _event: ReputationExported;

  constructor(event: ReputationExported) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get targetOrganizationId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get merkleRoot(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReputationImported extends ethereum.Event {
  get params(): ReputationImported__Params {
    return new ReputationImported__Params(this);
  }
}

export class ReputationImported__Params {
  _event: ReputationImported;

  constructor(event: ReputationImported) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get sourceOrganizationId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get importedReputation(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReputationUpdated extends ethereum.Event {
  get params(): ReputationUpdated__Params {
    return new ReputationUpdated__Params(this);
  }
}

export class ReputationUpdated__Params {
  _event: ReputationUpdated;

  constructor(event: ReputationUpdated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get repType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get delta(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get reason(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get updatedBy(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get newValue(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Sense__exportReputationResultExportDataStruct extends ethereum.Tuple {
  get sourceProfileId(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get sourceOrganizationId(): Bytes {
    return this[2].toBytes();
  }

  get reputation(): Sense__exportReputationResultExportDataReputationStruct {
    return changetype<Sense__exportReputationResultExportDataReputationStruct>(
      this[3].toTuple()
    );
  }

  get achievements(): Array<
    Sense__exportReputationResultExportDataAchievementsStruct
  > {
    return this[4].toTupleArray<
      Sense__exportReputationResultExportDataAchievementsStruct
    >();
  }

  get feedbackSummary(): Sense__exportReputationResultExportDataFeedbackSummaryStruct {
    return changetype<
      Sense__exportReputationResultExportDataFeedbackSummaryStruct
    >(this[5].toTuple());
  }

  get exportedAt(): BigInt {
    return this[6].toBigInt();
  }

  get merkleRoot(): Bytes {
    return this[7].toBytes();
  }
}

export class Sense__exportReputationResultExportDataReputationStruct extends ethereum.Tuple {
  get experience(): BigInt {
    return this[0].toBigInt();
  }

  get reputation(): BigInt {
    return this[1].toBigInt();
  }

  get trust(): BigInt {
    return this[2].toBigInt();
  }

  get lastUpdated(): BigInt {
    return this[3].toBigInt();
  }

  get totalFeedbacks(): BigInt {
    return this[4].toBigInt();
  }

  get positiveFeedbacks(): BigInt {
    return this[5].toBigInt();
  }
}

export class Sense__exportReputationResultExportDataAchievementsStruct extends ethereum.Tuple {
  get achievementId(): Bytes {
    return this[0].toBytes();
  }

  get profileId(): Bytes {
    return this[1].toBytes();
  }

  get name(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }

  get category(): string {
    return this[4].toString();
  }

  get data(): Bytes {
    return this[5].toBytes();
  }

  get earnedAt(): BigInt {
    return this[6].toBigInt();
  }

  get grantedBy(): Address {
    return this[7].toAddress();
  }

  get points(): BigInt {
    return this[8].toBigInt();
  }
}

export class Sense__exportReputationResultExportDataFeedbackSummaryStruct extends ethereum.Tuple {
  get totalFeedbacks(): BigInt {
    return this[0].toBigInt();
  }

  get positiveFeedbacks(): BigInt {
    return this[1].toBigInt();
  }

  get negativeFeedbacks(): BigInt {
    return this[2].toBigInt();
  }

  get neutralFeedbacks(): BigInt {
    return this[3].toBigInt();
  }

  get averageRating(): BigInt {
    return this[4].toBigInt();
  }

  get trustScore(): BigInt {
    return this[5].toBigInt();
  }
}

export class Sense__getAchievementsResultAchievementsStruct extends ethereum.Tuple {
  get achievementId(): Bytes {
    return this[0].toBytes();
  }

  get profileId(): Bytes {
    return this[1].toBytes();
  }

  get name(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }

  get category(): string {
    return this[4].toString();
  }

  get data(): Bytes {
    return this[5].toBytes();
  }

  get earnedAt(): BigInt {
    return this[6].toBigInt();
  }

  get grantedBy(): Address {
    return this[7].toAddress();
  }

  get points(): BigInt {
    return this[8].toBigInt();
  }
}

export class Sense__getAchievementsByCategoryResultAchievementsStruct extends ethereum.Tuple {
  get achievementId(): Bytes {
    return this[0].toBytes();
  }

  get profileId(): Bytes {
    return this[1].toBytes();
  }

  get name(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }

  get category(): string {
    return this[4].toString();
  }

  get data(): Bytes {
    return this[5].toBytes();
  }

  get earnedAt(): BigInt {
    return this[6].toBigInt();
  }

  get grantedBy(): Address {
    return this[7].toAddress();
  }

  get points(): BigInt {
    return this[8].toBigInt();
  }
}

export class Sense__getFeedbackSummaryResultSummaryStruct extends ethereum.Tuple {
  get totalFeedbacks(): BigInt {
    return this[0].toBigInt();
  }

  get positiveFeedbacks(): BigInt {
    return this[1].toBigInt();
  }

  get negativeFeedbacks(): BigInt {
    return this[2].toBigInt();
  }

  get neutralFeedbacks(): BigInt {
    return this[3].toBigInt();
  }

  get averageRating(): BigInt {
    return this[4].toBigInt();
  }

  get trustScore(): BigInt {
    return this[5].toBigInt();
  }
}

export class Sense__getFeedbacksResultFeedbacksStruct extends ethereum.Tuple {
  get feedbackId(): Bytes {
    return this[0].toBytes();
  }

  get targetProfileId(): Bytes {
    return this[1].toBytes();
  }

  get giver(): Address {
    return this[2].toAddress();
  }

  get feedbackType(): i32 {
    return this[3].toI32();
  }

  get rating(): i32 {
    return this[4].toI32();
  }

  get comment(): string {
    return this[5].toString();
  }

  get timestamp(): BigInt {
    return this[6].toBigInt();
  }

  get verified(): boolean {
    return this[7].toBoolean();
  }
}

export class Sense__getProfileResultProfileStruct extends ethereum.Tuple {
  get profileId(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get organizationId(): Bytes {
    return this[2].toBytes();
  }

  get metadata(): string {
    return this[3].toString();
  }

  get createdAt(): BigInt {
    return this[4].toBigInt();
  }

  get updatedAt(): BigInt {
    return this[5].toBigInt();
  }

  get active(): boolean {
    return this[6].toBoolean();
  }

  get verified(): boolean {
    return this[7].toBoolean();
  }
}

export class Sense__getProfileByOwnerResultProfileStruct extends ethereum.Tuple {
  get profileId(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get organizationId(): Bytes {
    return this[2].toBytes();
  }

  get metadata(): string {
    return this[3].toString();
  }

  get createdAt(): BigInt {
    return this[4].toBigInt();
  }

  get updatedAt(): BigInt {
    return this[5].toBigInt();
  }

  get active(): boolean {
    return this[6].toBoolean();
  }

  get verified(): boolean {
    return this[7].toBoolean();
  }
}

export class Sense__getReputationResultReputationStruct extends ethereum.Tuple {
  get experience(): BigInt {
    return this[0].toBigInt();
  }

  get reputation(): BigInt {
    return this[1].toBigInt();
  }

  get trust(): BigInt {
    return this[2].toBigInt();
  }

  get lastUpdated(): BigInt {
    return this[3].toBigInt();
  }

  get totalFeedbacks(): BigInt {
    return this[4].toBigInt();
  }

  get positiveFeedbacks(): BigInt {
    return this[5].toBigInt();
  }
}

export class Sense__getReputationHistoryResultEventsStruct extends ethereum.Tuple {
  get profileId(): Bytes {
    return this[0].toBytes();
  }

  get repType(): i32 {
    return this[1].toI32();
  }

  get delta(): BigInt {
    return this[2].toBigInt();
  }

  get reason(): Bytes {
    return this[3].toBytes();
  }

  get updatedBy(): Address {
    return this[4].toAddress();
  }

  get timestamp(): BigInt {
    return this[5].toBigInt();
  }

  get blockNumber(): BigInt {
    return this[6].toBigInt();
  }
}

export class Sense extends ethereum.SmartContract {
  static bind(address: Address): Sense {
    return new Sense("Sense", address);
  }

  ACHIEVEMENT_GRANTER_ROLE(): Bytes {
    let result = super.call(
      "ACHIEVEMENT_GRANTER_ROLE",
      "ACHIEVEMENT_GRANTER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_ACHIEVEMENT_GRANTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ACHIEVEMENT_GRANTER_ROLE",
      "ACHIEVEMENT_GRANTER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_FEEDBACKS_PER_QUERY(): BigInt {
    let result = super.call(
      "MAX_FEEDBACKS_PER_QUERY",
      "MAX_FEEDBACKS_PER_QUERY():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_FEEDBACKS_PER_QUERY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_FEEDBACKS_PER_QUERY",
      "MAX_FEEDBACKS_PER_QUERY():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_FEEDBACK_RATING(): BigInt {
    let result = super.call(
      "MAX_FEEDBACK_RATING",
      "MAX_FEEDBACK_RATING():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_FEEDBACK_RATING(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_FEEDBACK_RATING",
      "MAX_FEEDBACK_RATING():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_REPUTATION_DELTA(): BigInt {
    let result = super.call(
      "MAX_REPUTATION_DELTA",
      "MAX_REPUTATION_DELTA():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_REPUTATION_DELTA(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_REPUTATION_DELTA",
      "MAX_REPUTATION_DELTA():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_FEEDBACK_RATING(): BigInt {
    let result = super.call(
      "MIN_FEEDBACK_RATING",
      "MIN_FEEDBACK_RATING():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_FEEDBACK_RATING(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_FEEDBACK_RATING",
      "MIN_FEEDBACK_RATING():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  OPERATOR_ROLE(): Bytes {
    let result = super.call("OPERATOR_ROLE", "OPERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OPERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "OPERATOR_ROLE",
      "OPERATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  REPUTATION_MANAGER_ROLE(): Bytes {
    let result = super.call(
      "REPUTATION_MANAGER_ROLE",
      "REPUTATION_MANAGER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_REPUTATION_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "REPUTATION_MANAGER_ROLE",
      "REPUTATION_MANAGER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  REPUTATION_SCALE(): BigInt {
    let result = super.call(
      "REPUTATION_SCALE",
      "REPUTATION_SCALE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_REPUTATION_SCALE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "REPUTATION_SCALE",
      "REPUTATION_SCALE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  SENSE_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "SENSE_ADMIN_ROLE",
      "SENSE_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_SENSE_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SENSE_ADMIN_ROLE",
      "SENSE_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  TRUST_SCORE_SCALE(): BigInt {
    let result = super.call(
      "TRUST_SCORE_SCALE",
      "TRUST_SCORE_SCALE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_TRUST_SCORE_SCALE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "TRUST_SCORE_SCALE",
      "TRUST_SCORE_SCALE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  VERIFIER_ROLE(): Bytes {
    let result = super.call("VERIFIER_ROLE", "VERIFIER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_VERIFIER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "VERIFIER_ROLE",
      "VERIFIER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  calculateTrustScore(profileId: Bytes): BigInt {
    let result = super.call(
      "calculateTrustScore",
      "calculateTrustScore(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(profileId)]
    );

    return result[0].toBigInt();
  }

  try_calculateTrustScore(profileId: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateTrustScore",
      "calculateTrustScore(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateVotingWeight(profileId: Bytes, baseWeight: BigInt): BigInt {
    let result = super.call(
      "calculateVotingWeight",
      "calculateVotingWeight(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromUnsignedBigInt(baseWeight)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateVotingWeight(
    profileId: Bytes,
    baseWeight: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateVotingWeight",
      "calculateVotingWeight(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromUnsignedBigInt(baseWeight)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createProfile(organizationId: Bytes, metadata: string): Bytes {
    let result = super.call(
      "createProfile",
      "createProfile(bytes32,string):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromString(metadata)
      ]
    );

    return result[0].toBytes();
  }

  try_createProfile(
    organizationId: Bytes,
    metadata: string
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createProfile",
      "createProfile(bytes32,string):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromString(metadata)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  exportReputation(
    profileId: Bytes
  ): Sense__exportReputationResultExportDataStruct {
    let result = super.call(
      "exportReputation",
      "exportReputation(bytes32):((bytes32,address,bytes32,(uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32,string,string,string,bytes,uint256,address,uint256)[],(uint256,uint256,uint256,uint256,uint256,uint256),uint256,bytes32))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );

    return changetype<Sense__exportReputationResultExportDataStruct>(
      result[0].toTuple()
    );
  }

  try_exportReputation(
    profileId: Bytes
  ): ethereum.CallResult<Sense__exportReputationResultExportDataStruct> {
    let result = super.tryCall(
      "exportReputation",
      "exportReputation(bytes32):((bytes32,address,bytes32,(uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32,string,string,string,bytes,uint256,address,uint256)[],(uint256,uint256,uint256,uint256,uint256,uint256),uint256,bytes32))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Sense__exportReputationResultExportDataStruct>(
        value[0].toTuple()
      )
    );
  }

  getAchievements(
    profileId: Bytes
  ): Array<Sense__getAchievementsResultAchievementsStruct> {
    let result = super.call(
      "getAchievements",
      "getAchievements(bytes32):((bytes32,bytes32,string,string,string,bytes,uint256,address,uint256)[])",
      [ethereum.Value.fromFixedBytes(profileId)]
    );

    return result[0].toTupleArray<
      Sense__getAchievementsResultAchievementsStruct
    >();
  }

  try_getAchievements(
    profileId: Bytes
  ): ethereum.CallResult<
    Array<Sense__getAchievementsResultAchievementsStruct>
  > {
    let result = super.tryCall(
      "getAchievements",
      "getAchievements(bytes32):((bytes32,bytes32,string,string,string,bytes,uint256,address,uint256)[])",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Sense__getAchievementsResultAchievementsStruct>()
    );
  }

  getAchievementsByCategory(
    profileId: Bytes,
    category: string
  ): Array<Sense__getAchievementsByCategoryResultAchievementsStruct> {
    let result = super.call(
      "getAchievementsByCategory",
      "getAchievementsByCategory(bytes32,string):((bytes32,bytes32,string,string,string,bytes,uint256,address,uint256)[])",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromString(category)
      ]
    );

    return result[0].toTupleArray<
      Sense__getAchievementsByCategoryResultAchievementsStruct
    >();
  }

  try_getAchievementsByCategory(
    profileId: Bytes,
    category: string
  ): ethereum.CallResult<
    Array<Sense__getAchievementsByCategoryResultAchievementsStruct>
  > {
    let result = super.tryCall(
      "getAchievementsByCategory",
      "getAchievementsByCategory(bytes32,string):((bytes32,bytes32,string,string,string,bytes,uint256,address,uint256)[])",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromString(category)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        Sense__getAchievementsByCategoryResultAchievementsStruct
      >()
    );
  }

  getCategoryReputation(profileId: Bytes, category: Bytes): BigInt {
    let result = super.call(
      "getCategoryReputation",
      "getCategoryReputation(bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromFixedBytes(category)
      ]
    );

    return result[0].toBigInt();
  }

  try_getCategoryReputation(
    profileId: Bytes,
    category: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCategoryReputation",
      "getCategoryReputation(bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromFixedBytes(category)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeedbackSummary(
    profileId: Bytes
  ): Sense__getFeedbackSummaryResultSummaryStruct {
    let result = super.call(
      "getFeedbackSummary",
      "getFeedbackSummary(bytes32):((uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );

    return changetype<Sense__getFeedbackSummaryResultSummaryStruct>(
      result[0].toTuple()
    );
  }

  try_getFeedbackSummary(
    profileId: Bytes
  ): ethereum.CallResult<Sense__getFeedbackSummaryResultSummaryStruct> {
    let result = super.tryCall(
      "getFeedbackSummary",
      "getFeedbackSummary(bytes32):((uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Sense__getFeedbackSummaryResultSummaryStruct>(
        value[0].toTuple()
      )
    );
  }

  getFeedbacks(
    profileId: Bytes,
    offset: BigInt,
    limit: BigInt
  ): Array<Sense__getFeedbacksResultFeedbacksStruct> {
    let result = super.call(
      "getFeedbacks",
      "getFeedbacks(bytes32,uint256,uint256):((bytes32,bytes32,address,uint8,uint8,string,uint256,bool)[])",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromUnsignedBigInt(offset),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );

    return result[0].toTupleArray<Sense__getFeedbacksResultFeedbacksStruct>();
  }

  try_getFeedbacks(
    profileId: Bytes,
    offset: BigInt,
    limit: BigInt
  ): ethereum.CallResult<Array<Sense__getFeedbacksResultFeedbacksStruct>> {
    let result = super.tryCall(
      "getFeedbacks",
      "getFeedbacks(bytes32,uint256,uint256):((bytes32,bytes32,address,uint8,uint8,string,uint256,bool)[])",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromUnsignedBigInt(offset),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Sense__getFeedbacksResultFeedbacksStruct>()
    );
  }

  getProfile(profileId: Bytes): Sense__getProfileResultProfileStruct {
    let result = super.call(
      "getProfile",
      "getProfile(bytes32):((bytes32,address,bytes32,string,uint256,uint256,bool,bool))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );

    return changetype<Sense__getProfileResultProfileStruct>(
      result[0].toTuple()
    );
  }

  try_getProfile(
    profileId: Bytes
  ): ethereum.CallResult<Sense__getProfileResultProfileStruct> {
    let result = super.tryCall(
      "getProfile",
      "getProfile(bytes32):((bytes32,address,bytes32,string,uint256,uint256,bool,bool))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Sense__getProfileResultProfileStruct>(value[0].toTuple())
    );
  }

  getProfileByOwner(
    owner: Address,
    organizationId: Bytes
  ): Sense__getProfileByOwnerResultProfileStruct {
    let result = super.call(
      "getProfileByOwner",
      "getProfileByOwner(address,bytes32):((bytes32,address,bytes32,string,uint256,uint256,bool,bool))",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromFixedBytes(organizationId)
      ]
    );

    return changetype<Sense__getProfileByOwnerResultProfileStruct>(
      result[0].toTuple()
    );
  }

  try_getProfileByOwner(
    owner: Address,
    organizationId: Bytes
  ): ethereum.CallResult<Sense__getProfileByOwnerResultProfileStruct> {
    let result = super.tryCall(
      "getProfileByOwner",
      "getProfileByOwner(address,bytes32):((bytes32,address,bytes32,string,uint256,uint256,bool,bool))",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromFixedBytes(organizationId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Sense__getProfileByOwnerResultProfileStruct>(
        value[0].toTuple()
      )
    );
  }

  getProfileCount(): BigInt {
    let result = super.call(
      "getProfileCount",
      "getProfileCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getProfileCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProfileCount",
      "getProfileCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProfilesByOrganization(organizationId: Bytes): Array<Bytes> {
    let result = super.call(
      "getProfilesByOrganization",
      "getProfilesByOrganization(bytes32):(bytes32[])",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBytesArray();
  }

  try_getProfilesByOrganization(
    organizationId: Bytes
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getProfilesByOrganization",
      "getProfilesByOrganization(bytes32):(bytes32[])",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getReputation(profileId: Bytes): Sense__getReputationResultReputationStruct {
    let result = super.call(
      "getReputation",
      "getReputation(bytes32):((uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );

    return changetype<Sense__getReputationResultReputationStruct>(
      result[0].toTuple()
    );
  }

  try_getReputation(
    profileId: Bytes
  ): ethereum.CallResult<Sense__getReputationResultReputationStruct> {
    let result = super.tryCall(
      "getReputation",
      "getReputation(bytes32):((uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Sense__getReputationResultReputationStruct>(value[0].toTuple())
    );
  }

  getReputationHistory(
    profileId: Bytes
  ): Array<Sense__getReputationHistoryResultEventsStruct> {
    let result = super.call(
      "getReputationHistory",
      "getReputationHistory(bytes32):((bytes32,uint8,int256,bytes32,address,uint256,uint256)[])",
      [ethereum.Value.fromFixedBytes(profileId)]
    );

    return result[0].toTupleArray<
      Sense__getReputationHistoryResultEventsStruct
    >();
  }

  try_getReputationHistory(
    profileId: Bytes
  ): ethereum.CallResult<Array<Sense__getReputationHistoryResultEventsStruct>> {
    let result = super.tryCall(
      "getReputationHistory",
      "getReputationHistory(bytes32):((bytes32,uint8,int256,bytes32,address,uint256,uint256)[])",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Sense__getReputationHistoryResultEventsStruct>()
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTopProfiles(organizationId: Bytes, limit: BigInt): Array<Bytes> {
    let result = super.call(
      "getTopProfiles",
      "getTopProfiles(bytes32,uint256):(bytes32[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );

    return result[0].toBytesArray();
  }

  try_getTopProfiles(
    organizationId: Bytes,
    limit: BigInt
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getTopProfiles",
      "getTopProfiles(bytes32,uint256):(bytes32[])",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromUnsignedBigInt(limit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  hasAchievement(profileId: Bytes, achievementId: Bytes): boolean {
    let result = super.call(
      "hasAchievement",
      "hasAchievement(bytes32,bytes32):(bool)",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromFixedBytes(achievementId)
      ]
    );

    return result[0].toBoolean();
  }

  try_hasAchievement(
    profileId: Bytes,
    achievementId: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasAchievement",
      "hasAchievement(bytes32,bytes32):(bool)",
      [
        ethereum.Value.fromFixedBytes(profileId),
        ethereum.Value.fromFixedBytes(achievementId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  moduleId(): Bytes {
    let result = super.call("moduleId", "moduleId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_moduleId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("moduleId", "moduleId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  profileExists(profileId: Bytes): boolean {
    let result = super.call("profileExists", "profileExists(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(profileId)
    ]);

    return result[0].toBoolean();
  }

  try_profileExists(profileId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "profileExists",
      "profileExists(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  submitFeedback(
    targetProfileId: Bytes,
    feedbackType: i32,
    rating: i32,
    comment: string
  ): Bytes {
    let result = super.call(
      "submitFeedback",
      "submitFeedback(bytes32,uint8,uint8,string):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(targetProfileId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(feedbackType)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rating)),
        ethereum.Value.fromString(comment)
      ]
    );

    return result[0].toBytes();
  }

  try_submitFeedback(
    targetProfileId: Bytes,
    feedbackType: i32,
    rating: i32,
    comment: string
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "submitFeedback",
      "submitFeedback(bytes32,uint8,uint8,string):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(targetProfileId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(feedbackType)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(rating)),
        ethereum.Value.fromString(comment)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateProfileCall extends ethereum.Call {
  get inputs(): CreateProfileCall__Inputs {
    return new CreateProfileCall__Inputs(this);
  }

  get outputs(): CreateProfileCall__Outputs {
    return new CreateProfileCall__Outputs(this);
  }
}

export class CreateProfileCall__Inputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get metadata(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateProfileCall__Outputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }

  get profileId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class EmergencyPauseCall extends ethereum.Call {
  get inputs(): EmergencyPauseCall__Inputs {
    return new EmergencyPauseCall__Inputs(this);
  }

  get outputs(): EmergencyPauseCall__Outputs {
    return new EmergencyPauseCall__Outputs(this);
  }
}

export class EmergencyPauseCall__Inputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall__Outputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall extends ethereum.Call {
  get inputs(): EmergencyUnpauseCall__Inputs {
    return new EmergencyUnpauseCall__Inputs(this);
  }

  get outputs(): EmergencyUnpauseCall__Outputs {
    return new EmergencyUnpauseCall__Outputs(this);
  }
}

export class EmergencyUnpauseCall__Inputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall__Outputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class GrantAchievementCall extends ethereum.Call {
  get inputs(): GrantAchievementCall__Inputs {
    return new GrantAchievementCall__Inputs(this);
  }

  get outputs(): GrantAchievementCall__Outputs {
    return new GrantAchievementCall__Outputs(this);
  }
}

export class GrantAchievementCall__Inputs {
  _call: GrantAchievementCall;

  constructor(call: GrantAchievementCall) {
    this._call = call;
  }

  get profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get achievementId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get name(): string {
    return this._call.inputValues[2].value.toString();
  }

  get description(): string {
    return this._call.inputValues[3].value.toString();
  }

  get category(): string {
    return this._call.inputValues[4].value.toString();
  }

  get points(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class GrantAchievementCall__Outputs {
  _call: GrantAchievementCall;

  constructor(call: GrantAchievementCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class ImportReputationCall extends ethereum.Call {
  get inputs(): ImportReputationCall__Inputs {
    return new ImportReputationCall__Inputs(this);
  }

  get outputs(): ImportReputationCall__Outputs {
    return new ImportReputationCall__Outputs(this);
  }
}

export class ImportReputationCall__Inputs {
  _call: ImportReputationCall;

  constructor(call: ImportReputationCall) {
    this._call = call;
  }

  get profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get exportData(): ImportReputationCallExportDataStruct {
    return changetype<ImportReputationCallExportDataStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get value2(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ImportReputationCall__Outputs {
  _call: ImportReputationCall;

  constructor(call: ImportReputationCall) {
    this._call = call;
  }
}

export class ImportReputationCallExportDataStruct extends ethereum.Tuple {
  get sourceProfileId(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get sourceOrganizationId(): Bytes {
    return this[2].toBytes();
  }

  get reputation(): ImportReputationCallExportDataReputationStruct {
    return changetype<ImportReputationCallExportDataReputationStruct>(
      this[3].toTuple()
    );
  }

  get achievements(): Array<ImportReputationCallExportDataAchievementsStruct> {
    return this[4].toTupleArray<
      ImportReputationCallExportDataAchievementsStruct
    >();
  }

  get feedbackSummary(): ImportReputationCallExportDataFeedbackSummaryStruct {
    return changetype<ImportReputationCallExportDataFeedbackSummaryStruct>(
      this[5].toTuple()
    );
  }

  get exportedAt(): BigInt {
    return this[6].toBigInt();
  }

  get merkleRoot(): Bytes {
    return this[7].toBytes();
  }
}

export class ImportReputationCallExportDataReputationStruct extends ethereum.Tuple {
  get experience(): BigInt {
    return this[0].toBigInt();
  }

  get reputation(): BigInt {
    return this[1].toBigInt();
  }

  get trust(): BigInt {
    return this[2].toBigInt();
  }

  get lastUpdated(): BigInt {
    return this[3].toBigInt();
  }

  get totalFeedbacks(): BigInt {
    return this[4].toBigInt();
  }

  get positiveFeedbacks(): BigInt {
    return this[5].toBigInt();
  }
}

export class ImportReputationCallExportDataAchievementsStruct extends ethereum.Tuple {
  get achievementId(): Bytes {
    return this[0].toBytes();
  }

  get profileId(): Bytes {
    return this[1].toBytes();
  }

  get name(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }

  get category(): string {
    return this[4].toString();
  }

  get data(): Bytes {
    return this[5].toBytes();
  }

  get earnedAt(): BigInt {
    return this[6].toBigInt();
  }

  get grantedBy(): Address {
    return this[7].toAddress();
  }

  get points(): BigInt {
    return this[8].toBigInt();
  }
}

export class ImportReputationCallExportDataFeedbackSummaryStruct extends ethereum.Tuple {
  get totalFeedbacks(): BigInt {
    return this[0].toBigInt();
  }

  get positiveFeedbacks(): BigInt {
    return this[1].toBigInt();
  }

  get negativeFeedbacks(): BigInt {
    return this[2].toBigInt();
  }

  get neutralFeedbacks(): BigInt {
    return this[3].toBigInt();
  }

  get averageRating(): BigInt {
    return this[4].toBigInt();
  }

  get trustScore(): BigInt {
    return this[5].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get registryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall extends ethereum.Call {
  get inputs(): OnModuleDisabledCall__Inputs {
    return new OnModuleDisabledCall__Inputs(this);
  }

  get outputs(): OnModuleDisabledCall__Outputs {
    return new OnModuleDisabledCall__Outputs(this);
  }
}

export class OnModuleDisabledCall__Inputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall__Outputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall extends ethereum.Call {
  get inputs(): OnModuleEnabledCall__Inputs {
    return new OnModuleEnabledCall__Inputs(this);
  }

  get outputs(): OnModuleEnabledCall__Outputs {
    return new OnModuleEnabledCall__Outputs(this);
  }
}

export class OnModuleEnabledCall__Inputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall__Outputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SubmitFeedbackCall extends ethereum.Call {
  get inputs(): SubmitFeedbackCall__Inputs {
    return new SubmitFeedbackCall__Inputs(this);
  }

  get outputs(): SubmitFeedbackCall__Outputs {
    return new SubmitFeedbackCall__Outputs(this);
  }
}

export class SubmitFeedbackCall__Inputs {
  _call: SubmitFeedbackCall;

  constructor(call: SubmitFeedbackCall) {
    this._call = call;
  }

  get targetProfileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get feedbackType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get rating(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get comment(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class SubmitFeedbackCall__Outputs {
  _call: SubmitFeedbackCall;

  constructor(call: SubmitFeedbackCall) {
    this._call = call;
  }

  get feedbackId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateCategoryReputationCall extends ethereum.Call {
  get inputs(): UpdateCategoryReputationCall__Inputs {
    return new UpdateCategoryReputationCall__Inputs(this);
  }

  get outputs(): UpdateCategoryReputationCall__Outputs {
    return new UpdateCategoryReputationCall__Outputs(this);
  }
}

export class UpdateCategoryReputationCall__Inputs {
  _call: UpdateCategoryReputationCall;

  constructor(call: UpdateCategoryReputationCall) {
    this._call = call;
  }

  get profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get category(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get delta(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get reason(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class UpdateCategoryReputationCall__Outputs {
  _call: UpdateCategoryReputationCall;

  constructor(call: UpdateCategoryReputationCall) {
    this._call = call;
  }
}

export class UpdateProfileCall extends ethereum.Call {
  get inputs(): UpdateProfileCall__Inputs {
    return new UpdateProfileCall__Inputs(this);
  }

  get outputs(): UpdateProfileCall__Outputs {
    return new UpdateProfileCall__Outputs(this);
  }
}

export class UpdateProfileCall__Inputs {
  _call: UpdateProfileCall;

  constructor(call: UpdateProfileCall) {
    this._call = call;
  }

  get profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get metadata(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProfileCall__Outputs {
  _call: UpdateProfileCall;

  constructor(call: UpdateProfileCall) {
    this._call = call;
  }
}

export class UpdateReputationCall extends ethereum.Call {
  get inputs(): UpdateReputationCall__Inputs {
    return new UpdateReputationCall__Inputs(this);
  }

  get outputs(): UpdateReputationCall__Outputs {
    return new UpdateReputationCall__Outputs(this);
  }
}

export class UpdateReputationCall__Inputs {
  _call: UpdateReputationCall;

  constructor(call: UpdateReputationCall) {
    this._call = call;
  }

  get profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get repType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get delta(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get reason(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class UpdateReputationCall__Outputs {
  _call: UpdateReputationCall;

  constructor(call: UpdateReputationCall) {
    this._call = call;
  }
}

export class VerifyProfileCall extends ethereum.Call {
  get inputs(): VerifyProfileCall__Inputs {
    return new VerifyProfileCall__Inputs(this);
  }

  get outputs(): VerifyProfileCall__Outputs {
    return new VerifyProfileCall__Outputs(this);
  }
}

export class VerifyProfileCall__Inputs {
  _call: VerifyProfileCall;

  constructor(call: VerifyProfileCall) {
    this._call = call;
  }

  get profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get level(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class VerifyProfileCall__Outputs {
  _call: VerifyProfileCall;

  constructor(call: VerifyProfileCall) {
    this._call = call;
  }
}
