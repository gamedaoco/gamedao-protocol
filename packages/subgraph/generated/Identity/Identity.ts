// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ModuleDisabled extends ethereum.Event {
  get params(): ModuleDisabled__Params {
    return new ModuleDisabled__Params(this);
  }
}

export class ModuleDisabled__Params {
  _event: ModuleDisabled;

  constructor(event: ModuleDisabled) {
    this._event = event;
  }
}

export class ModuleEnabled extends ethereum.Event {
  get params(): ModuleEnabled__Params {
    return new ModuleEnabled__Params(this);
  }
}

export class ModuleEnabled__Params {
  _event: ModuleEnabled;

  constructor(event: ModuleEnabled) {
    this._event = event;
  }
}

export class ModuleInitialized extends ethereum.Event {
  get params(): ModuleInitialized__Params {
    return new ModuleInitialized__Params(this);
  }
}

export class ModuleInitialized__Params {
  _event: ModuleInitialized;

  constructor(event: ModuleInitialized) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NameClaimed extends ethereum.Event {
  get params(): NameClaimed__Params {
    return new NameClaimed__Params(this);
  }
}

export class NameClaimed__Params {
  _event: NameClaimed;

  constructor(event: NameClaimed) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get stakeAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get stakeDuration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get nameType(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class NameReleased extends ethereum.Event {
  get params(): NameReleased__Params {
    return new NameReleased__Params(this);
  }
}

export class NameReleased__Params {
  _event: NameReleased;

  constructor(event: NameReleased) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get stakeAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProfileCreated extends ethereum.Event {
  get params(): ProfileCreated__Params {
    return new ProfileCreated__Params(this);
  }
}

export class ProfileCreated__Params {
  _event: ProfileCreated;

  constructor(event: ProfileCreated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get organizationId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get metadata(): string {
    return this._event.parameters[3].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ProfileUpdated extends ethereum.Event {
  get params(): ProfileUpdated__Params {
    return new ProfileUpdated__Params(this);
  }
}

export class ProfileUpdated__Params {
  _event: ProfileUpdated;

  constructor(event: ProfileUpdated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get metadata(): string {
    return this._event.parameters[1].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ProfileVerified extends ethereum.Event {
  get params(): ProfileVerified__Params {
    return new ProfileVerified__Params(this);
  }
}

export class ProfileVerified__Params {
  _event: ProfileVerified;

  constructor(event: ProfileVerified) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get level(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get verifier(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Identity__getNameClaimResultClaimStruct extends ethereum.Tuple {
  get name(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get stakeAmount(): BigInt {
    return this[2].toBigInt();
  }

  get stakeDuration(): BigInt {
    return this[3].toBigInt();
  }

  get claimedAt(): BigInt {
    return this[4].toBigInt();
  }

  get expiresAt(): BigInt {
    return this[5].toBigInt();
  }

  get isActive(): boolean {
    return this[6].toBoolean();
  }

  get nameType(): i32 {
    return this[7].toI32();
  }
}

export class Identity__getProfileResultProfileStruct extends ethereum.Tuple {
  get profileId(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get organizationId(): Bytes {
    return this[2].toBytes();
  }

  get metadata(): string {
    return this[3].toString();
  }

  get createdAt(): BigInt {
    return this[4].toBigInt();
  }

  get updatedAt(): BigInt {
    return this[5].toBigInt();
  }

  get active(): boolean {
    return this[6].toBoolean();
  }

  get verified(): boolean {
    return this[7].toBoolean();
  }
}

export class Identity__getProfileByOwnerResultProfileStruct extends ethereum.Tuple {
  get profileId(): Bytes {
    return this[0].toBytes();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get organizationId(): Bytes {
    return this[2].toBytes();
  }

  get metadata(): string {
    return this[3].toString();
  }

  get createdAt(): BigInt {
    return this[4].toBigInt();
  }

  get updatedAt(): BigInt {
    return this[5].toBigInt();
  }

  get active(): boolean {
    return this[6].toBoolean();
  }

  get verified(): boolean {
    return this[7].toBoolean();
  }
}

export class Identity extends ethereum.SmartContract {
  static bind(address: Address): Identity {
    return new Identity("Identity", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  IDENTITY_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "IDENTITY_ADMIN_ROLE",
      "IDENTITY_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_IDENTITY_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "IDENTITY_ADMIN_ROLE",
      "IDENTITY_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_NAME_LENGTH(): BigInt {
    let result = super.call(
      "MAX_NAME_LENGTH",
      "MAX_NAME_LENGTH():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_NAME_LENGTH(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_NAME_LENGTH",
      "MAX_NAME_LENGTH():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_NAME_STAKE(): BigInt {
    let result = super.call("MAX_NAME_STAKE", "MAX_NAME_STAKE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_NAME_STAKE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_NAME_STAKE",
      "MAX_NAME_STAKE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_PROFILE_LIMIT(): BigInt {
    let result = super.call(
      "MAX_PROFILE_LIMIT",
      "MAX_PROFILE_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_PROFILE_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_PROFILE_LIMIT",
      "MAX_PROFILE_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_STAKE_DURATION(): BigInt {
    let result = super.call(
      "MAX_STAKE_DURATION",
      "MAX_STAKE_DURATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_STAKE_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_STAKE_DURATION",
      "MAX_STAKE_DURATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_NAME_STAKE(): BigInt {
    let result = super.call("MIN_NAME_STAKE", "MIN_NAME_STAKE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MIN_NAME_STAKE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_NAME_STAKE",
      "MIN_NAME_STAKE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_STAKE_DURATION(): BigInt {
    let result = super.call(
      "MIN_STAKE_DURATION",
      "MIN_STAKE_DURATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_STAKE_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_STAKE_DURATION",
      "MIN_STAKE_DURATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MODULE_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "MODULE_ADMIN_ROLE",
      "MODULE_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MODULE_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MODULE_ADMIN_ROLE",
      "MODULE_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MODULE_ID(): Bytes {
    let result = super.call("MODULE_ID", "MODULE_ID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MODULE_ID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MODULE_ID", "MODULE_ID():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  NAME_LENGTH(): BigInt {
    let result = super.call("NAME_LENGTH", "NAME_LENGTH():(uint256)", []);

    return result[0].toBigInt();
  }

  try_NAME_LENGTH(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("NAME_LENGTH", "NAME_LENGTH():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  OPERATOR_ROLE(): Bytes {
    let result = super.call("OPERATOR_ROLE", "OPERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OPERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "OPERATOR_ROLE",
      "OPERATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  VERIFIER_ROLE(): Bytes {
    let result = super.call("VERIFIER_ROLE", "VERIFIER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_VERIFIER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "VERIFIER_ROLE",
      "VERIFIER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  claimName(
    name: Bytes,
    stakeAmount: BigInt,
    stakeDuration: BigInt,
    nameType: i32
  ): boolean {
    let result = super.call(
      "claimName",
      "claimName(bytes8,uint256,uint256,uint8):(bool)",
      [
        ethereum.Value.fromFixedBytes(name),
        ethereum.Value.fromUnsignedBigInt(stakeAmount),
        ethereum.Value.fromUnsignedBigInt(stakeDuration),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(nameType))
      ]
    );

    return result[0].toBoolean();
  }

  try_claimName(
    name: Bytes,
    stakeAmount: BigInt,
    stakeDuration: BigInt,
    nameType: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "claimName",
      "claimName(bytes8,uint256,uint256,uint8):(bool)",
      [
        ethereum.Value.fromFixedBytes(name),
        ethereum.Value.fromUnsignedBigInt(stakeAmount),
        ethereum.Value.fromUnsignedBigInt(stakeDuration),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(nameType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createProfile(organizationId: Bytes, metadata: string): Bytes {
    let result = super.call(
      "createProfile",
      "createProfile(bytes8,string):(bytes8)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromString(metadata)
      ]
    );

    return result[0].toBytes();
  }

  try_createProfile(
    organizationId: Bytes,
    metadata: string
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createProfile",
      "createProfile(bytes8,string):(bytes8)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromString(metadata)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getNameClaim(name: Bytes): Identity__getNameClaimResultClaimStruct {
    let result = super.call(
      "getNameClaim",
      "getNameClaim(bytes8):((bytes8,address,uint256,uint256,uint256,uint256,bool,uint8))",
      [ethereum.Value.fromFixedBytes(name)]
    );

    return changetype<Identity__getNameClaimResultClaimStruct>(
      result[0].toTuple()
    );
  }

  try_getNameClaim(
    name: Bytes
  ): ethereum.CallResult<Identity__getNameClaimResultClaimStruct> {
    let result = super.tryCall(
      "getNameClaim",
      "getNameClaim(bytes8):((bytes8,address,uint256,uint256,uint256,uint256,bool,uint8))",
      [ethereum.Value.fromFixedBytes(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Identity__getNameClaimResultClaimStruct>(value[0].toTuple())
    );
  }

  getNamesOwnedBy(owner: Address): Array<Bytes> {
    let result = super.call(
      "getNamesOwnedBy",
      "getNamesOwnedBy(address):(bytes8[])",
      [ethereum.Value.fromAddress(owner)]
    );

    return result[0].toBytesArray();
  }

  try_getNamesOwnedBy(owner: Address): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getNamesOwnedBy",
      "getNamesOwnedBy(address):(bytes8[])",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getProfile(profileId: Bytes): Identity__getProfileResultProfileStruct {
    let result = super.call(
      "getProfile",
      "getProfile(bytes8):((bytes8,address,bytes8,string,uint256,uint256,bool,bool))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );

    return changetype<Identity__getProfileResultProfileStruct>(
      result[0].toTuple()
    );
  }

  try_getProfile(
    profileId: Bytes
  ): ethereum.CallResult<Identity__getProfileResultProfileStruct> {
    let result = super.tryCall(
      "getProfile",
      "getProfile(bytes8):((bytes8,address,bytes8,string,uint256,uint256,bool,bool))",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Identity__getProfileResultProfileStruct>(value[0].toTuple())
    );
  }

  getProfileByOwner(
    owner: Address,
    organizationId: Bytes
  ): Identity__getProfileByOwnerResultProfileStruct {
    let result = super.call(
      "getProfileByOwner",
      "getProfileByOwner(address,bytes8):((bytes8,address,bytes8,string,uint256,uint256,bool,bool))",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromFixedBytes(organizationId)
      ]
    );

    return changetype<Identity__getProfileByOwnerResultProfileStruct>(
      result[0].toTuple()
    );
  }

  try_getProfileByOwner(
    owner: Address,
    organizationId: Bytes
  ): ethereum.CallResult<Identity__getProfileByOwnerResultProfileStruct> {
    let result = super.tryCall(
      "getProfileByOwner",
      "getProfileByOwner(address,bytes8):((bytes8,address,bytes8,string,uint256,uint256,bool,bool))",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromFixedBytes(organizationId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Identity__getProfileByOwnerResultProfileStruct>(
        value[0].toTuple()
      )
    );
  }

  getProfileCount(): BigInt {
    let result = super.call(
      "getProfileCount",
      "getProfileCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getProfileCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProfileCount",
      "getProfileCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProfilesByOrganization(organizationId: Bytes): Array<Bytes> {
    let result = super.call(
      "getProfilesByOrganization",
      "getProfilesByOrganization(bytes8):(bytes8[])",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBytesArray();
  }

  try_getProfilesByOrganization(
    organizationId: Bytes
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getProfilesByOrganization",
      "getProfilesByOrganization(bytes8):(bytes8[])",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getVerificationLevel(profileId: Bytes): i32 {
    let result = super.call(
      "getVerificationLevel",
      "getVerificationLevel(bytes8):(uint8)",
      [ethereum.Value.fromFixedBytes(profileId)]
    );

    return result[0].toI32();
  }

  try_getVerificationLevel(profileId: Bytes): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getVerificationLevel",
      "getVerificationLevel(bytes8):(uint8)",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isNameAvailable(name: Bytes): boolean {
    let result = super.call(
      "isNameAvailable",
      "isNameAvailable(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(name)]
    );

    return result[0].toBoolean();
  }

  try_isNameAvailable(name: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isNameAvailable",
      "isNameAvailable(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  moduleId(): Bytes {
    let result = super.call("moduleId", "moduleId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_moduleId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("moduleId", "moduleId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  profileExists(profileId: Bytes): boolean {
    let result = super.call("profileExists", "profileExists(bytes8):(bool)", [
      ethereum.Value.fromFixedBytes(profileId)
    ]);

    return result[0].toBoolean();
  }

  try_profileExists(profileId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "profileExists",
      "profileExists(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(profileId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  releaseName(name: Bytes): BigInt {
    let result = super.call("releaseName", "releaseName(bytes8):(uint256)", [
      ethereum.Value.fromFixedBytes(name)
    ]);

    return result[0].toBigInt();
  }

  try_releaseName(name: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall("releaseName", "releaseName(bytes8):(uint256)", [
      ethereum.Value.fromFixedBytes(name)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  validateNameFormat(name: Bytes): boolean {
    let result = super.call(
      "validateNameFormat",
      "validateNameFormat(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(name)]
    );

    return result[0].toBoolean();
  }

  try_validateNameFormat(name: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "validateNameFormat",
      "validateNameFormat(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimNameCall extends ethereum.Call {
  get inputs(): ClaimNameCall__Inputs {
    return new ClaimNameCall__Inputs(this);
  }

  get outputs(): ClaimNameCall__Outputs {
    return new ClaimNameCall__Outputs(this);
  }
}

export class ClaimNameCall__Inputs {
  _call: ClaimNameCall;

  constructor(call: ClaimNameCall) {
    this._call = call;
  }

  get name(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get stakeAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get stakeDuration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get nameType(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class ClaimNameCall__Outputs {
  _call: ClaimNameCall;

  constructor(call: ClaimNameCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateProfileCall extends ethereum.Call {
  get inputs(): CreateProfileCall__Inputs {
    return new CreateProfileCall__Inputs(this);
  }

  get outputs(): CreateProfileCall__Outputs {
    return new CreateProfileCall__Outputs(this);
  }
}

export class CreateProfileCall__Inputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get metadata(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateProfileCall__Outputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class EmergencyPauseCall extends ethereum.Call {
  get inputs(): EmergencyPauseCall__Inputs {
    return new EmergencyPauseCall__Inputs(this);
  }

  get outputs(): EmergencyPauseCall__Outputs {
    return new EmergencyPauseCall__Outputs(this);
  }
}

export class EmergencyPauseCall__Inputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall__Outputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall extends ethereum.Call {
  get inputs(): EmergencyUnpauseCall__Inputs {
    return new EmergencyUnpauseCall__Inputs(this);
  }

  get outputs(): EmergencyUnpauseCall__Outputs {
    return new EmergencyUnpauseCall__Outputs(this);
  }
}

export class EmergencyUnpauseCall__Inputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall__Outputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get registryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall extends ethereum.Call {
  get inputs(): OnModuleDisabledCall__Inputs {
    return new OnModuleDisabledCall__Inputs(this);
  }

  get outputs(): OnModuleDisabledCall__Outputs {
    return new OnModuleDisabledCall__Outputs(this);
  }
}

export class OnModuleDisabledCall__Inputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall__Outputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall extends ethereum.Call {
  get inputs(): OnModuleEnabledCall__Inputs {
    return new OnModuleEnabledCall__Inputs(this);
  }

  get outputs(): OnModuleEnabledCall__Outputs {
    return new OnModuleEnabledCall__Outputs(this);
  }
}

export class OnModuleEnabledCall__Inputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall__Outputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class ReleaseNameCall extends ethereum.Call {
  get inputs(): ReleaseNameCall__Inputs {
    return new ReleaseNameCall__Inputs(this);
  }

  get outputs(): ReleaseNameCall__Outputs {
    return new ReleaseNameCall__Outputs(this);
  }
}

export class ReleaseNameCall__Inputs {
  _call: ReleaseNameCall;

  constructor(call: ReleaseNameCall) {
    this._call = call;
  }

  get name(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ReleaseNameCall__Outputs {
  _call: ReleaseNameCall;

  constructor(call: ReleaseNameCall) {
    this._call = call;
  }

  get stakeAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateProfileCall extends ethereum.Call {
  get inputs(): UpdateProfileCall__Inputs {
    return new UpdateProfileCall__Inputs(this);
  }

  get outputs(): UpdateProfileCall__Outputs {
    return new UpdateProfileCall__Outputs(this);
  }
}

export class UpdateProfileCall__Inputs {
  _call: UpdateProfileCall;

  constructor(call: UpdateProfileCall) {
    this._call = call;
  }

  get profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get metadata(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProfileCall__Outputs {
  _call: UpdateProfileCall;

  constructor(call: UpdateProfileCall) {
    this._call = call;
  }
}

export class VerifyProfileCall extends ethereum.Call {
  get inputs(): VerifyProfileCall__Inputs {
    return new VerifyProfileCall__Inputs(this);
  }

  get outputs(): VerifyProfileCall__Outputs {
    return new VerifyProfileCall__Outputs(this);
  }
}

export class VerifyProfileCall__Inputs {
  _call: VerifyProfileCall;

  constructor(call: VerifyProfileCall) {
    this._call = call;
  }

  get profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get level(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class VerifyProfileCall__Outputs {
  _call: VerifyProfileCall;

  constructor(call: VerifyProfileCall) {
    this._call = call;
  }
}
