// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MemberAdded extends ethereum.Event {
  get params(): MemberAdded__Params {
    return new MemberAdded__Params(this);
  }
}

export class MemberAdded__Params {
  _event: MemberAdded;

  constructor(event: MemberAdded) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MemberRemoved extends ethereum.Event {
  get params(): MemberRemoved__Params {
    return new MemberRemoved__Params(this);
  }
}

export class MemberRemoved__Params {
  _event: MemberRemoved;

  constructor(event: MemberRemoved) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MemberStateChanged extends ethereum.Event {
  get params(): MemberStateChanged__Params {
    return new MemberStateChanged__Params(this);
  }
}

export class MemberStateChanged__Params {
  _event: MemberStateChanged;

  constructor(event: MemberStateChanged) {
    this._event = event;
  }

  get organizationId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get member(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get oldState(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get newState(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ModuleDisabled extends ethereum.Event {
  get params(): ModuleDisabled__Params {
    return new ModuleDisabled__Params(this);
  }
}

export class ModuleDisabled__Params {
  _event: ModuleDisabled;

  constructor(event: ModuleDisabled) {
    this._event = event;
  }
}

export class ModuleEnabled extends ethereum.Event {
  get params(): ModuleEnabled__Params {
    return new ModuleEnabled__Params(this);
  }
}

export class ModuleEnabled__Params {
  _event: ModuleEnabled;

  constructor(event: ModuleEnabled) {
    this._event = event;
  }
}

export class ModuleInitialized extends ethereum.Event {
  get params(): ModuleInitialized__Params {
    return new ModuleInitialized__Params(this);
  }
}

export class ModuleInitialized__Params {
  _event: ModuleInitialized;

  constructor(event: ModuleInitialized) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OrganizationCreated extends ethereum.Event {
  get params(): OrganizationCreated__Params {
    return new OrganizationCreated__Params(this);
  }
}

export class OrganizationCreated__Params {
  _event: OrganizationCreated;

  constructor(event: OrganizationCreated) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get treasury(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OrganizationStateChanged extends ethereum.Event {
  get params(): OrganizationStateChanged__Params {
    return new OrganizationStateChanged__Params(this);
  }
}

export class OrganizationStateChanged__Params {
  _event: OrganizationStateChanged;

  constructor(event: OrganizationStateChanged) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldState(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get newState(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Control__getAllOrganizationsResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get name(): string {
    return this[1].toString();
  }

  get metadataURI(): string {
    return this[2].toString();
  }

  get creator(): Address {
    return this[3].toAddress();
  }

  get treasury(): Address {
    return this[4].toAddress();
  }

  get orgType(): i32 {
    return this[5].toI32();
  }

  get accessModel(): i32 {
    return this[6].toI32();
  }

  get feeModel(): i32 {
    return this[7].toI32();
  }

  get memberLimit(): BigInt {
    return this[8].toBigInt();
  }

  get memberCount(): BigInt {
    return this[9].toBigInt();
  }

  get totalCampaigns(): BigInt {
    return this[10].toBigInt();
  }

  get totalProposals(): BigInt {
    return this[11].toBigInt();
  }

  get membershipFee(): BigInt {
    return this[12].toBigInt();
  }

  get gameStakeRequired(): BigInt {
    return this[13].toBigInt();
  }

  get state(): i32 {
    return this[14].toI32();
  }

  get createdAt(): BigInt {
    return this[15].toBigInt();
  }

  get updatedAt(): BigInt {
    return this[16].toBigInt();
  }
}

export class Control__getMemberResultValue0Struct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get state(): i32 {
    return this[1].toI32();
  }

  get joinedAt(): BigInt {
    return this[2].toBigInt();
  }

  get reputation(): BigInt {
    return this[3].toBigInt();
  }

  get stake(): BigInt {
    return this[4].toBigInt();
  }
}

export class Control__getOrganizationResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get name(): string {
    return this[1].toString();
  }

  get metadataURI(): string {
    return this[2].toString();
  }

  get creator(): Address {
    return this[3].toAddress();
  }

  get treasury(): Address {
    return this[4].toAddress();
  }

  get orgType(): i32 {
    return this[5].toI32();
  }

  get accessModel(): i32 {
    return this[6].toI32();
  }

  get feeModel(): i32 {
    return this[7].toI32();
  }

  get memberLimit(): BigInt {
    return this[8].toBigInt();
  }

  get memberCount(): BigInt {
    return this[9].toBigInt();
  }

  get totalCampaigns(): BigInt {
    return this[10].toBigInt();
  }

  get totalProposals(): BigInt {
    return this[11].toBigInt();
  }

  get membershipFee(): BigInt {
    return this[12].toBigInt();
  }

  get gameStakeRequired(): BigInt {
    return this[13].toBigInt();
  }

  get state(): i32 {
    return this[14].toI32();
  }

  get createdAt(): BigInt {
    return this[15].toBigInt();
  }

  get updatedAt(): BigInt {
    return this[16].toBigInt();
  }
}

export class Control__getOrganizationsByStateResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get name(): string {
    return this[1].toString();
  }

  get metadataURI(): string {
    return this[2].toString();
  }

  get creator(): Address {
    return this[3].toAddress();
  }

  get treasury(): Address {
    return this[4].toAddress();
  }

  get orgType(): i32 {
    return this[5].toI32();
  }

  get accessModel(): i32 {
    return this[6].toI32();
  }

  get feeModel(): i32 {
    return this[7].toI32();
  }

  get memberLimit(): BigInt {
    return this[8].toBigInt();
  }

  get memberCount(): BigInt {
    return this[9].toBigInt();
  }

  get totalCampaigns(): BigInt {
    return this[10].toBigInt();
  }

  get totalProposals(): BigInt {
    return this[11].toBigInt();
  }

  get membershipFee(): BigInt {
    return this[12].toBigInt();
  }

  get gameStakeRequired(): BigInt {
    return this[13].toBigInt();
  }

  get state(): i32 {
    return this[14].toI32();
  }

  get createdAt(): BigInt {
    return this[15].toBigInt();
  }

  get updatedAt(): BigInt {
    return this[16].toBigInt();
  }
}

export class Control extends ethereum.SmartContract {
  static bind(address: Address): Control {
    return new Control("Control", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_MEMBER_LIMIT(): BigInt {
    let result = super.call(
      "MAX_MEMBER_LIMIT",
      "MAX_MEMBER_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_MEMBER_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_MEMBER_LIMIT",
      "MAX_MEMBER_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_MEMBER_LIMIT(): BigInt {
    let result = super.call(
      "MIN_MEMBER_LIMIT",
      "MIN_MEMBER_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_MEMBER_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_MEMBER_LIMIT",
      "MIN_MEMBER_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MODULE_ID(): Bytes {
    let result = super.call("MODULE_ID", "MODULE_ID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MODULE_ID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MODULE_ID", "MODULE_ID():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OPERATOR_ROLE(): Bytes {
    let result = super.call("OPERATOR_ROLE", "OPERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OPERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "OPERATOR_ROLE",
      "OPERATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createOrganization(
    name: string,
    metadataURI: string,
    orgType: i32,
    accessModel: i32,
    feeModel: i32,
    memberLimit: BigInt,
    membershipFee: BigInt,
    gameStakeRequired: BigInt
  ): Bytes {
    let result = super.call(
      "createOrganization",
      "createOrganization(string,string,uint8,uint8,uint8,uint256,uint256,uint256):(bytes8)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(metadataURI),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(orgType)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(accessModel)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(feeModel)),
        ethereum.Value.fromUnsignedBigInt(memberLimit),
        ethereum.Value.fromUnsignedBigInt(membershipFee),
        ethereum.Value.fromUnsignedBigInt(gameStakeRequired)
      ]
    );

    return result[0].toBytes();
  }

  try_createOrganization(
    name: string,
    metadataURI: string,
    orgType: i32,
    accessModel: i32,
    feeModel: i32,
    memberLimit: BigInt,
    membershipFee: BigInt,
    gameStakeRequired: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createOrganization",
      "createOrganization(string,string,uint8,uint8,uint8,uint256,uint256,uint256):(bytes8)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(metadataURI),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(orgType)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(accessModel)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(feeModel)),
        ethereum.Value.fromUnsignedBigInt(memberLimit),
        ethereum.Value.fromUnsignedBigInt(membershipFee),
        ethereum.Value.fromUnsignedBigInt(gameStakeRequired)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  gameToken(): Address {
    let result = super.call("gameToken", "gameToken():(address)", []);

    return result[0].toAddress();
  }

  try_gameToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("gameToken", "gameToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllOrganizations(): Array<Control__getAllOrganizationsResultValue0Struct> {
    let result = super.call(
      "getAllOrganizations",
      "getAllOrganizations():((bytes8,string,string,address,address,uint8,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint256,uint256)[])",
      []
    );

    return result[0].toTupleArray<
      Control__getAllOrganizationsResultValue0Struct
    >();
  }

  try_getAllOrganizations(): ethereum.CallResult<
    Array<Control__getAllOrganizationsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllOrganizations",
      "getAllOrganizations():((bytes8,string,string,address,address,uint8,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint256,uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Control__getAllOrganizationsResultValue0Struct>()
    );
  }

  getMember(
    organizationId: Bytes,
    member: Address
  ): Control__getMemberResultValue0Struct {
    let result = super.call(
      "getMember",
      "getMember(bytes8,address):((address,uint8,uint256,uint256,uint256))",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );

    return changetype<Control__getMemberResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getMember(
    organizationId: Bytes,
    member: Address
  ): ethereum.CallResult<Control__getMemberResultValue0Struct> {
    let result = super.tryCall(
      "getMember",
      "getMember(bytes8,address):((address,uint8,uint256,uint256,uint256))",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Control__getMemberResultValue0Struct>(value[0].toTuple())
    );
  }

  getMemberCount(organizationId: Bytes): BigInt {
    let result = super.call(
      "getMemberCount",
      "getMemberCount(bytes8):(uint256)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBigInt();
  }

  try_getMemberCount(organizationId: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMemberCount",
      "getMemberCount(bytes8):(uint256)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMembers(organizationId: Bytes): Array<Address> {
    let result = super.call("getMembers", "getMembers(bytes8):(address[])", [
      ethereum.Value.fromFixedBytes(organizationId)
    ]);

    return result[0].toAddressArray();
  }

  try_getMembers(organizationId: Bytes): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getMembers", "getMembers(bytes8):(address[])", [
      ethereum.Value.fromFixedBytes(organizationId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getOrganization(id: Bytes): Control__getOrganizationResultValue0Struct {
    let result = super.call(
      "getOrganization",
      "getOrganization(bytes8):((bytes8,string,string,address,address,uint8,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(id)]
    );

    return changetype<Control__getOrganizationResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getOrganization(
    id: Bytes
  ): ethereum.CallResult<Control__getOrganizationResultValue0Struct> {
    let result = super.tryCall(
      "getOrganization",
      "getOrganization(bytes8):((bytes8,string,string,address,address,uint8,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Control__getOrganizationResultValue0Struct>(value[0].toTuple())
    );
  }

  getOrganizationCount(): BigInt {
    let result = super.call(
      "getOrganizationCount",
      "getOrganizationCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getOrganizationCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrganizationCount",
      "getOrganizationCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrganizationsByState(
    state: i32
  ): Array<Control__getOrganizationsByStateResultValue0Struct> {
    let result = super.call(
      "getOrganizationsByState",
      "getOrganizationsByState(uint8):((bytes8,string,string,address,address,uint8,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint256,uint256)[])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(state))]
    );

    return result[0].toTupleArray<
      Control__getOrganizationsByStateResultValue0Struct
    >();
  }

  try_getOrganizationsByState(
    state: i32
  ): ethereum.CallResult<
    Array<Control__getOrganizationsByStateResultValue0Struct>
  > {
    let result = super.tryCall(
      "getOrganizationsByState",
      "getOrganizationsByState(uint8):((bytes8,string,string,address,address,uint8,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint256,uint256)[])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(state))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        Control__getOrganizationsByStateResultValue0Struct
      >()
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMember(organizationId: Bytes, member: Address): boolean {
    let result = super.call("isMember", "isMember(bytes8,address):(bool)", [
      ethereum.Value.fromFixedBytes(organizationId),
      ethereum.Value.fromAddress(member)
    ]);

    return result[0].toBoolean();
  }

  try_isMember(
    organizationId: Bytes,
    member: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMember", "isMember(bytes8,address):(bool)", [
      ethereum.Value.fromFixedBytes(organizationId),
      ethereum.Value.fromAddress(member)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMemberActive(organizationId: Bytes, member: Address): boolean {
    let result = super.call(
      "isMemberActive",
      "isMemberActive(bytes8,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );

    return result[0].toBoolean();
  }

  try_isMemberActive(
    organizationId: Bytes,
    member: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isMemberActive",
      "isMemberActive(bytes8,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(organizationId),
        ethereum.Value.fromAddress(member)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOrganizationActive(organizationId: Bytes): boolean {
    let result = super.call(
      "isOrganizationActive",
      "isOrganizationActive(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );

    return result[0].toBoolean();
  }

  try_isOrganizationActive(
    organizationId: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOrganizationActive",
      "isOrganizationActive(bytes8):(bool)",
      [ethereum.Value.fromFixedBytes(organizationId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  moduleId(): Bytes {
    let result = super.call("moduleId", "moduleId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_moduleId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("moduleId", "moduleId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _gameToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddMemberCall extends ethereum.Call {
  get inputs(): AddMemberCall__Inputs {
    return new AddMemberCall__Inputs(this);
  }

  get outputs(): AddMemberCall__Outputs {
    return new AddMemberCall__Outputs(this);
  }
}

export class AddMemberCall__Inputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get member(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddMemberCall__Outputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }
}

export class CreateOrganizationCall extends ethereum.Call {
  get inputs(): CreateOrganizationCall__Inputs {
    return new CreateOrganizationCall__Inputs(this);
  }

  get outputs(): CreateOrganizationCall__Outputs {
    return new CreateOrganizationCall__Outputs(this);
  }
}

export class CreateOrganizationCall__Inputs {
  _call: CreateOrganizationCall;

  constructor(call: CreateOrganizationCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[1].value.toString();
  }

  get orgType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get accessModel(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get feeModel(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get memberLimit(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get membershipFee(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get gameStakeRequired(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class CreateOrganizationCall__Outputs {
  _call: CreateOrganizationCall;

  constructor(call: CreateOrganizationCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class EmergencyPauseCall extends ethereum.Call {
  get inputs(): EmergencyPauseCall__Inputs {
    return new EmergencyPauseCall__Inputs(this);
  }

  get outputs(): EmergencyPauseCall__Outputs {
    return new EmergencyPauseCall__Outputs(this);
  }
}

export class EmergencyPauseCall__Inputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyPauseCall__Outputs {
  _call: EmergencyPauseCall;

  constructor(call: EmergencyPauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall extends ethereum.Call {
  get inputs(): EmergencyUnpauseCall__Inputs {
    return new EmergencyUnpauseCall__Inputs(this);
  }

  get outputs(): EmergencyUnpauseCall__Outputs {
    return new EmergencyUnpauseCall__Outputs(this);
  }
}

export class EmergencyUnpauseCall__Inputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class EmergencyUnpauseCall__Outputs {
  _call: EmergencyUnpauseCall;

  constructor(call: EmergencyUnpauseCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get registryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall extends ethereum.Call {
  get inputs(): OnModuleDisabledCall__Inputs {
    return new OnModuleDisabledCall__Inputs(this);
  }

  get outputs(): OnModuleDisabledCall__Outputs {
    return new OnModuleDisabledCall__Outputs(this);
  }
}

export class OnModuleDisabledCall__Inputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleDisabledCall__Outputs {
  _call: OnModuleDisabledCall;

  constructor(call: OnModuleDisabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall extends ethereum.Call {
  get inputs(): OnModuleEnabledCall__Inputs {
    return new OnModuleEnabledCall__Inputs(this);
  }

  get outputs(): OnModuleEnabledCall__Outputs {
    return new OnModuleEnabledCall__Outputs(this);
  }
}

export class OnModuleEnabledCall__Inputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class OnModuleEnabledCall__Outputs {
  _call: OnModuleEnabledCall;

  constructor(call: OnModuleEnabledCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveMemberCall extends ethereum.Call {
  get inputs(): RemoveMemberCall__Inputs {
    return new RemoveMemberCall__Inputs(this);
  }

  get outputs(): RemoveMemberCall__Outputs {
    return new RemoveMemberCall__Outputs(this);
  }
}

export class RemoveMemberCall__Inputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get member(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveMemberCall__Outputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateMemberStateCall extends ethereum.Call {
  get inputs(): UpdateMemberStateCall__Inputs {
    return new UpdateMemberStateCall__Inputs(this);
  }

  get outputs(): UpdateMemberStateCall__Outputs {
    return new UpdateMemberStateCall__Outputs(this);
  }
}

export class UpdateMemberStateCall__Inputs {
  _call: UpdateMemberStateCall;

  constructor(call: UpdateMemberStateCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get member(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get state(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class UpdateMemberStateCall__Outputs {
  _call: UpdateMemberStateCall;

  constructor(call: UpdateMemberStateCall) {
    this._call = call;
  }
}

export class UpdateOrganizationStateCall extends ethereum.Call {
  get inputs(): UpdateOrganizationStateCall__Inputs {
    return new UpdateOrganizationStateCall__Inputs(this);
  }

  get outputs(): UpdateOrganizationStateCall__Outputs {
    return new UpdateOrganizationStateCall__Outputs(this);
  }
}

export class UpdateOrganizationStateCall__Inputs {
  _call: UpdateOrganizationStateCall;

  constructor(call: UpdateOrganizationStateCall) {
    this._call = call;
  }

  get organizationId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get state(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class UpdateOrganizationStateCall__Outputs {
  _call: UpdateOrganizationStateCall;

  constructor(call: UpdateOrganizationStateCall) {
    this._call = call;
  }
}
