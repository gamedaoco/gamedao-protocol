specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  # Registry - Module Management
  - kind: ethereum
    name: Registry
    network: localhost
    source:
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3"
      abi: Registry
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - ModuleRegistry
        - ModuleInfo
        - ModuleEvent
        - GlobalStats
        - Transaction
      abis:
        - name: Registry
          file: ./abis/Registry.json
      eventHandlers:
        - event: ModuleRegistered(indexed bytes32,indexed address,string)
          handler: handleModuleRegistered
        - event: ModuleEnabled(indexed bytes32)
          handler: handleModuleEnabled
        - event: ModuleDisabled(indexed bytes32)
          handler: handleModuleDisabled
        - event: ModuleUpgraded(indexed bytes32,indexed address,indexed address,string)
          handler: handleModuleUpgraded
      file: ./src/registry.ts

  # Staking - Staking Management
  - kind: ethereum
    name: Staking
    network: localhost
    source:
      address: "0xc5a5C42992dECbae36851359345FE25997F5C42d"
      abi: Staking
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - StakingPool
        - StakeInfo
        - UnstakeRequest
        - RewardDistribution
        - StakingStats
        - GlobalStats
        - Transaction
      abis:
        - name: Staking
          file: ./abis/Staking.json
      eventHandlers:
        - event: Staked(indexed address,indexed uint256,uint256,uint256,uint256)
          handler: handleStaked
        - event: UnstakeRequested(indexed address,indexed uint256,uint256,uint256,uint256)
          handler: handleUnstakeRequested
        - event: Unstaked(indexed address,indexed uint256,uint256,uint256)
          handler: handleUnstaked
        - event: RewardsClaimed(indexed address,indexed uint256,uint256,uint256)
          handler: handleRewardsClaimed
        - event: RewardsDistributed(indexed uint256,uint256,uint256)
          handler: handleRewardsDistributed
        - event: PoolCreated(indexed uint256,uint256,uint256,uint256)
          handler: handlePoolCreated
        - event: PoolUpdated(indexed uint256,uint256,uint256,uint256)
          handler: handlePoolUpdated
        - event: OrganizationStakeAdded(indexed bytes8,indexed address,uint256,uint256)
          handler: handleOrganizationStakeAdded
        - event: OrganizationStakeWithdrawn(indexed bytes8,indexed address,uint256,uint256)
          handler: handleOrganizationStakeWithdrawn
      file: ./src/staking.ts

  # Control Module - Organization Management (Updated for Membership)
  - kind: ethereum
    name: ControlWithMembership
    network: localhost
    source:
      address: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318"
      abi: ControlWithMembership
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Organization
        - OrganizationStake
        - Treasury
        - GlobalStats
        - Transaction
      abis:
        - name: ControlWithMembership
          file: ./abis/ControlWithMembership.json
        - name: Treasury
          file: ./abis/Treasury.json
        - name: GameDAOMembership
          file: ./abis/GameDAOMembership.json
      eventHandlers:
        - event: OrganizationCreated(indexed bytes8,string,indexed address,indexed address,uint256)
          handler: handleOrganizationCreated
        - event: OrganizationStateChanged(indexed bytes8,uint8,uint8,uint256)
          handler: handleOrganizationStateChanged
        - event: OrganizationUpdated(indexed bytes8,string,uint256)
          handler: handleOrganizationUpdated
      file: ./src/control.ts

  # Flow Module - Crowdfunding & Campaigns (Updated for Membership)
  - kind: ethereum
    name: FlowWithMembership
    network: localhost
    source:
      address: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9"
      abi: FlowWithMembership
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Campaign
        - Contribution
        - CampaignReward
        - GlobalStats
        - Transaction
      abis:
        - name: FlowWithMembership
          file: ./abis/FlowWithMembership.json
        - name: GameDAOMembership
          file: ./abis/GameDAOMembership.json
      eventHandlers:
        - event: CampaignCreated(indexed bytes8,indexed address,indexed address,string,uint8,uint256,uint256,uint256,uint256,uint256)
          handler: handleCampaignCreated
        - event: CampaignStateChanged(indexed bytes8,uint8,uint8,uint256)
          handler: handleCampaignStateChanged
        - event: ContributionMade(indexed bytes8,indexed address,uint256,uint256)
          handler: handleContributionMade
        - event: CampaignFinalized(indexed bytes8,uint8,uint256,uint256)
          handler: handleCampaignFinalized
        - event: RewardsDistributed(indexed bytes8,indexed address,uint256,uint256)
          handler: handleRewardsDistributed
      file: ./src/flow.ts

  # Signal Module - Governance & Voting (Updated for Membership)
  - kind: ethereum
    name: SignalWithMembership
    network: localhost
    source:
      address: "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82"
      abi: SignalWithMembership
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Proposal
        - Vote
        - GlobalStats
        - Transaction
      abis:
        - name: SignalWithMembership
          file: ./abis/SignalWithMembership.json
        - name: GameDAOMembership
          file: ./abis/GameDAOMembership.json
      eventHandlers:
        - event: ProposalCreated(indexed bytes8,indexed address,indexed string,string,uint8,uint8,uint8,uint256,uint256,uint256)
          handler: handleProposalCreated
        - event: ProposalStateChanged(indexed bytes8,indexed string,uint8,uint8,uint256)
          handler: handleProposalStateChanged
        - event: VoteCast(indexed bytes8,indexed string,indexed address,uint8,uint256,uint256,uint256)
          handler: handleVoteCast
        - event: ProposalExecuted(indexed bytes8,indexed string,indexed address,uint256)
          handler: handleProposalExecuted
      file: ./src/signal.ts

  # Sense Module - Reputation & Profiles (Updated for Membership)
  - kind: ethereum
    name: SenseWithMembership
    network: localhost
    source:
      address: "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853"
      abi: SenseWithMembership
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Profile
        - ReputationData
        - ReputationEvent
        - GlobalStats
        - Transaction
      abis:
        - name: SenseWithMembership
          file: ./abis/SenseWithMembership.json
        - name: GameDAOMembership
          file: ./abis/GameDAOMembership.json
      eventHandlers:
        - event: ProfileCreated(indexed bytes8,indexed address,indexed bytes8,string,uint256)
          handler: handleProfileCreated
        - event: ProfileUpdated(indexed bytes8,string,uint256)
          handler: handleProfileUpdated
        - event: ProfileVerified(indexed bytes8,uint8,indexed address,uint256)
          handler: handleProfileVerified
        - event: ReputationSynced(indexed bytes8,indexed bytes8,uint256,uint256,uint256)
          handler: handleReputationSynced
      file: ./src/sense.ts
