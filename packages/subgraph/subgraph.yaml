specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  # Registry - Module Management
  - kind: ethereum
    name: Registry
    network: localhost
    source:
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9"
      abi: Registry
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Module
        - ModuleRegistration
        - ModuleUpgrade
        - GlobalStats
        - Transaction
      abis:
        - name: Registry
          file: ./abis/Registry.json
      eventHandlers:
        - event: ModuleRegistered(indexed bytes32,indexed address,string)
          handler: handleModuleRegistered
        - event: ModuleEnabled(indexed bytes32)
          handler: handleModuleEnabled
        - event: ModuleDisabled(indexed bytes32)
          handler: handleModuleDisabled
        - event: ModuleUpgraded(indexed bytes32,indexed address,indexed address,string)
          handler: handleModuleUpgraded
      file: ./src/registry.ts

  # GameToken - ERC20 Token Transfers
  - kind: ethereum
    name: GameToken
    network: localhost
    source:
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3"
      abi: GameToken
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - TokenTransfer
        - GlobalStats
        - Transaction
      abis:
        - name: GameToken
          file: ./abis/GameToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleGameTokenTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleGameTokenApproval
        - event: TokensMinted(indexed address,uint256,uint256)
          handler: handleTokensMinted
        - event: TokensBurned(indexed address,uint256,uint256)
          handler: handleTokensBurned
      file: ./src/gameToken.ts

  # MockGameToken - ERC20 Token Transfers (for testing)
  - kind: ethereum
    name: MockGameToken
    network: localhost
    source:
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3"
      abi: MockGameToken
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - TokenTransfer
        - GlobalStats
        - Transaction
      abis:
        - name: MockGameToken
          file: ./abis/MockGameToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleMockGameTokenTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleMockGameTokenApproval
        - event: TokensMinted(indexed address,uint256,uint256)
          handler: handleMockTokensMinted
        - event: TokensBurned(indexed address,uint256,uint256)
          handler: handleMockTokensBurned
      file: ./src/mockGameToken.ts

  # MockUSDC - ERC20 Token Transfers
  - kind: ethereum
    name: MockUSDC
    network: localhost
    source:
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
      abi: MockUSDC
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - TokenTransfer
        - GlobalStats
        - Transaction
      abis:
        - name: MockUSDC
          file: ./abis/MockUSDC.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleUSDCTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleUSDCApproval
      file: ./src/mockUSDC.ts

  # Staking - Staking Management
  - kind: ethereum
    name: Staking
    network: localhost
    source:
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
      abi: Staking
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - StakingPool
        - UserStake
        - UnstakeRequest
        - OrganizationStake
        - GlobalStats
        - Transaction
      abis:
        - name: Staking
          file: ./abis/Staking.json
      eventHandlers:
        - event: Staked(indexed address,indexed uint8,uint256,uint8,uint256)
          handler: handleStaked
        - event: UnstakeRequested(indexed address,indexed uint8,uint256,uint8,uint256,uint256)
          handler: handleUnstakeRequested
        - event: Unstaked(indexed address,indexed uint8,uint256,uint256,uint256)
          handler: handleUnstaked
        - event: RewardsClaimed(indexed address,indexed uint8,uint256,uint256)
          handler: handleRewardsClaimed
        - event: RewardsDistributed(indexed uint8,uint256,uint256)
          handler: handleRewardsDistributed
        - event: PoolUpdated(indexed uint8,uint256,bool)
          handler: handlePoolUpdated
        - event: OrganizationStaked(indexed bytes8,indexed address,uint256,uint256)
          handler: handleOrganizationStaked
        - event: OrganizationStakeWithdrawn(indexed bytes8,indexed address,uint256,uint256)
          handler: handleOrganizationStakeWithdrawn
        - event: Slashed(indexed address,indexed uint8,uint256,indexed address,string,uint256)
          handler: handleSlashed
      file: ./src/staking.ts

  # StakingRewards - Rewards Staking Management
  - kind: ethereum
    name: StakingRewards
    network: localhost
    source:
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"
      abi: Staking
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - StakingPool
        - UserStake
        - UnstakeRequest
        - OrganizationStake
        - GlobalStats
        - Transaction
      abis:
        - name: Staking
          file: ./abis/Staking.json
      eventHandlers:
        - event: Staked(indexed address,indexed uint8,uint256,uint8,uint256)
          handler: handleStaked
        - event: UnstakeRequested(indexed address,indexed uint8,uint256,uint8,uint256,uint256)
          handler: handleUnstakeRequested
        - event: Unstaked(indexed address,indexed uint8,uint256,uint256,uint256)
          handler: handleUnstaked
        - event: RewardsClaimed(indexed address,indexed uint8,uint256,uint256)
          handler: handleRewardsClaimed
        - event: RewardsDistributed(indexed uint8,uint256,uint256)
          handler: handleRewardsDistributed
        - event: PoolUpdated(indexed uint8,uint256,bool)
          handler: handlePoolUpdated
        - event: OrganizationStaked(indexed bytes8,indexed address,uint256,uint256)
          handler: handleOrganizationStaked
        - event: OrganizationStakeWithdrawn(indexed bytes8,indexed address,uint256,uint256)
          handler: handleOrganizationStakeWithdrawn
        - event: Slashed(indexed address,indexed uint8,uint256,indexed address,string,uint256)
          handler: handleSlashed
      file: ./src/staking.ts

  # Identity Module - User Identity & Profiles
  - kind: ethereum
    name: Identity
    network: localhost
    source:
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"
      abi: Identity
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Profile
        - NameClaim
        - GlobalStats
        - Transaction
      abis:
        - name: Identity
          file: ./abis/Identity.json
      eventHandlers:
        - event: ProfileCreated(indexed bytes8,indexed address,indexed bytes8,string,uint256)
          handler: handleProfileCreated
        - event: ProfileUpdated(indexed bytes8,string,uint256)
          handler: handleProfileUpdated
        - event: ProfileVerified(indexed bytes8,uint8,indexed address,uint256)
          handler: handleProfileVerified
        # - event: NameClaimed(indexed bytes8,indexed address,uint256,uint256,uint8,uint256)
        #   handler: handleNameClaimed
        # - event: NameReleased(indexed bytes8,indexed address,uint256,uint256)
        #   handler: handleNameReleased
      file: ./src/identity.ts

  # Membership Module - Organization Membership
  - kind: ethereum
    name: Membership
    network: localhost
    source:
      address: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9"
      abi: Membership
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Member
        - Organization
        - VotingDelegation
        - GlobalStats
        - Transaction
      abis:
        - name: Membership
          file: ./abis/Membership.json
      eventHandlers:
        - event: MemberAdded(indexed bytes8,indexed address,uint8,uint256)
          handler: handleMemberAdded
        - event: MemberRemoved(indexed bytes8,indexed address,uint256)
          handler: handleMemberRemoved
        - event: MemberStateUpdated(indexed bytes8,indexed address,uint8,uint8,uint256)
          handler: handleMemberStateUpdated
        - event: MemberTierUpdated(indexed bytes8,indexed address,uint8,uint8,uint256)
          handler: handleMemberTierUpdated
        - event: VotingPowerUpdated(indexed bytes8,indexed address,uint256,uint256,uint256)
          handler: handleVotingPowerUpdated
        - event: VotingDelegated(indexed bytes8,indexed address,indexed address,uint256,uint256)
          handler: handleVotingDelegated
        - event: VotingUndelegated(indexed bytes8,indexed address,indexed address,uint256,uint256)
          handler: handleVotingUndelegated
      file: ./src/membership.ts

  # Control Module - Organization Management
  - kind: ethereum
    name: Control
    network: localhost
    source:
      address: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707"
      abi: Control
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Organization
        - OrganizationStake
        - User
        - GlobalStats
        - Transaction
      abis:
        - name: Control
          file: ./abis/Control.json
      eventHandlers:
        - event: OrganizationCreated(indexed bytes8,string,indexed address,indexed address,uint256)
          handler: handleOrganizationCreated
        - event: OrganizationStateChanged(indexed bytes8,uint8,uint8,uint256)
          handler: handleOrganizationStateChanged
        - event: StakeWithdrawn(indexed bytes8,indexed address,uint256,uint256)
          handler: handleStakeWithdrawn
      file: ./src/control.ts

  # Factory - Organization Creation Events
  - kind: ethereum
    name: Factory
    network: localhost
    source:
      address: "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853"
      abi: Factory
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Organization
        - OrganizationStake
        - User
        - GlobalStats
        - Transaction
      abis:
        - name: Factory
          file: ./abis/Factory.json
      eventHandlers:
        - event: OrganizationCreated(indexed bytes8,string,indexed address,indexed address,uint256)
          handler: handleOrganizationCreated
      file: ./src/control.ts

  # Flow Module - Campaigns & Crowdfunding
  - kind: ethereum
    name: Flow
    network: localhost
    source:
      address: "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6"
      abi: Flow
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Campaign
        - Contribution
        - CampaignReward
        - GlobalStats
        - Transaction
      abis:
        - name: Flow
          file: ./abis/Flow.json
      eventHandlers:
        - event: CampaignCreated(indexed bytes32,indexed bytes8,indexed address,string,uint8,uint256,uint256,uint256,uint256)
          handler: handleCampaignCreated
        - event: CampaignStateChanged(indexed bytes32,uint8,uint8,uint256)
          handler: handleCampaignStateChanged
        - event: ContributionMade(indexed bytes32,indexed address,uint256,uint256,uint256)
          handler: handleContributionMade
        - event: CampaignFinalized(indexed bytes32,uint8,uint256,uint256,uint256)
          handler: handleCampaignFinalized
        - event: RewardsDistributed(indexed bytes32,indexed address,uint256,uint256,uint256)
          handler: handleRewardsDistributed
        - event: ContributionRefunded(indexed bytes32,indexed address,uint256,uint256)
          handler: handleContributionRefunded
        - event: ProtocolFeeCollected(indexed bytes32,indexed address,uint256,uint256)
          handler: handleProtocolFeeCollected
      file: ./src/flow.ts

  # Signal Module - Governance & Voting
  - kind: ethereum
    name: Signal
    network: localhost
    source:
      address: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318"
      abi: Signal
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Proposal
        - Vote
        - Delegation
        - GlobalStats
        - Transaction
      abis:
        - name: Signal
          file: ./abis/Signal.json
      eventHandlers:
        - event: ProposalCreated(string,indexed bytes8,indexed address,string,uint8,uint8,uint256,uint256,uint256)
          handler: handleProposalCreated
        - event: VoteCast(string,indexed address,uint8,uint256,string)
          handler: handleVoteCast
        - event: ProposalExecuted(indexed string,indexed address,bool,bytes)
          handler: handleProposalExecuted
        - event: ProposalCanceled(indexed string,indexed address,string)
          handler: handleProposalCanceled
        - event: VotingPowerDelegated(indexed address,indexed address,uint256,uint256)
          handler: handleVotingPowerDelegated
        - event: VotingPowerUndelegated(indexed address,indexed address,uint256,uint256)
          handler: handleVotingPowerUndelegated
        - event: ConvictionVoteCast(indexed string,indexed address,uint8,uint256,uint256,uint256,string)
          handler: handleConvictionVoteCast
      file: ./src/signal.ts

  # Sense Module - Reputation & Profiles (temporarily disabled due to schema issues)
  # - kind: ethereum
  #   name: Sense
  #   network: localhost
  #   source:
  #     address: "0x610178dA211FEF7D417bC0e6FeD39F05609AD788"
  #     abi: Sense
  #     startBlock: 0
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Profile
  #       - ReputationData
  #       - ReputationEvent
  #       - GlobalStats
  #       - Transaction
  #     abis:
  #       - name: Sense
  #         file: ./abis/Sense.json
  #     eventHandlers:
  #       - event: ReputationUpdated(indexed bytes8,indexed bytes8,indexed uint8,int256,bytes32,address,uint256)
  #         handler: handleReputationUpdated
  #       - event: ExperienceAwarded(indexed bytes8,indexed bytes8,uint256,bytes32,indexed address,uint256)
  #         handler: handleExperienceAwarded
  #       - event: InteractionRecorded(indexed bytes8,indexed bytes8,bool,bytes32,indexed address,uint256)
  #         handler: handleInteractionRecorded
  #     file: ./src/sense.ts

templates:
  # Treasury Template - Dynamically created for each organization
  - kind: ethereum
    name: Treasury
    network: localhost
    source:
      abi: Treasury
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Organization
        - Treasury
        - TreasuryTransaction
        - GlobalStats
        - Transaction
      abis:
        - name: Treasury
          file: ./abis/Treasury.json
      eventHandlers:
        - event: FundsDeposited(indexed address,indexed address,uint256,string,uint256)
          handler: handleFundsDeposited
        - event: FundsSpent(indexed address,indexed address,indexed address,uint256,string,uint256)
          handler: handleFundsSpent
        - event: TokenAdded(indexed address,uint256)
          handler: handleTokenAdded
        - event: TokenRemoved(indexed address,uint256)
          handler: handleTokenRemoved
        - event: SpendingLimitUpdated(indexed address,uint256,uint256,uint256)
          handler: handleSpendingLimitUpdated
      file: ./src/treasury.ts
