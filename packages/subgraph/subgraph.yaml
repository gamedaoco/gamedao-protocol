specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  # GameDAO Registry - Central module management
  - kind: ethereum
    name: GameDAORegistry
    network: localhost
    source:
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3"
      abi: GameDAORegistry
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Module
        - ModuleRegistration
        - ModuleUpgrade
      abis:
        - name: GameDAORegistry
          file: ./abis/GameDAORegistry.json
      eventHandlers:
        - event: ModuleRegistered(indexed bytes32,indexed address,string)
          handler: handleModuleRegistered
        - event: ModuleEnabled(indexed bytes32)
          handler: handleModuleEnabled
        - event: ModuleDisabled(indexed bytes32)
          handler: handleModuleDisabled
        - event: ModuleUpgraded(indexed bytes32,indexed address,indexed address,string)
          handler: handleModuleUpgraded
      file: ./src/registry.ts

  # Control Module - DAO Management
  - kind: ethereum
    name: Control
    network: localhost
    source:
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
      abi: Control
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Organization
        - Member
        - Treasury
        - Stake
      abis:
        - name: Control
          file: ./abis/Control.json
        - name: Treasury
          file: ./abis/Treasury.json
      eventHandlers:
        - event: OrganizationCreated(indexed bytes32,indexed address,indexed address,string,uint8,uint256)
          handler: handleOrganizationCreated
        - event: OrganizationUpdated(indexed bytes32,indexed address,uint8,uint8,uint32,uint256)
          handler: handleOrganizationUpdated
        - event: OrganizationStateChanged(indexed bytes32,uint8,uint8,uint256)
          handler: handleOrganizationStateChanged
        - event: MemberAdded(indexed bytes32,indexed address,uint8,uint256,uint256)
          handler: handleMemberAdded
        - event: MemberRemoved(indexed bytes32,indexed address,uint256)
          handler: handleMemberRemoved
        - event: MemberStateChanged(indexed bytes32,indexed address,uint8,uint8,uint256)
          handler: handleMemberStateChanged
        - event: MembershipFeeUpdated(indexed bytes32,uint256,uint256,uint256)
          handler: handleMembershipFeeUpdated
      file: ./src/control.ts

  # Flow Module - Crowdfunding & Campaigns
  - kind: ethereum
    name: Flow
    network: localhost
    source:
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"
      abi: Flow
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Campaign
        - Contribution
        - Reward
        - ProtocolFee
      abis:
        - name: Flow
          file: ./abis/Flow.json
      eventHandlers:
        - event: CampaignCreated(indexed bytes32,indexed bytes32,indexed address,string,uint8,uint256,uint256,uint256,uint256)
          handler: handleCampaignCreated
        - event: CampaignUpdated(indexed bytes32,string,string,uint256,uint256,uint256,uint256,uint256)
          handler: handleCampaignUpdated
        - event: CampaignStateChanged(indexed bytes32,uint8,uint8,uint256)
          handler: handleCampaignStateChanged
        - event: ContributionMade(indexed bytes32,indexed address,uint256,uint256,uint256)
          handler: handleContributionMade
        - event: CampaignFinalized(indexed bytes32,uint8,uint256,uint256,uint256)
          handler: handleCampaignFinalized
        - event: RewardsDistributed(indexed bytes32,indexed address,uint256,uint256,uint256)
          handler: handleRewardsDistributed
        - event: ContributionRefunded(indexed bytes32,indexed address,uint256,uint256)
          handler: handleContributionRefunded
        - event: ProtocolFeeCollected(indexed bytes32,indexed address,uint256,uint256)
          handler: handleProtocolFeeCollected
      file: ./src/flow.ts

  # Signal Module - Governance & Proposals
  - kind: ethereum
    name: Signal
    network: localhost
    source:
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9"
      abi: Signal
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Proposal
        - Vote
        - Delegation
      abis:
        - name: Signal
          file: ./abis/Signal.json
      eventHandlers:
        - event: ProposalCreated(indexed bytes32,indexed bytes32,indexed address,string,uint8,uint8,uint8,uint256,uint256,uint256)
          handler: handleProposalCreated
        - event: ProposalStateChanged(indexed bytes32,uint8,uint8,uint256)
          handler: handleProposalStateChanged
        - event: VoteCast(indexed bytes32,indexed address,uint8,uint256,string,uint256)
          handler: handleVoteCast
        - event: ProposalExecuted(indexed bytes32,bool,bytes,uint256)
          handler: handleProposalExecuted
        - event: ProposalCancelled(indexed bytes32,indexed address,uint256)
          handler: handleProposalCancelled
        - event: VotingPowerDelegated(indexed address,indexed address,uint256,uint256)
          handler: handleVotingPowerDelegated
        - event: VotingPowerUndelegated(indexed address,indexed address,uint256,uint256)
          handler: handleVotingPowerUndelegated
      file: ./src/signal.ts

  # Sense Module - Identity & Reputation
  - kind: ethereum
    name: Sense
    network: localhost
    source:
      address: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9"
      abi: Sense
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Profile
        - Reputation
        - Achievement
        - Feedback
      abis:
        - name: Sense
          file: ./abis/Sense.json
      eventHandlers:
        - event: ProfileCreated(indexed bytes32,indexed address,indexed bytes32,string,uint256)
          handler: handleProfileCreated
        - event: ProfileUpdated(indexed bytes32,string,uint256)
          handler: handleProfileUpdated
        - event: ReputationUpdated(indexed bytes32,indexed uint8,int256,indexed bytes32,address,uint256,uint256)
          handler: handleReputationUpdated
        - event: AchievementGranted(indexed bytes32,indexed bytes32,string,uint256,address,uint256)
          handler: handleAchievementGranted
        - event: FeedbackSubmitted(indexed bytes32,indexed bytes32,indexed address,uint8,uint8,uint256)
          handler: handleFeedbackSubmitted
      file: ./src/sense.ts

# Signal and Sense modules will be added later
# Currently focusing on core functionality: Registry, Control, and Flow
