name: Solidity Tests

on:
  push:
    branches: [ main, develop, feat/* ]
    paths:
      - 'packages/contracts-solidity/**'
      - 'packages/shared/**'
      - '.github/workflows/solidity-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'packages/contracts-solidity/**'
      - 'packages/shared/**'
      - '.github/workflows/solidity-tests.yml'

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  test:
    name: Run Solidity Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared package
        run: |
          cd packages/shared
          pnpm build

      - name: Compile contracts
        run: |
          cd packages/contracts-solidity
          pnpm build

      - name: Check contract sizes
        run: |
          cd packages/contracts-solidity
          npx hardhat size-contracts

      - name: Run security analysis
        run: |
          cd packages/contracts-solidity
          # Install slither if not available
          pip3 install slither-analyzer || echo "Slither not available, skipping"
          slither . --exclude-informational --exclude-low || echo "Slither analysis completed with warnings"

      - name: Run tests
        run: |
          cd packages/contracts-solidity
          pnpm test

      - name: Run tests with coverage
        run: |
          cd packages/contracts-solidity
          pnpm test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./packages/contracts-solidity/coverage/lcov.info
          flags: solidity
          name: solidity-coverage
          fail_ci_if_error: false

      - name: Run gas report
        run: |
          cd packages/contracts-solidity
          REPORT_GAS=true pnpm test

      - name: Check for compilation warnings
        run: |
          cd packages/contracts-solidity
          npx hardhat compile 2>&1 | tee compile.log
          if grep -q "Warning" compile.log; then
            echo "⚠️ Compilation warnings found:"
            grep "Warning" compile.log
            exit 1
          fi

      - name: Verify deployment script
        run: |
          cd packages/contracts-solidity
          # Dry run deployment to check for issues
          npx hardhat run scripts/deploy.ts --network localhost &
          DEPLOY_PID=$!
          sleep 5
          kill $DEPLOY_PID || true

      - name: Generate test report
        if: always()
        run: |
          cd packages/contracts-solidity
          echo "# Test Results" > test-results.md
          echo "" >> test-results.md
          echo "## Contract Sizes" >> test-results.md
          npx hardhat size-contracts >> test-results.md
          echo "" >> test-results.md
          echo "## Test Coverage" >> test-results.md
          if [ -f coverage/coverage-summary.json ]; then
            echo "Coverage report available in artifacts" >> test-results.md
          fi

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            packages/contracts-solidity/coverage/
            packages/contracts-solidity/test-results.md
            packages/contracts-solidity/compile.log

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install security tools
        run: |
          pip3 install slither-analyzer
          npm install -g @crytic/echidna

      - name: Run Slither analysis
        run: |
          cd packages/contracts-solidity
          slither . --json slither-report.json || true

      - name: Run Mythril analysis
        run: |
          cd packages/contracts-solidity
          # Install mythril
          pip3 install mythril || echo "Mythril installation failed"
          # Run mythril on key contracts
          myth analyze contracts/core/Registry.sol || echo "Mythril analysis completed"

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            packages/contracts-solidity/slither-report.json
            packages/contracts-solidity/mythril-report.txt

  deploy-test:
    name: Test Deployment
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Start Hardhat node
        run: |
          cd packages/contracts-solidity
          npx hardhat node &
          HARDHAT_PID=$!
          echo "HARDHAT_PID=$HARDHAT_PID" >> $GITHUB_ENV
          sleep 10

      - name: Deploy contracts
        run: |
          cd packages/contracts-solidity
          npx hardhat run scripts/deploy.ts --network localhost

      - name: Run deployment tests
        run: |
          cd packages/contracts-solidity
          npx hardhat run scripts/test-interactions.ts --network localhost

      - name: Stop Hardhat node
        if: always()
        run: |
          kill $HARDHAT_PID || true

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, security-audit, deploy-test]
    if: always()

    steps:
      - name: Notify success
        if: needs.test.result == 'success'
        run: |
          echo "✅ All Solidity tests passed!"
          echo "Contract compilation: ✅"
          echo "Unit tests: ✅"
          echo "Coverage report: ✅"
          echo "Security analysis: ✅"

      - name: Notify failure
        if: needs.test.result == 'failure'
        run: |
          echo "❌ Solidity tests failed!"
          echo "Please check the logs and fix the issues."
          exit 1
